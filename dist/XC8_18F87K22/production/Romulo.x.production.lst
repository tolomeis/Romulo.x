

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Oct 25 10:54:25 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.41
    56                           ; Generated 25/01/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F24K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  001516                     __pidataCOMRAM:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _vel_SX
    95  001516  02BC               	dw	700
    96                           
    97                           ;initializer for _vel_DX
    98  001518  02C8               	dw	712
    99                           
   100                           	psect	nvCOMRAM
   101  00003E                     __pnvCOMRAM:
   102                           	opt stack 0
   103  00003E                     _timer1ReloadVal:
   104                           	opt stack 0
   105  00003E                     	ds	2
   106  0000                     _CCPTMRS0bits	set	3913
   107  0000                     _CCPTMRS1bits	set	3912
   108  0000                     _CCPR4H	set	3929
   109  0000                     _CCPR4L	set	3928
   110  0000                     _CCP4CON	set	3927
   111  0000                     _ANSELC	set	3898
   112  0000                     _ANSELB	set	3897
   113  0000                     _ANSELA	set	3896
   114  0000                     _TMR1	set	4046
   115  0000                     _INTCONbits	set	4082
   116  0000                     _PORTBbits	set	3969
   117  0000                     _TRISBbits	set	3987
   118  0000                     _TRISAbits	set	3986
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _ADRESH	set	4036
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADCON2	set	4032
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON0	set	4034
   125  0000                     _T2CONbits	set	4026
   126  0000                     _TMR2	set	4028
   127  0000                     _PR2	set	4027
   128  0000                     _T2CON	set	4026
   129  0000                     _CCPR1H	set	4031
   130  0000                     _CCPR1L	set	4030
   131  0000                     _PSTR1CON	set	4025
   132  0000                     _PWM1CON	set	4023
   133  0000                     _ECCP1AS	set	4022
   134  0000                     _CCP1CON	set	4029
   135  0000                     _CCPR2H	set	3944
   136  0000                     _CCPR2L	set	3943
   137  0000                     _PSTR2CON	set	3939
   138  0000                     _PWM2CON	set	3941
   139  0000                     _ECCP2AS	set	3940
   140  0000                     _CCP2CON	set	3942
   141  0000                     _T1GCONbits	set	4044
   142  0000                     _T1CONbits	set	4045
   143  0000                     _PIR1bits	set	3998
   144  0000                     _TMR1L	set	4046
   145  0000                     _TMR1H	set	4047
   146  0000                     _T1GCON	set	4044
   147  0000                     _T1CON	set	4045
   148  0000                     _PIR4bits	set	3963
   149  0000                     _OSCTUNE	set	3995
   150  0000                     _OSCCON2	set	4050
   151  0000                     _OSCCON	set	4051
   152  0000                     _INTCON2bits	set	4081
   153  0000                     _TRISC	set	3988
   154  0000                     _LATC	set	3979
   155  0000                     _WPUB	set	3937
   156  0000                     _TRISB	set	3987
   157  0000                     _LATB	set	3978
   158  0000                     _TRISA	set	3986
   159  0000                     _LATA	set	3977
   160  0000                     _INT1IE	set	32643
   161  0000                     _INT1IP	set	32646
   162  0000                     _INTEDG1	set	32653
   163  0000                     _LATC6	set	31838
   164  0000                     _LATC3	set	31835
   165  0000                     _LATC5	set	31837
   166  0000                     _LATC4	set	31836
   167  0000                     _LATC7	set	31839
   168  0000                     _LATA3	set	31819
   169  0000                     _LATA4	set	31820
   170  0000                     _LATA2	set	31818
   171  0000                     _LATA1	set	31817
   172  0000                     _LATA0	set	31816
   173  0000                     _LATC0	set	31832
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  001280                     __pcinit:
   179                           	opt stack 0
   180  001280                     start_initialization:
   181                           	opt stack 0
   182  001280                     __initialization:
   183                           	opt stack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (4 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  001280  0E16               	movlw	low __pidataCOMRAM
   188  001282  6EF6               	movwf	tblptrl,c
   189  001284  0E15               	movlw	high __pidataCOMRAM
   190  001286  6EF7               	movwf	tblptrh,c
   191  001288  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  00128A  6EF8               	movwf	tblptru,c
   193  00128C  EE00  F03A         	lfsr	0,__pdataCOMRAM
   194  001290  EE10 F004          	lfsr	1,4
   195  001294                     copy_data0:
   196  001294  0009               	tblrd		*+
   197  001296  CFF5 FFEE          	movff	tablat,postinc0
   198  00129A  50E5               	movf	postdec1,w,c
   199  00129C  50E1               	movf	fsr1l,w,c
   200  00129E  E1FA               	bnz	copy_data0
   201                           
   202                           ; Clear objects allocated to BANK0 (4 bytes)
   203  0012A0  0100               	movlb	0
   204  0012A2  6B94               	clrf	(__pbssBANK0+3)& (0+255),b
   205  0012A4  6B93               	clrf	(__pbssBANK0+2)& (0+255),b
   206  0012A6  6B92               	clrf	(__pbssBANK0+1)& (0+255),b
   207  0012A8  6B91               	clrf	__pbssBANK0& (0+255),b
   208                           
   209                           ; Clear objects allocated to COMRAM (20 bytes)
   210  0012AA  EE00  F026         	lfsr	0,__pbssCOMRAM
   211  0012AE  0E14               	movlw	20
   212  0012B0                     clear_0:
   213  0012B0  6AEE               	clrf	postinc0,c
   214  0012B2  06E8               	decf	wreg,f,c
   215  0012B4  E1FD               	bnz	clear_0
   216  0012B6                     end_of_initialization:
   217                           	opt stack 0
   218  0012B6                     __end_of__initialization:
   219                           	opt stack 0
   220  0012B6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   221  0012B8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   222  0012BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   223  0012BC  6EF8               	movwf	tblptru,c
   224  0012BE  0100               	movlb	0
   225  0012C0  EF55  F000         	goto	_main	;jump to C main() function
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	bssCOMRAM
   236  000026                     __pbssCOMRAM:
   237                           	opt stack 0
   238  000026                     _i:
   239                           	opt stack 0
   240  000026                     	ds	2
   241  000028                     _V_posteriore:
   242                           	opt stack 0
   243  000028                     	ds	2
   244  00002A                     _V_frontale:
   245                           	opt stack 0
   246  00002A                     	ds	2
   247  00002C                     _msec_10:
   248                           	opt stack 0
   249  00002C                     	ds	2
   250  00002E                     _T:
   251                           	opt stack 0
   252  00002E                     	ds	2
   253  000030                     _deltaV:
   254                           	opt stack 0
   255  000030                     	ds	2
   256  000032                     _V_batt:
   257                           	opt stack 0
   258  000032                     	ds	2
   259  000034                     _bluPC:
   260                           	opt stack 0
   261  000034                     	ds	2
   262  000036                     _verdePC:
   263                           	opt stack 0
   264  000036                     	ds	2
   265  000038                     _rossoPC:
   266                           	opt stack 0
   267  000038                     	ds	2
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	dataCOMRAM
   278  00003A                     __pdataCOMRAM:
   279                           	opt stack 0
   280  00003A                     _vel_SX:
   281                           	opt stack 0
   282  00003A                     	ds	2
   283  00003C                     _vel_DX:
   284                           	opt stack 0
   285  00003C                     	ds	2
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bssBANK0
   296  000091                     __pbssBANK0:
   297                           	opt stack 0
   298  000091                     _V_pulsantiera:
   299                           	opt stack 0
   300  000091                     	ds	2
   301  000093                     _goal_color:
   302                           	opt stack 0
   303  000093                     	ds	1
   304  000094                     _colore:
   305                           	opt stack 0
   306  000094                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	cstackBANK0
   317  000060                     __pcstackBANK0:
   318                           	opt stack 0
   319  000060                     ??___ftpack:
   320  000060                     ??_compara:
   321  000060                     ??___fttol:
   322  000060                     ?___lwdiv:
   323                           	opt stack 0
   324  000060                     ___lwdiv@dividend:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x0
   328  000060                     	ds	2
   329  000062                     _compara$971:
   330                           	opt stack 0
   331  000062                     ___lwdiv@divisor:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  000062                     	ds	1
   336  000063                     ?___ftmul:
   337                           	opt stack 0
   338  000063                     ?___lwtoft:
   339                           	opt stack 0
   340  000063                     ___lwtoft@c:
   341                           	opt stack 0
   342  000063                     ___ftmul@f1:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0x3
   346  000063                     	ds	1
   347  000064                     ___lwdiv@counter:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x4
   351  000064                     	ds	1
   352  000065                     ___fttol@sign1:
   353                           	opt stack 0
   354  000065                     ___lwdiv@quotient:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x5
   358  000065                     	ds	1
   359  000066                     ___ftge@ff1:
   360                           	opt stack 0
   361  000066                     ___ftmul@f2:
   362                           	opt stack 0
   363  000066                     ___fttol@lval:
   364                           	opt stack 0
   365                           
   366                           ; 4 bytes @ 0x6
   367  000066                     	ds	1
   368  000067                     delay_mS@m_sec:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x7
   372  000067                     	ds	2
   373  000069                     ??___ftmul:
   374  000069                     ??_taratura:
   375  000069                     ??_controllaColore:
   376  000069                     ___ftge@ff2:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x9
   380  000069                     	ds	1
   381  00006A                     ___fttol@exp1:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0xA
   385  00006A                     	ds	1
   386  00006B                     EPWM2_LoadDutyValue@dutyValue:
   387                           	opt stack 0
   388  00006B                     EPWM1_LoadDutyValue@dutyValue:
   389                           	opt stack 0
   390  00006B                     taratura@v_sensori:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0xB
   394  00006B                     	ds	1
   395  00006C                     ??___ftge:
   396  00006C                     ___ftmul@exp:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0xC
   400  00006C                     	ds	1
   401  00006D                     ??_EPWM2_LoadDutyValue:
   402  00006D                     ??_EPWM1_LoadDutyValue:
   403  00006D                     ___ftmul@f3_as_product:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0xD
   407  00006D                     	ds	2
   408  00006F                     ??_taraturaIR:
   409  00006F                     ??_stopM:
   410                           
   411                           ; 1 bytes @ 0xF
   412  00006F                     	ds	1
   413  000070                     ___ftmul@cntr:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x10
   417  000070                     	ds	1
   418  000071                     ___ftmul@sign:
   419                           	opt stack 0
   420  000071                     taraturaIR@soglia:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x11
   424  000071                     	ds	1
   425  000072                     ?___ftadd:
   426                           	opt stack 0
   427  000072                     ___ftadd@f1:
   428                           	opt stack 0
   429                           
   430                           ; 3 bytes @ 0x12
   431  000072                     	ds	1
   432  000073                     taraturaIR@i:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x13
   436  000073                     	ds	2
   437  000075                     taraturaIR@s:
   438                           	opt stack 0
   439  000075                     ___ftadd@f2:
   440                           	opt stack 0
   441                           
   442                           ; 3 bytes @ 0x15
   443  000075                     	ds	3
   444  000078                     ??___ftadd:
   445                           
   446                           ; 1 bytes @ 0x18
   447  000078                     	ds	3
   448  00007B                     ___ftadd@sign:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x1B
   452  00007B                     	ds	1
   453  00007C                     ___ftadd@exp2:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x1C
   457  00007C                     	ds	1
   458  00007D                     ___ftadd@exp1:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x1D
   462  00007D                     	ds	1
   463  00007E                     ?___ftsub:
   464                           	opt stack 0
   465  00007E                     ___ftsub@f1:
   466                           	opt stack 0
   467                           
   468                           ; 3 bytes @ 0x1E
   469  00007E                     	ds	3
   470  000081                     ___ftsub@f2:
   471                           	opt stack 0
   472                           
   473                           ; 3 bytes @ 0x21
   474  000081                     	ds	3
   475  000084                     PID_Linea@vel:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x24
   479  000084                     	ds	2
   480  000086                     ??_PID_Linea:
   481                           
   482                           ; 1 bytes @ 0x26
   483  000086                     	ds	1
   484  000087                     PID_Linea@Ie:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x27
   488  000087                     	ds	3
   489  00008A                     PID_Linea@deltaV:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x2A
   493  00008A                     	ds	3
   494  00008D                     PID_Linea@e:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x2D
   498  00008D                     	ds	3
   499  000090                     main@numLinee:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x30
   503  000090                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           	psect	cstackCOMRAM
   514  000001                     __pcstackCOMRAM:
   515                           	opt stack 0
   516  000001                     ??_high_isr:
   517  000001                     
   518                           ; 1 bytes @ 0x0
   519  000001                     	ds	14
   520  00000F                     ??_low_isr:
   521                           
   522                           ; 1 bytes @ 0xE
   523  00000F                     	ds	17
   524  000020                     ??_sollevaCarrello:
   525  000020                     ??_abbassaCarrello:
   526  000020                     ?_ADC_GetConversion:
   527                           	opt stack 0
   528  000020                     ?___wmul:
   529                           	opt stack 0
   530  000020                     ?___ftpack:
   531                           	opt stack 0
   532  000020                     ?___fttol:
   533                           	opt stack 0
   534  000020                     compara@valore:
   535                           	opt stack 0
   536  000020                     ___wmul@multiplier:
   537                           	opt stack 0
   538  000020                     ___ftpack@arg:
   539                           	opt stack 0
   540  000020                     ___fttol@f1:
   541                           	opt stack 0
   542                           
   543                           ; 3 bytes @ 0x1F
   544  000020                     	ds	1
   545  000021                     sollevaCarrello@p:
   546                           	opt stack 0
   547  000021                     abbassaCarrello@p:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x20
   551  000021                     	ds	1
   552  000022                     ??_ADC_GetConversion:
   553  000022                     abbassaCarrello@p_1014:
   554                           	opt stack 0
   555  000022                     compara@soglia:
   556                           	opt stack 0
   557  000022                     ___wmul@multiplicand:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x21
   561  000022                     	ds	1
   562  000023                     ___ftpack@exp:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x22
   566  000023                     	ds	1
   567  000024                     ADC_GetConversion@channel:
   568                           	opt stack 0
   569  000024                     ___ftpack@sign:
   570                           	opt stack 0
   571  000024                     compara@tolleranza:
   572                           	opt stack 0
   573  000024                     ___wmul@product:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x23
   577  000024                     	ds	1
   578  000025                     ??_delay_mS:
   579  000025                     
   580                           ; 1 bytes @ 0x24
   581  000025                     	ds	1
   582  000026                     tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           ; 1 bytes @ 0x25
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 46 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  numLinee        1   48[BANK0 ] unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   611 ;;      Params:         0       0       0       0
   612 ;;      Locals:         0       1       0       0
   613 ;;      Temps:          0       0       0       0
   614 ;;      Totals:         0       1       0       0
   615 ;;Total ram usage:        1 bytes
   616 ;; Hardware stack levels required when called:    6
   617 ;; This function calls:
   618 ;;		_ADC_GetConversion
   619 ;;		_EPWM1_LoadDutyValue
   620 ;;		_EPWM2_LoadDutyValue
   621 ;;		_InitApp
   622 ;;		_PID_Linea
   623 ;;		_SYSTEM_Initialize
   624 ;;		_abbassaCarrello
   625 ;;		_compara
   626 ;;		_controllaColore
   627 ;;		_delay_mS
   628 ;;		_sollevaCarrello
   629 ;;		_stopM
   630 ;;		_taratura
   631 ;;		_taraturaIR
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  0000AA                     __ptext0:
   639                           	opt stack 0
   640  0000AA                     _main:
   641                           	opt stack 25
   642                           
   643                           ;main.c: 48: SYSTEM_Initialize();
   644                           
   645                           ;incstack = 0
   646  0000AA  EC13  F00A         	call	_SYSTEM_Initialize	;wreg free
   647                           
   648                           ;main.c: 49: InitApp();
   649  0000AE  EC54  F00A         	call	_InitApp	;wreg free
   650                           
   651                           ;main.c: 52: LATC0 = 0;
   652  0000B2  908B               	bcf	3979,0,c	;volatile
   653                           
   654                           ;main.c: 53: LATC7 = 0;
   655  0000B4  9E8B               	bcf	3979,7,c	;volatile
   656                           
   657                           ;main.c: 54: EPWM1_LoadDutyValue(511);
   658  0000B6  0E01               	movlw	1
   659  0000B8  0100               	movlb	0	; () banked
   660  0000BA  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
   661  0000BC  696B               	setf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
   662  0000BE  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   663                           
   664                           ;main.c: 55: EPWM2_LoadDutyValue(511);
   665  0000C2  0E01               	movlw	1
   666  0000C4  0100               	movlb	0	; () banked
   667  0000C6  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
   668  0000C8  696B               	setf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
   669  0000CA  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
   670                           
   671                           ;main.c: 57: T1CONbits.TMR1ON = 0;
   672  0000CE  90CD               	bcf	4045,0,c	;volatile
   673                           
   674                           ;main.c: 58: LATA4= 1;
   675  0000D0  8889               	bsf	3977,4,c	;volatile
   676                           
   677                           ;main.c: 60: TRISBbits.RB1 = 1;
   678  0000D2  8293               	bsf	3987,1,c	;volatile
   679                           
   680                           ;main.c: 61: INTEDG1 = 0;
   681  0000D4  9AF1               	bcf	intcon2,5,c	;volatile
   682                           
   683                           ;main.c: 62: INT1IP = 1;
   684  0000D6  8CF0               	bsf	intcon3,6,c	;volatile
   685                           
   686                           ;main.c: 63: INT1IE = 1;
   687  0000D8  86F0               	bsf	intcon3,3,c	;volatile
   688                           
   689                           ;main.c: 64: (INTCONbits.GIE = 0);
   690  0000DA  9EF2               	bcf	intcon,7,c	;volatile
   691                           
   692                           ;main.c: 68: LATC4=0;
   693  0000DC  988B               	bcf	3979,4,c	;volatile
   694                           
   695                           ;main.c: 69: LATC5=0;
   696  0000DE  9A8B               	bcf	3979,5,c	;volatile
   697                           
   698                           ;main.c: 70: LATC3=0;
   699  0000E0  968B               	bcf	3979,3,c	;volatile
   700                           
   701                           ;main.c: 71: LATC6=0;
   702  0000E2  9C8B               	bcf	3979,6,c	;volatile
   703                           
   704                           ;main.c: 74: uint8_t numLinee = 0;
   705  0000E4  0E00               	movlw	0
   706  0000E6  0100               	movlb	0	; () banked
   707  0000E8  6F90               	movwf	main@numLinee& (0+255),b
   708                           
   709                           ; BSR set to: 0
   710                           ;main.c: 75: taraturaIR();
   711  0000EA  EC8C  F005         	call	_taraturaIR	;wreg free
   712  0000EE                     l3123:
   713                           
   714                           ;main.c: 81: V_pulsantiera = ADC_GetConversion(channel_AN9);
   715  0000EE  0E09               	movlw	9
   716  0000F0  ECD6  F009         	call	_ADC_GetConversion
   717  0000F4  C020  F091         	movff	?_ADC_GetConversion,_V_pulsantiera
   718  0000F8  C021  F092         	movff	?_ADC_GetConversion+1,_V_pulsantiera+1
   719                           
   720                           ;main.c: 85: if(PORTBbits.RB1 == 0 && compara(V_pulsantiera,532,40)){
   721  0000FC  B281               	btfsc	3969,1,c	;volatile
   722  0000FE  D014               	goto	l3131
   723  000100  C091  F020         	movff	_V_pulsantiera,compara@valore
   724  000104  C092  F021         	movff	_V_pulsantiera+1,compara@valore+1
   725  000108  0E02               	movlw	2
   726  00010A  6E23               	movwf	compara@soglia+1,c
   727  00010C  0E14               	movlw	20
   728  00010E  6E22               	movwf	compara@soglia,c
   729  000110  0E00               	movlw	0
   730  000112  6E25               	movwf	compara@tolleranza+1,c
   731  000114  0E28               	movlw	40
   732  000116  6E24               	movwf	compara@tolleranza,c
   733  000118  ECC4  F008         	call	_compara	;wreg free
   734  00011C  0900               	iorlw	0
   735  00011E  B4D8               	btfsc	status,2,c
   736  000120  D003               	goto	l3131
   737                           
   738                           ;main.c: 86: taratura();
   739  000122  EC44  F007         	call	_taratura	;wreg free
   740                           
   741                           ;main.c: 87: }else if(V_pulsantiera <1000){
   742  000126  D7E3               	goto	l3123
   743  000128                     l3131:
   744  000128  0EE8               	movlw	232
   745  00012A  0100               	movlb	0	; () banked
   746  00012C  5D91               	subwf	_V_pulsantiera& (0+255),w,b
   747  00012E  0E03               	movlw	3
   748  000130  0100               	movlb	0	; () banked
   749  000132  5992               	subwfb	(_V_pulsantiera+1)& (0+255),w,b
   750  000134  B0D8               	btfsc	status,0,c
   751  000136  D7DB               	goto	l3123
   752                           
   753                           ; BSR set to: 0
   754                           ;main.c: 88: if(compara(V_pulsantiera,921,40)){
   755  000138  C091  F020         	movff	_V_pulsantiera,compara@valore
   756  00013C  C092  F021         	movff	_V_pulsantiera+1,compara@valore+1
   757  000140  0E03               	movlw	3
   758  000142  6E23               	movwf	compara@soglia+1,c
   759  000144  0E99               	movlw	153
   760  000146  6E22               	movwf	compara@soglia,c
   761  000148  0E00               	movlw	0
   762  00014A  6E25               	movwf	compara@tolleranza+1,c
   763  00014C  0E28               	movlw	40
   764  00014E  6E24               	movwf	compara@tolleranza,c
   765  000150  ECC4  F008         	call	_compara	;wreg free
   766  000154  0900               	iorlw	0
   767  000156  B4D8               	btfsc	status,2,c
   768  000158  D002               	goto	l3137
   769                           
   770                           ;main.c: 89: goal_color = ROSSO;
   771  00015A  0E00               	movlw	0
   772  00015C  D025               	goto	L2
   773  00015E                     l3137:
   774  00015E  C091  F020         	movff	_V_pulsantiera,compara@valore
   775  000162  C092  F021         	movff	_V_pulsantiera+1,compara@valore+1
   776  000166  0E02               	movlw	2
   777  000168  6E23               	movwf	compara@soglia+1,c
   778  00016A  0ED4               	movlw	212
   779  00016C  6E22               	movwf	compara@soglia,c
   780  00016E  0E00               	movlw	0
   781  000170  6E25               	movwf	compara@tolleranza+1,c
   782  000172  0E28               	movlw	40
   783  000174  6E24               	movwf	compara@tolleranza,c
   784  000176  ECC4  F008         	call	_compara	;wreg free
   785  00017A  0900               	iorlw	0
   786  00017C  B4D8               	btfsc	status,2,c
   787  00017E  D002               	goto	l3141
   788                           
   789                           ;main.c: 91: goal_color = VERDE;
   790  000180  0E02               	movlw	2
   791  000182  D012               	goto	L2
   792  000184                     l3141:
   793  000184  C091  F020         	movff	_V_pulsantiera,compara@valore
   794  000188  C092  F021         	movff	_V_pulsantiera+1,compara@valore+1
   795  00018C  0E02               	movlw	2
   796  00018E  6E23               	movwf	compara@soglia+1,c
   797  000190  0E14               	movlw	20
   798  000192  6E22               	movwf	compara@soglia,c
   799  000194  0E00               	movlw	0
   800  000196  6E25               	movwf	compara@tolleranza+1,c
   801  000198  0E28               	movlw	40
   802  00019A  6E24               	movwf	compara@tolleranza,c
   803  00019C  ECC4  F008         	call	_compara	;wreg free
   804  0001A0  0900               	iorlw	0
   805  0001A2  B4D8               	btfsc	status,2,c
   806  0001A4  D003               	goto	l3145
   807                           
   808                           ;main.c: 93: goal_color = BLU;
   809  0001A6  0E01               	movlw	1
   810  0001A8                     L2:
   811  0001A8  0100               	movlb	0	; () banked
   812  0001AA  6F93               	movwf	_goal_color& (0+255),b
   813  0001AC                     l3145:
   814                           
   815                           ;main.c: 94: }
   816                           ;main.c: 98: delay_mS(500);
   817  0001AC  0E01               	movlw	1
   818  0001AE  0100               	movlb	0	; () banked
   819  0001B0  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
   820  0001B2  0EF4               	movlw	244
   821  0001B4  6F67               	movwf	delay_mS@m_sec& (0+255),b
   822  0001B6  ECF4  F008         	call	_delay_mS	;wreg free
   823                           
   824                           ;main.c: 100: EPWM1_LoadDutyValue(514);
   825  0001BA  0E02               	movlw	2
   826  0001BC  0100               	movlb	0	; () banked
   827  0001BE  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
   828  0001C0  0E02               	movlw	2
   829  0001C2  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
   830  0001C4  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   831                           
   832                           ;main.c: 101: EPWM2_LoadDutyValue(514);
   833  0001C8  0E02               	movlw	2
   834  0001CA  0100               	movlb	0	; () banked
   835  0001CC  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
   836  0001CE  0E02               	movlw	2
   837  0001D0  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
   838  0001D2  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
   839                           
   840                           ;main.c: 102: LATC0 = 1;
   841  0001D6  808B               	bsf	3979,0,c	;volatile
   842                           
   843                           ;main.c: 103: EPWM1_LoadDutyValue(700);
   844  0001D8  0E02               	movlw	2
   845  0001DA  0100               	movlb	0	; () banked
   846  0001DC  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
   847  0001DE  0EBC               	movlw	188
   848  0001E0  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
   849  0001E2  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   850                           
   851                           ;main.c: 104: EPWM2_LoadDutyValue(712);
   852  0001E6  0E02               	movlw	2
   853  0001E8  0100               	movlb	0	; () banked
   854  0001EA  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
   855  0001EC  0EC8               	movlw	200
   856  0001EE  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
   857  0001F0  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
   858                           
   859                           ;main.c: 106: PID_Linea(700);
   860  0001F4  0E02               	movlw	2
   861  0001F6  0100               	movlb	0	; () banked
   862  0001F8  6F85               	movwf	(PID_Linea@vel+1)& (0+255),b
   863  0001FA  0EBC               	movlw	188
   864  0001FC  6F84               	movwf	PID_Linea@vel& (0+255),b
   865  0001FE  EC59  F003         	call	_PID_Linea	;wreg free
   866                           
   867                           ;main.c: 110: stopM();
   868  000202  EC62  F009         	call	_stopM	;wreg free
   869                           
   870                           ;main.c: 112: controllaColore();
   871  000206  EC15  F006         	call	_controllaColore	;wreg free
   872                           
   873                           ;main.c: 114: if(colore != goal_color){
   874  00020A  0100               	movlb	0	; () banked
   875  00020C  5193               	movf	_goal_color& (0+255),w,b
   876  00020E  0100               	movlb	0	; () banked
   877  000210  1994               	xorwf	_colore& (0+255),w,b
   878  000212  B4D8               	btfsc	status,2,c
   879  000214  D04A               	goto	l3179
   880                           
   881                           ; BSR set to: 0
   882                           ;main.c: 116: LATC0 = 1;
   883  000216  808B               	bsf	3979,0,c	;volatile
   884                           
   885                           ; BSR set to: 0
   886                           ;main.c: 117: EPWM1_LoadDutyValue(700);
   887  000218  0E02               	movlw	2
   888  00021A  0100               	movlb	0	; () banked
   889  00021C  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
   890  00021E  0EBC               	movlw	188
   891  000220  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
   892  000222  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   893                           
   894                           ;main.c: 118: EPWM2_LoadDutyValue(712);
   895  000226  0E02               	movlw	2
   896  000228  0100               	movlb	0	; () banked
   897  00022A  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
   898  00022C  0EC8               	movlw	200
   899  00022E  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
   900  000230  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
   901                           
   902                           ;main.c: 122: delay_mS(500);
   903  000234  0E01               	movlw	1
   904  000236  0100               	movlb	0	; () banked
   905  000238  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
   906  00023A  0EF4               	movlw	244
   907  00023C  6F67               	movwf	delay_mS@m_sec& (0+255),b
   908  00023E  ECF4  F008         	call	_delay_mS	;wreg free
   909                           
   910                           ;main.c: 124: PID_Linea(700);
   911  000242  0E02               	movlw	2
   912  000244  0100               	movlb	0	; () banked
   913  000246  6F85               	movwf	(PID_Linea@vel+1)& (0+255),b
   914  000248  0EBC               	movlw	188
   915  00024A  6F84               	movwf	PID_Linea@vel& (0+255),b
   916  00024C  EC59  F003         	call	_PID_Linea	;wreg free
   917                           
   918                           ;main.c: 125: stopM();
   919  000250  EC62  F009         	call	_stopM	;wreg free
   920                           
   921                           ;main.c: 127: controllaColore();
   922  000254  EC15  F006         	call	_controllaColore	;wreg free
   923                           
   924                           ;main.c: 131: numLinee++;
   925  000258  0100               	movlb	0	; () banked
   926  00025A  2B90               	incf	main@numLinee& (0+255),f,b
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 132: if(colore != goal_color){
   930  00025C  0100               	movlb	0	; () banked
   931  00025E  5193               	movf	_goal_color& (0+255),w,b
   932  000260  0100               	movlb	0	; () banked
   933  000262  1994               	xorwf	_colore& (0+255),w,b
   934  000264  B4D8               	btfsc	status,2,c
   935  000266  D021               	goto	l3179
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 136: LATC0 = 1;
   939  000268  808B               	bsf	3979,0,c	;volatile
   940                           
   941                           ; BSR set to: 0
   942                           ;main.c: 137: EPWM1_LoadDutyValue(700);
   943  00026A  0E02               	movlw	2
   944  00026C  0100               	movlb	0	; () banked
   945  00026E  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
   946  000270  0EBC               	movlw	188
   947  000272  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
   948  000274  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   949                           
   950                           ;main.c: 138: EPWM2_LoadDutyValue(712);
   951  000278  0E02               	movlw	2
   952  00027A  0100               	movlb	0	; () banked
   953  00027C  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
   954  00027E  0EC8               	movlw	200
   955  000280  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
   956  000282  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
   957                           
   958                           ;main.c: 140: delay_mS(1000);
   959  000286  0E03               	movlw	3
   960  000288  0100               	movlb	0	; () banked
   961  00028A  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
   962  00028C  0EE8               	movlw	232
   963  00028E  6F67               	movwf	delay_mS@m_sec& (0+255),b
   964  000290  ECF4  F008         	call	_delay_mS	;wreg free
   965                           
   966                           ;main.c: 142: PID_Linea(700);
   967  000294  0E02               	movlw	2
   968  000296  0100               	movlb	0	; () banked
   969  000298  6F85               	movwf	(PID_Linea@vel+1)& (0+255),b
   970  00029A  0EBC               	movlw	188
   971  00029C  6F84               	movwf	PID_Linea@vel& (0+255),b
   972  00029E  EC59  F003         	call	_PID_Linea	;wreg free
   973                           
   974                           ;main.c: 143: stopM();
   975  0002A2  EC62  F009         	call	_stopM	;wreg free
   976                           
   977                           ;main.c: 144: numLinee++;
   978  0002A6  0100               	movlb	0	; () banked
   979  0002A8  2B90               	incf	main@numLinee& (0+255),f,b
   980  0002AA                     l3179:
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 145: }
   984                           ;main.c: 146: }
   985                           ;main.c: 154: EPWM1_LoadDutyValue(700);
   986  0002AA  0E02               	movlw	2
   987  0002AC  0100               	movlb	0	; () banked
   988  0002AE  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
   989  0002B0  0EBC               	movlw	188
   990  0002B2  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
   991  0002B4  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
   992                           
   993                           ;main.c: 155: EPWM2_LoadDutyValue(300);
   994  0002B8  0E01               	movlw	1
   995  0002BA  0100               	movlb	0	; () banked
   996  0002BC  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
   997  0002BE  0E2C               	movlw	44
   998  0002C0  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
   999  0002C2  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1000                           
  1001                           ;main.c: 156: LATC0 = 1;
  1002  0002C6  808B               	bsf	3979,0,c	;volatile
  1003                           
  1004                           ;main.c: 157: delay_mS(1900);
  1005  0002C8  0E07               	movlw	7
  1006  0002CA  0100               	movlb	0	; () banked
  1007  0002CC  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1008  0002CE  0E6C               	movlw	108
  1009  0002D0  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1010  0002D2  ECF4  F008         	call	_delay_mS	;wreg free
  1011                           
  1012                           ;main.c: 160: EPWM1_LoadDutyValue(661);
  1013  0002D6  0E02               	movlw	2
  1014  0002D8  0100               	movlb	0	; () banked
  1015  0002DA  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1016  0002DC  0E95               	movlw	149
  1017  0002DE  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1018  0002E0  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1019                           
  1020                           ;main.c: 161: EPWM2_LoadDutyValue(670);
  1021  0002E4  0E02               	movlw	2
  1022  0002E6  0100               	movlb	0	; () banked
  1023  0002E8  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1024  0002EA  0E9E               	movlw	158
  1025  0002EC  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1026  0002EE  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1027                           
  1028                           ;main.c: 162: LATC0 = 1;
  1029  0002F2  808B               	bsf	3979,0,c	;volatile
  1030                           
  1031                           ;main.c: 163: delay_mS(2000);
  1032  0002F4  0E07               	movlw	7
  1033  0002F6  0100               	movlb	0	; () banked
  1034  0002F8  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1035  0002FA  0ED0               	movlw	208
  1036  0002FC  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1037  0002FE  ECF4  F008         	call	_delay_mS	;wreg free
  1038                           
  1039                           ;main.c: 165: stopM();
  1040  000302  EC62  F009         	call	_stopM	;wreg free
  1041                           
  1042                           ;main.c: 166: sollevaCarrello();
  1043  000306  ECA4  F007         	call	_sollevaCarrello	;wreg free
  1044                           
  1045                           ;main.c: 168: EPWM1_LoadDutyValue(361);
  1046  00030A  0E01               	movlw	1
  1047  00030C  0100               	movlb	0	; () banked
  1048  00030E  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1049  000310  0E69               	movlw	105
  1050  000312  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1051  000314  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1052                           
  1053                           ;main.c: 169: EPWM2_LoadDutyValue(372);
  1054  000318  0E01               	movlw	1
  1055  00031A  0100               	movlb	0	; () banked
  1056  00031C  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1057  00031E  0E74               	movlw	116
  1058  000320  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1059  000322  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1060                           
  1061                           ;main.c: 170: LATC0 = 1;
  1062  000326  808B               	bsf	3979,0,c	;volatile
  1063                           
  1064                           ;main.c: 171: delay_mS(1500);
  1065  000328  0E05               	movlw	5
  1066  00032A  0100               	movlb	0	; () banked
  1067  00032C  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1068  00032E  0EDC               	movlw	220
  1069  000330  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1070  000332  ECF4  F008         	call	_delay_mS	;wreg free
  1071                           
  1072                           ;main.c: 172: stopM();
  1073  000336  EC62  F009         	call	_stopM	;wreg free
  1074                           
  1075                           ;main.c: 178: EPWM1_LoadDutyValue(700);
  1076  00033A  0E02               	movlw	2
  1077  00033C  0100               	movlb	0	; () banked
  1078  00033E  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1079  000340  0EBC               	movlw	188
  1080  000342  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1081  000344  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1082                           
  1083                           ;main.c: 179: EPWM2_LoadDutyValue(300);
  1084  000348  0E01               	movlw	1
  1085  00034A  0100               	movlb	0	; () banked
  1086  00034C  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1087  00034E  0E2C               	movlw	44
  1088  000350  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1089  000352  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1090                           
  1091                           ;main.c: 180: LATC0 = 1;
  1092  000356  808B               	bsf	3979,0,c	;volatile
  1093  000358                     l3215:
  1094  000358  0E0D               	movlw	13
  1095  00035A  ECD6  F009         	call	_ADC_GetConversion
  1096  00035E  0E2D               	movlw	45
  1097  000360  5C20               	subwf	?_ADC_GetConversion,w,c
  1098  000362  0E01               	movlw	1
  1099  000364  5821               	subwfb	?_ADC_GetConversion+1,w,c
  1100  000366  A0D8               	btfss	status,0,c
  1101  000368  D7F7               	goto	l3215
  1102                           
  1103                           ;main.c: 183: EPWM1_LoadDutyValue(700);
  1104  00036A  0E02               	movlw	2
  1105  00036C  0100               	movlb	0	; () banked
  1106  00036E  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1107  000370  0EBC               	movlw	188
  1108  000372  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1109  000374  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1110                           
  1111                           ;main.c: 184: EPWM2_LoadDutyValue(712);
  1112  000378  0E02               	movlw	2
  1113  00037A  0100               	movlb	0	; () banked
  1114  00037C  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1115  00037E  0EC8               	movlw	200
  1116  000380  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1117  000382  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1118                           
  1119                           ;main.c: 185: LATC0 = 1;
  1120  000386  808B               	bsf	3979,0,c	;volatile
  1121                           
  1122                           ;main.c: 187: PID_Linea(700);
  1123  000388  0E02               	movlw	2
  1124  00038A  0100               	movlb	0	; () banked
  1125  00038C  6F85               	movwf	(PID_Linea@vel+1)& (0+255),b
  1126  00038E  0EBC               	movlw	188
  1127  000390  6F84               	movwf	PID_Linea@vel& (0+255),b
  1128  000392  EC59  F003         	call	_PID_Linea	;wreg free
  1129                           
  1130                           ;main.c: 190: while (numLinee>0){
  1131  000396  D01F               	goto	l3227
  1132  000398                     l3221:
  1133                           
  1134                           ;main.c: 191: EPWM1_LoadDutyValue(700);
  1135  000398  0E02               	movlw	2
  1136  00039A  0100               	movlb	0	; () banked
  1137  00039C  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1138  00039E  0EBC               	movlw	188
  1139  0003A0  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1140  0003A2  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1141                           
  1142                           ;main.c: 192: EPWM2_LoadDutyValue(712);
  1143  0003A6  0E02               	movlw	2
  1144  0003A8  0100               	movlb	0	; () banked
  1145  0003AA  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1146  0003AC  0EC8               	movlw	200
  1147  0003AE  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1148  0003B0  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1149                           
  1150                           ;main.c: 193: LATC0 = 1;
  1151  0003B4  808B               	bsf	3979,0,c	;volatile
  1152                           
  1153                           ;main.c: 194: delay_mS(350);
  1154  0003B6  0E01               	movlw	1
  1155  0003B8  0100               	movlb	0	; () banked
  1156  0003BA  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1157  0003BC  0E5E               	movlw	94
  1158  0003BE  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1159  0003C0  ECF4  F008         	call	_delay_mS	;wreg free
  1160                           
  1161                           ;main.c: 196: PID_Linea(700);
  1162  0003C4  0E02               	movlw	2
  1163  0003C6  0100               	movlb	0	; () banked
  1164  0003C8  6F85               	movwf	(PID_Linea@vel+1)& (0+255),b
  1165  0003CA  0EBC               	movlw	188
  1166  0003CC  6F84               	movwf	PID_Linea@vel& (0+255),b
  1167  0003CE  EC59  F003         	call	_PID_Linea	;wreg free
  1168                           
  1169                           ;main.c: 197: numLinee--;
  1170  0003D2  0100               	movlb	0	; () banked
  1171  0003D4  0790               	decf	main@numLinee& (0+255),f,b
  1172  0003D6                     l3227:
  1173  0003D6  0100               	movlb	0	; () banked
  1174  0003D8  5190               	movf	main@numLinee& (0+255),w,b
  1175  0003DA  0100               	movlb	0	; () banked
  1176  0003DC  A4D8               	btfss	status,2,c
  1177  0003DE  D7DC               	goto	l3221
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;main.c: 198: }
  1181                           ;main.c: 203: stopM();
  1182                           
  1183                           ; BSR set to: 0
  1184  0003E0  EC62  F009         	call	_stopM	;wreg free
  1185                           
  1186                           ;main.c: 204: abbassaCarrello();
  1187  0003E4  ECF9  F007         	call	_abbassaCarrello	;wreg free
  1188                           
  1189                           ;main.c: 206: EPWM1_LoadDutyValue(300);
  1190  0003E8  0E01               	movlw	1
  1191  0003EA  0100               	movlb	0	; () banked
  1192  0003EC  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1193  0003EE  0E2C               	movlw	44
  1194  0003F0  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1195  0003F2  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1196                           
  1197                           ;main.c: 207: EPWM2_LoadDutyValue(300);
  1198  0003F6  0E01               	movlw	1
  1199  0003F8  0100               	movlb	0	; () banked
  1200  0003FA  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1201  0003FC  0E2C               	movlw	44
  1202  0003FE  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1203  000400  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1204                           
  1205                           ;main.c: 208: LATC0 = 1;
  1206  000404  808B               	bsf	3979,0,c	;volatile
  1207                           
  1208                           ;main.c: 209: delay_mS(2000);
  1209  000406  0E07               	movlw	7
  1210  000408  0100               	movlb	0	; () banked
  1211  00040A  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1212  00040C  0ED0               	movlw	208
  1213  00040E  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1214  000410  ECF4  F008         	call	_delay_mS	;wreg free
  1215                           
  1216                           ;main.c: 210: stopM();
  1217  000414  EC62  F009         	call	_stopM	;wreg free
  1218                           
  1219                           ;main.c: 213: EPWM1_LoadDutyValue(700);
  1220  000418  0E02               	movlw	2
  1221  00041A  0100               	movlb	0	; () banked
  1222  00041C  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1223  00041E  0EBC               	movlw	188
  1224  000420  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1225  000422  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1226                           
  1227                           ;main.c: 214: EPWM2_LoadDutyValue(300);
  1228  000426  0E01               	movlw	1
  1229  000428  0100               	movlb	0	; () banked
  1230  00042A  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1231  00042C  0E2C               	movlw	44
  1232  00042E  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1233  000430  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1234                           
  1235                           ;main.c: 215: LATC0 = 1;
  1236  000434  808B               	bsf	3979,0,c	;volatile
  1237                           
  1238                           ;main.c: 216: delay_mS(4000);
  1239  000436  0E0F               	movlw	15
  1240  000438  0100               	movlb	0	; () banked
  1241  00043A  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1242  00043C  0EA0               	movlw	160
  1243  00043E  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1244  000440  ECF4  F008         	call	_delay_mS	;wreg free
  1245                           
  1246                           ;main.c: 217: stopM();
  1247  000444  EC62  F009         	call	_stopM	;wreg free
  1248  000448  D652               	goto	l3123
  1249  00044A                     __end_of_main:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           intcon	equ	0xFF2
  1256                           intcon2	equ	0xFF1
  1257                           intcon3	equ	0xFF0
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           fsr1l	equ	0xFE1
  1262                           status	equ	0xFD8
  1263                           
  1264 ;; *************** function _taraturaIR *****************
  1265 ;; Defined at:
  1266 ;;		line 172 in file "user.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  s               2   21[BANK0 ] int 
  1271 ;;  i               2   19[BANK0 ] int 
  1272 ;;  soglia          2   17[BANK0 ] int 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1282 ;;      Params:         0       0       0       0
  1283 ;;      Locals:         0       6       0       0
  1284 ;;      Temps:          0       2       0       0
  1285 ;;      Totals:         0       8       0       0
  1286 ;;Total ram usage:        8 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    4
  1289 ;; This function calls:
  1290 ;;		_ADC_GetConversion
  1291 ;;		_EPWM1_LoadDutyValue
  1292 ;;		_EPWM2_LoadDutyValue
  1293 ;;		___ftge
  1294 ;;		___lwtoft
  1295 ;;		___wmul
  1296 ;;		_delay_mS
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text1
  1303  000B18                     __ptext1:
  1304                           	opt stack 0
  1305  000B18                     _taraturaIR:
  1306                           	opt stack 26
  1307                           
  1308                           ;user.c: 173: _delay((unsigned long)((20)*(64000000/4000.0)));
  1309                           
  1310                           ;incstack = 0
  1311  000B18  0E02               	movlw	2
  1312  000B1A  0100               	movlb	0	; () banked
  1313  000B1C  6F70               	movwf	(??_taraturaIR+1)& (0+255),b
  1314  000B1E  0EA0               	movlw	160
  1315  000B20  0100               	movlb	0	; () banked
  1316  000B22  6F6F               	movwf	??_taraturaIR& (0+255),b
  1317  000B24  0E92               	movlw	146
  1318  000B26                     u2477:
  1319  000B26  2EE8               	decfsz	wreg,f,c
  1320  000B28  D7FE               	bra	u2477
  1321  000B2A  2F6F               	decfsz	??_taraturaIR& (0+255),f,b
  1322  000B2C  D7FC               	bra	u2477
  1323  000B2E  2F70               	decfsz	(??_taraturaIR+1)& (0+255),f,b
  1324  000B30  D7FA               	bra	u2477
  1325  000B32  F000               	nop	
  1326                           
  1327                           ;user.c: 174: int i = 0;
  1328  000B34  0E00               	movlw	0
  1329  000B36  0100               	movlb	0	; () banked
  1330  000B38  6F74               	movwf	(taraturaIR@i+1)& (0+255),b
  1331  000B3A  0E00               	movlw	0
  1332  000B3C  6F73               	movwf	taraturaIR@i& (0+255),b
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;user.c: 175: int s;
  1336                           ;user.c: 176: LATC0 = 1;
  1337  000B3E  808B               	bsf	3979,0,c	;volatile
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;user.c: 177: int soglia = ADC_GetConversion(channel_AN13);
  1341  000B40  0E0D               	movlw	13
  1342  000B42  ECD6  F009         	call	_ADC_GetConversion
  1343  000B46  C020  F071         	movff	?_ADC_GetConversion,taraturaIR@soglia
  1344  000B4A  C021  F072         	movff	?_ADC_GetConversion+1,taraturaIR@soglia+1
  1345                           
  1346                           ;user.c: 179: while(ADC_GetConversion(channel_AN13) >= (int) (2.0*1023.0)/5.0){
  1347  000B4E  D04E               	goto	l2987
  1348  000B50                     l2977:
  1349                           
  1350                           ;user.c: 180: s = (2 * (i%2)) - 1;
  1351  000B50  0E01               	movlw	1
  1352  000B52  0100               	movlb	0	; () banked
  1353  000B54  1573               	andwf	taraturaIR@i& (0+255),w,b
  1354  000B56  0100               	movlb	0	; () banked
  1355  000B58  6F6F               	movwf	??_taraturaIR& (0+255),b
  1356  000B5A  0E00               	movlw	0
  1357  000B5C  0100               	movlb	0	; () banked
  1358  000B5E  1574               	andwf	(taraturaIR@i+1)& (0+255),w,b
  1359  000B60  0100               	movlb	0	; () banked
  1360  000B62  6F70               	movwf	(??_taraturaIR+1)& (0+255),b
  1361  000B64  90D8               	bcf	status,0,c
  1362  000B66  0100               	movlb	0	; () banked
  1363  000B68  376F               	rlcf	??_taraturaIR& (0+255),f,b
  1364  000B6A  3770               	rlcf	(??_taraturaIR+1)& (0+255),f,b
  1365  000B6C  0EFF               	movlw	255
  1366  000B6E  0100               	movlb	0	; () banked
  1367  000B70  256F               	addwf	??_taraturaIR& (0+255),w,b
  1368  000B72  0100               	movlb	0	; () banked
  1369  000B74  6F75               	movwf	taraturaIR@s& (0+255),b
  1370  000B76  0EFF               	movlw	255
  1371  000B78  0100               	movlb	0	; () banked
  1372  000B7A  2170               	addwfc	(??_taraturaIR+1)& (0+255),w,b
  1373  000B7C  0100               	movlb	0	; () banked
  1374  000B7E  6F76               	movwf	(taraturaIR@s+1)& (0+255),b
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;user.c: 181: EPWM1_LoadDutyValue(512 + (s*250));
  1378  000B80  C075  F020         	movff	taraturaIR@s,___wmul@multiplier
  1379  000B84  C076  F021         	movff	taraturaIR@s+1,___wmul@multiplier+1
  1380  000B88  0E00               	movlw	0
  1381  000B8A  6E23               	movwf	___wmul@multiplicand+1,c
  1382  000B8C  0EFA               	movlw	250
  1383  000B8E  6E22               	movwf	___wmul@multiplicand,c
  1384  000B90  ECEE  F009         	call	___wmul	;wreg free
  1385  000B94  0E00               	movlw	0
  1386  000B96  2420               	addwf	?___wmul,w,c
  1387  000B98  0100               	movlb	0	; () banked
  1388  000B9A  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  1389  000B9C  0E02               	movlw	2
  1390  000B9E  2021               	addwfc	?___wmul+1,w,c
  1391  000BA0  0100               	movlb	0	; () banked
  1392  000BA2  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  1393  000BA4  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1394                           
  1395                           ;user.c: 182: EPWM2_LoadDutyValue(512 - (s*250));
  1396  000BA8  C075  F020         	movff	taraturaIR@s,___wmul@multiplier
  1397  000BAC  C076  F021         	movff	taraturaIR@s+1,___wmul@multiplier+1
  1398  000BB0  0E00               	movlw	0
  1399  000BB2  6E23               	movwf	___wmul@multiplicand+1,c
  1400  000BB4  0EFA               	movlw	250
  1401  000BB6  6E22               	movwf	___wmul@multiplicand,c
  1402  000BB8  ECEE  F009         	call	___wmul	;wreg free
  1403  000BBC  1E20               	comf	?___wmul,f,c
  1404  000BBE  1E21               	comf	?___wmul+1,f,c
  1405  000BC0  4A20               	infsnz	?___wmul,f,c
  1406  000BC2  2A21               	incf	?___wmul+1,f,c
  1407  000BC4  0E00               	movlw	0
  1408  000BC6  2420               	addwf	?___wmul,w,c
  1409  000BC8  0100               	movlb	0	; () banked
  1410  000BCA  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  1411  000BCC  0E02               	movlw	2
  1412  000BCE  2021               	addwfc	?___wmul+1,w,c
  1413  000BD0  0100               	movlb	0	; () banked
  1414  000BD2  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1415  000BD4  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1416                           
  1417                           ;user.c: 183: delay_mS(1000);
  1418  000BD8  0E03               	movlw	3
  1419  000BDA  0100               	movlb	0	; () banked
  1420  000BDC  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1421  000BDE  0EE8               	movlw	232
  1422  000BE0  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1423  000BE2  ECF4  F008         	call	_delay_mS	;wreg free
  1424                           
  1425                           ;user.c: 184: i++;
  1426  000BE6  0100               	movlb	0	; () banked
  1427  000BE8  4B73               	infsnz	taraturaIR@i& (0+255),f,b
  1428  000BEA  2B74               	incf	(taraturaIR@i+1)& (0+255),f,b
  1429  000BEC                     l2987:
  1430  000BEC  0E0D               	movlw	13
  1431  000BEE  ECD6  F009         	call	_ADC_GetConversion
  1432  000BF2  C020  F063         	movff	?_ADC_GetConversion,___lwtoft@c
  1433  000BF6  C021  F064         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  1434  000BFA  EC01  F00A         	call	___lwtoft	;wreg free
  1435  000BFE  C063  F066         	movff	?___lwtoft,___ftge@ff1
  1436  000C02  C064  F067         	movff	?___lwtoft+1,___ftge@ff1+1
  1437  000C06  C065  F068         	movff	?___lwtoft+2,___ftge@ff1+2
  1438  000C0A  0E9A               	movlw	154
  1439  000C0C  0100               	movlb	0	; () banked
  1440  000C0E  6F69               	movwf	___ftge@ff2& (0+255),b
  1441  000C10  0ECC               	movlw	204
  1442  000C12  0100               	movlb	0	; () banked
  1443  000C14  6F6A               	movwf	(___ftge@ff2+1)& (0+255),b
  1444  000C16  0E43               	movlw	67
  1445  000C18  0100               	movlb	0	; () banked
  1446  000C1A  6F6B               	movwf	(___ftge@ff2+2)& (0+255),b
  1447  000C1C  EC7D  F006         	call	___ftge	;wreg free
  1448  000C20  0100               	movlb	0	; () banked
  1449  000C22  B0D8               	btfsc	status,0,c
  1450  000C24  D795               	goto	l2977
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;user.c: 185: }
  1454                           ;user.c: 186: LATC0 = 0;
  1455  000C26  908B               	bcf	3979,0,c	;volatile
  1456                           
  1457                           ; BSR set to: 0
  1458  000C28  0012               	return		;funcret
  1459  000C2A                     __end_of_taraturaIR:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           intcon	equ	0xFF2
  1466                           intcon2	equ	0xFF1
  1467                           intcon3	equ	0xFF0
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           postdec1	equ	0xFE5
  1471                           fsr1l	equ	0xFE1
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function ___wmul *****************
  1475 ;; Defined at:
  1476 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  multiplier      2   31[COMRAM] unsigned int 
  1479 ;;  multiplicand    2   33[COMRAM] unsigned int 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  product         2   35[COMRAM] unsigned int 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  2   31[COMRAM] unsigned int 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0, prodl, prodh
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1491 ;;      Params:         4       0       0       0
  1492 ;;      Locals:         2       0       0       0
  1493 ;;      Temps:          0       0       0       0
  1494 ;;      Totals:         6       0       0       0
  1495 ;;Total ram usage:        6 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    2
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_taraturaIR
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text2
  1506  0013DC                     __ptext2:
  1507                           	opt stack 0
  1508  0013DC                     ___wmul:
  1509                           	opt stack 27
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;incstack = 0
  1513  0013DC  5020               	movf	___wmul@multiplier,w,c
  1514  0013DE  0222               	mulwf	___wmul@multiplicand,c
  1515  0013E0  CFF3 F024          	movff	prodl,___wmul@product
  1516  0013E4  CFF4 F025          	movff	prodh,___wmul@product+1
  1517  0013E8  5020               	movf	___wmul@multiplier,w,c
  1518  0013EA  0223               	mulwf	___wmul@multiplicand+1,c
  1519  0013EC  50F3               	movf	prodl,w,c
  1520  0013EE  2625               	addwf	___wmul@product+1,f,c
  1521  0013F0  5021               	movf	___wmul@multiplier+1,w,c
  1522  0013F2  0222               	mulwf	___wmul@multiplicand,c
  1523  0013F4  50F3               	movf	prodl,w,c
  1524  0013F6  2625               	addwf	___wmul@product+1,f,c
  1525  0013F8  C024  F020         	movff	___wmul@product,?___wmul
  1526  0013FC  C025  F021         	movff	___wmul@product+1,?___wmul+1
  1527  001400  0012               	return	
  1528  001402                     __end_of___wmul:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           intcon	equ	0xFF2
  1537                           intcon2	equ	0xFF1
  1538                           intcon3	equ	0xFF0
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           postdec1	equ	0xFE5
  1542                           fsr1l	equ	0xFE1
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function ___ftge *****************
  1546 ;; Defined at:
  1547 ;;		line 4 in file "/opt/microchip/xc8/v1.41/sources/common/ftge.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  ff1             3    6[BANK0 ] float 
  1550 ;;  ff2             3    9[BANK0 ] float 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1562 ;;      Params:         0       6       0       0
  1563 ;;      Locals:         0       0       0       0
  1564 ;;      Temps:          0       3       0       0
  1565 ;;      Totals:         0       9       0       0
  1566 ;;Total ram usage:        9 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    2
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_taraturaIR
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text3
  1577  000CFA                     __ptext3:
  1578                           	opt stack 0
  1579  000CFA                     ___ftge:
  1580                           	opt stack 27
  1581                           
  1582                           ;incstack = 0
  1583  000CFA  0100               	movlb	0	; () banked
  1584  000CFC  AF68               	btfss	(___ftge@ff1+2)& (0+255),7,b
  1585  000CFE  D01D               	goto	l2879
  1586                           
  1587                           ; BSR set to: 0
  1588  000D00  C066  F06C         	movff	___ftge@ff1,??___ftge
  1589  000D04  C067  F06D         	movff	___ftge@ff1+1,??___ftge+1
  1590  000D08  C068  F06E         	movff	___ftge@ff1+2,??___ftge+2
  1591  000D0C  0100               	movlb	0	; () banked
  1592  000D0E  1F6C               	comf	??___ftge& (0+255),f,b
  1593  000D10  1F6D               	comf	(??___ftge+1)& (0+255),f,b
  1594  000D12  1F6E               	comf	(??___ftge+2)& (0+255),f,b
  1595  000D14  2B6C               	incf	??___ftge& (0+255),f,b
  1596  000D16  0E00               	movlw	0
  1597  000D18  236D               	addwfc	(??___ftge+1)& (0+255),f,b
  1598  000D1A  236E               	addwfc	(??___ftge+2)& (0+255),f,b
  1599  000D1C  0E00               	movlw	0
  1600  000D1E  0100               	movlb	0	; () banked
  1601  000D20  256C               	addwf	??___ftge& (0+255),w,b
  1602  000D22  0100               	movlb	0	; () banked
  1603  000D24  6F66               	movwf	___ftge@ff1& (0+255),b
  1604  000D26  0E00               	movlw	0
  1605  000D28  0100               	movlb	0	; () banked
  1606  000D2A  216D               	addwfc	(??___ftge+1)& (0+255),w,b
  1607  000D2C  0100               	movlb	0	; () banked
  1608  000D2E  6F67               	movwf	(___ftge@ff1+1)& (0+255),b
  1609  000D30  0E80               	movlw	128
  1610  000D32  0100               	movlb	0	; () banked
  1611  000D34  216E               	addwfc	(??___ftge+2)& (0+255),w,b
  1612  000D36  0100               	movlb	0	; () banked
  1613  000D38  6F68               	movwf	(___ftge@ff1+2)& (0+255),b
  1614  000D3A                     l2879:
  1615                           
  1616                           ; BSR set to: 0
  1617  000D3A  0100               	movlb	0	; () banked
  1618  000D3C  AF6B               	btfss	(___ftge@ff2+2)& (0+255),7,b
  1619  000D3E  D01D               	goto	l2883
  1620                           
  1621                           ; BSR set to: 0
  1622  000D40  C069  F06C         	movff	___ftge@ff2,??___ftge
  1623  000D44  C06A  F06D         	movff	___ftge@ff2+1,??___ftge+1
  1624  000D48  C06B  F06E         	movff	___ftge@ff2+2,??___ftge+2
  1625  000D4C  0100               	movlb	0	; () banked
  1626  000D4E  1F6C               	comf	??___ftge& (0+255),f,b
  1627  000D50  1F6D               	comf	(??___ftge+1)& (0+255),f,b
  1628  000D52  1F6E               	comf	(??___ftge+2)& (0+255),f,b
  1629  000D54  2B6C               	incf	??___ftge& (0+255),f,b
  1630  000D56  0E00               	movlw	0
  1631  000D58  236D               	addwfc	(??___ftge+1)& (0+255),f,b
  1632  000D5A  236E               	addwfc	(??___ftge+2)& (0+255),f,b
  1633  000D5C  0E00               	movlw	0
  1634  000D5E  0100               	movlb	0	; () banked
  1635  000D60  256C               	addwf	??___ftge& (0+255),w,b
  1636  000D62  0100               	movlb	0	; () banked
  1637  000D64  6F69               	movwf	___ftge@ff2& (0+255),b
  1638  000D66  0E00               	movlw	0
  1639  000D68  0100               	movlb	0	; () banked
  1640  000D6A  216D               	addwfc	(??___ftge+1)& (0+255),w,b
  1641  000D6C  0100               	movlb	0	; () banked
  1642  000D6E  6F6A               	movwf	(___ftge@ff2+1)& (0+255),b
  1643  000D70  0E80               	movlw	128
  1644  000D72  0100               	movlb	0	; () banked
  1645  000D74  216E               	addwfc	(??___ftge+2)& (0+255),w,b
  1646  000D76  0100               	movlb	0	; () banked
  1647  000D78  6F6B               	movwf	(___ftge@ff2+2)& (0+255),b
  1648  000D7A                     l2883:
  1649                           
  1650                           ; BSR set to: 0
  1651  000D7A  0E00               	movlw	0
  1652  000D7C  0100               	movlb	0	; () banked
  1653  000D7E  1B66               	xorwf	___ftge@ff1& (0+255),f,b
  1654  000D80  0E00               	movlw	0
  1655  000D82  0100               	movlb	0	; () banked
  1656  000D84  1B67               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  1657  000D86  0E80               	movlw	128
  1658  000D88  0100               	movlb	0	; () banked
  1659  000D8A  1B68               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  1660                           
  1661                           ; BSR set to: 0
  1662  000D8C  0E00               	movlw	0
  1663  000D8E  0100               	movlb	0	; () banked
  1664  000D90  1B69               	xorwf	___ftge@ff2& (0+255),f,b
  1665  000D92  0E00               	movlw	0
  1666  000D94  0100               	movlb	0	; () banked
  1667  000D96  1B6A               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  1668  000D98  0E80               	movlw	128
  1669  000D9A  0100               	movlb	0	; () banked
  1670  000D9C  1B6B               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  1671  000D9E  0100               	movlb	0	; () banked
  1672  000DA0  5169               	movf	___ftge@ff2& (0+255),w,b
  1673  000DA2  0100               	movlb	0	; () banked
  1674  000DA4  5D66               	subwf	___ftge@ff1& (0+255),w,b
  1675  000DA6  0100               	movlb	0	; () banked
  1676  000DA8  516A               	movf	(___ftge@ff2+1)& (0+255),w,b
  1677  000DAA  0100               	movlb	0	; () banked
  1678  000DAC  5967               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  1679  000DAE  0100               	movlb	0	; () banked
  1680  000DB0  516B               	movf	(___ftge@ff2+2)& (0+255),w,b
  1681  000DB2  0100               	movlb	0	; () banked
  1682  000DB4  5968               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  1683  000DB6  B0D8               	btfsc	status,0,c
  1684  000DB8  D002               	goto	l2889
  1685                           
  1686                           ; BSR set to: 0
  1687  000DBA  90D8               	bcf	status,0,c
  1688  000DBC  0012               	return	
  1689  000DBE                     l2889:
  1690                           
  1691                           ; BSR set to: 0
  1692  000DBE  80D8               	bsf	status,0,c
  1693                           
  1694                           ; BSR set to: 0
  1695  000DC0  0012               	return	
  1696  000DC2                     __end_of___ftge:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           prodh	equ	0xFF4
  1703                           prodl	equ	0xFF3
  1704                           intcon	equ	0xFF2
  1705                           intcon2	equ	0xFF1
  1706                           intcon3	equ	0xFF0
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1l	equ	0xFE1
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _taratura *****************
  1714 ;; Defined at:
  1715 ;;		line 190 in file "user.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  v_sensori       2   11[BANK0 ] unsigned int 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1729 ;;      Params:         0       0       0       0
  1730 ;;      Locals:         0       2       0       0
  1731 ;;      Temps:          0       2       0       0
  1732 ;;      Totals:         0       4       0       0
  1733 ;;Total ram usage:        4 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    4
  1736 ;; This function calls:
  1737 ;;		_ADC_GetConversion
  1738 ;;		___lwdiv
  1739 ;;		_delay_mS
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text4
  1746  000E88                     __ptext4:
  1747                           	opt stack 0
  1748  000E88                     _taratura:
  1749                           	opt stack 26
  1750                           
  1751                           ;user.c: 191: LATA0 = 0;
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;incstack = 0
  1755  000E88  9089               	bcf	3977,0,c	;volatile
  1756                           
  1757                           ;user.c: 192: LATA1 = 0;
  1758  000E8A  9289               	bcf	3977,1,c	;volatile
  1759                           
  1760                           ;user.c: 193: LATA2 = 0;
  1761  000E8C  9489               	bcf	3977,2,c	;volatile
  1762                           
  1763                           ;user.c: 196: delay_mS(1000);
  1764  000E8E  0E03               	movlw	3
  1765  000E90  0100               	movlb	0	; () banked
  1766  000E92  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1767  000E94  0EE8               	movlw	232
  1768  000E96  6F67               	movwf	delay_mS@m_sec& (0+255),b
  1769  000E98  ECF4  F008         	call	_delay_mS	;wreg free
  1770                           
  1771                           ;user.c: 197: while(PORTBbits.RB1){
  1772  000E9C  D04E               	goto	l339
  1773  000E9E                     l2993:
  1774                           
  1775                           ;user.c: 198: uint16_t v_sensori = ADC_GetConversion(channel_AN13)/10;
  1776  000E9E  0E0D               	movlw	13
  1777  000EA0  ECD6  F009         	call	_ADC_GetConversion
  1778  000EA4  C020  F060         	movff	?_ADC_GetConversion,___lwdiv@dividend
  1779  000EA8  C021  F061         	movff	?_ADC_GetConversion+1,___lwdiv@dividend+1
  1780  000EAC  0E00               	movlw	0
  1781  000EAE  0100               	movlb	0	; () banked
  1782  000EB0  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1783  000EB2  0E0A               	movlw	10
  1784  000EB4  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1785  000EB6  EC4E  F008         	call	___lwdiv	;wreg free
  1786  000EBA  C060  F06B         	movff	?___lwdiv,taratura@v_sensori
  1787  000EBE  C061  F06C         	movff	?___lwdiv+1,taratura@v_sensori+1
  1788                           
  1789                           ;user.c: 199: switch (v_sensori){
  1790  000EC2  D016               	goto	l2997
  1791  000EC4                     l342:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;user.c: 201: LATA0 = 1;
  1795  000EC4  8089               	bsf	3977,0,c	;volatile
  1796  000EC6  D012               	goto	L7
  1797  000EC8                     l344:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;user.c: 206: LATA0 = 0;
  1801  000EC8  9089               	bcf	3977,0,c	;volatile
  1802  000ECA  D006               	goto	L4
  1803  000ECC                     L3:
  1804                           
  1805                           ;user.c: 208: LATA2 = 0;
  1806  000ECC  9489               	bcf	3977,2,c	;volatile
  1807                           
  1808                           ;user.c: 209: break;
  1809  000ECE  D035               	goto	l339
  1810  000ED0                     l345:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;user.c: 211: LATA0 = 0;
  1814  000ED0  9089               	bcf	3977,0,c	;volatile
  1815                           
  1816                           ;user.c: 212: LATA1 = 0;
  1817  000ED2  9289               	bcf	3977,1,c	;volatile
  1818  000ED4  D005               	goto	L5
  1819  000ED6                     l346:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;user.c: 216: LATA0 = 1;
  1823  000ED6  8089               	bsf	3977,0,c	;volatile
  1824  000ED8                     L4:
  1825                           
  1826                           ;user.c: 217: LATA1 = 1;
  1827  000ED8  8289               	bsf	3977,1,c	;volatile
  1828  000EDA  D7F8               	goto	L3
  1829  000EDC                     l347:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;user.c: 221: LATA0 = 0;
  1833  000EDC  9089               	bcf	3977,0,c	;volatile
  1834  000EDE  D003               	goto	L6
  1835  000EE0                     L5:
  1836                           
  1837                           ;user.c: 223: LATA2 = 1;
  1838  000EE0  8489               	bsf	3977,2,c	;volatile
  1839                           
  1840                           ;user.c: 224: break;
  1841  000EE2  D02B               	goto	l339
  1842  000EE4                     l348:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;user.c: 226: LATA0 = 1;
  1846  000EE4  8089               	bsf	3977,0,c	;volatile
  1847  000EE6                     L6:
  1848                           
  1849                           ;user.c: 227: LATA1 = 1;
  1850  000EE6  8289               	bsf	3977,1,c	;volatile
  1851  000EE8  D7FB               	goto	L5
  1852  000EEA                     l349:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;user.c: 231: LATA0 = 0;
  1856  000EEA  9089               	bcf	3977,0,c	;volatile
  1857  000EEC                     L7:
  1858                           
  1859                           ;user.c: 232: LATA1 = 0;
  1860  000EEC  9289               	bcf	3977,1,c	;volatile
  1861  000EEE  D7EE               	goto	L3
  1862  000EF0                     l2997:
  1863  000EF0  C06B  F069         	movff	taratura@v_sensori,??_taratura
  1864  000EF4  C06C  F06A         	movff	taratura@v_sensori+1,??_taratura+1
  1865                           
  1866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1867                           ; Switch size 1, requested type "space"
  1868                           ; Number of cases is 2, Range of values is 0 to 2
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte            7     4 (average)
  1872                           ;	Chosen strategy is simple_byte
  1873  000EF8  0100               	movlb	0	; () banked
  1874  000EFA  516A               	movf	(??_taratura+1)& (0+255),w,b
  1875  000EFC  0A00               	xorlw	0	; case 0
  1876  000EFE  B4D8               	btfsc	status,2,c
  1877  000F00  D004               	goto	l3295
  1878  000F02  0A02               	xorlw	2	; case 2
  1879  000F04  B4D8               	btfsc	status,2,c
  1880  000F06  D013               	goto	l3297
  1881  000F08  D7F0               	goto	l349
  1882  000F0A                     l3295:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ; Switch size 1, requested type "space"
  1886                           ; Number of cases is 5, Range of values is 16 to 68
  1887                           ; switch strategies available:
  1888                           ; Name         Instructions Cycles
  1889                           ; simple_byte           16     9 (average)
  1890                           ;	Chosen strategy is simple_byte
  1891  000F0A  0100               	movlb	0	; () banked
  1892  000F0C  5169               	movf	??_taratura& (0+255),w,b
  1893  000F0E  0A10               	xorlw	16	; case 16
  1894  000F10  B4D8               	btfsc	status,2,c
  1895  000F12  D7D8               	goto	l342
  1896  000F14  0A0C               	xorlw	12	; case 28
  1897  000F16  B4D8               	btfsc	status,2,c
  1898  000F18  D7D7               	goto	l344
  1899  000F1A  0A34               	xorlw	52	; case 40
  1900  000F1C  B4D8               	btfsc	status,2,c
  1901  000F1E  D7DB               	goto	l346
  1902  000F20  0A1B               	xorlw	27	; case 51
  1903  000F22  B4D8               	btfsc	status,2,c
  1904  000F24  D7D5               	goto	l345
  1905  000F26  0A77               	xorlw	119	; case 68
  1906  000F28  B4D8               	btfsc	status,2,c
  1907  000F2A  D7D8               	goto	l347
  1908  000F2C  D7DE               	goto	l349
  1909  000F2E                     l3297:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ; Switch size 1, requested type "space"
  1913                           ; Number of cases is 1, Range of values is 238 to 238
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte            4     3 (average)
  1917                           ;	Chosen strategy is simple_byte
  1918  000F2E  0100               	movlb	0	; () banked
  1919  000F30  5169               	movf	??_taratura& (0+255),w,b
  1920  000F32  0AEE               	xorlw	238	; case 238
  1921  000F34  B4D8               	btfsc	status,2,c
  1922  000F36  D7D6               	goto	l348
  1923  000F38  D7D8               	goto	l349
  1924  000F3A                     l339:
  1925  000F3A  B281               	btfsc	3969,1,c	;volatile
  1926  000F3C  D7B0               	goto	l2993
  1927                           
  1928                           ;user.c: 236: }
  1929                           ;user.c: 238: LATA0 = 0;
  1930  000F3E  9089               	bcf	3977,0,c	;volatile
  1931                           
  1932                           ;user.c: 239: LATA1 = 0;
  1933  000F40  9289               	bcf	3977,1,c	;volatile
  1934                           
  1935                           ;user.c: 240: LATA2 = 0;
  1936  000F42  9489               	bcf	3977,2,c	;volatile
  1937                           
  1938                           ;user.c: 241: (INTCONbits.GIE = 1);
  1939  000F44  8EF2               	bsf	intcon,7,c	;volatile
  1940  000F46  0012               	return		;funcret
  1941  000F48                     __end_of_taratura:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           intcon	equ	0xFF2
  1950                           intcon2	equ	0xFF1
  1951                           intcon3	equ	0xFF0
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           postdec1	equ	0xFE5
  1955                           fsr1l	equ	0xFE1
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _stopM *****************
  1959 ;; Defined at:
  1960 ;;		line 281 in file "user.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1974 ;;      Params:         0       0       0       0
  1975 ;;      Locals:         0       0       0       0
  1976 ;;      Temps:          0       1       0       0
  1977 ;;      Totals:         0       1       0       0
  1978 ;;Total ram usage:        1 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    3
  1981 ;; This function calls:
  1982 ;;		_EPWM1_LoadDutyValue
  1983 ;;		_EPWM2_LoadDutyValue
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text5
  1990  0012C4                     __ptext5:
  1991                           	opt stack 0
  1992  0012C4                     _stopM:
  1993                           	opt stack 27
  1994                           
  1995                           ;user.c: 282: EPWM1_LoadDutyValue(511);
  1996                           
  1997                           ;incstack = 0
  1998  0012C4  0E01               	movlw	1
  1999  0012C6  0100               	movlb	0	; () banked
  2000  0012C8  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  2001  0012CA  696B               	setf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  2002  0012CC  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  2003                           
  2004                           ;user.c: 283: EPWM2_LoadDutyValue(511);
  2005  0012D0  0E01               	movlw	1
  2006  0012D2  0100               	movlb	0	; () banked
  2007  0012D4  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  2008  0012D6  696B               	setf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  2009  0012D8  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  2010                           
  2011                           ;user.c: 284: _delay((unsigned long)((10)*(64000000/4000.0)));
  2012  0012DC  0ED0               	movlw	208
  2013  0012DE  0100               	movlb	0	; () banked
  2014  0012E0  6F6F               	movwf	??_stopM& (0+255),b
  2015  0012E2  0EC9               	movlw	201
  2016  0012E4                     u2487:
  2017  0012E4  2EE8               	decfsz	wreg,f,c
  2018  0012E6  D7FE               	bra	u2487
  2019  0012E8  2F6F               	decfsz	??_stopM& (0+255),f,b
  2020  0012EA  D7FC               	bra	u2487
  2021  0012EC  D000               	nop2	
  2022                           
  2023                           ;user.c: 285: _delay((unsigned long)((10)*(64000000/4000.0)));
  2024  0012EE  0ED0               	movlw	208
  2025  0012F0  0100               	movlb	0	; () banked
  2026  0012F2  6F6F               	movwf	??_stopM& (0+255),b
  2027  0012F4  0EC9               	movlw	201
  2028  0012F6                     u2497:
  2029  0012F6  2EE8               	decfsz	wreg,f,c
  2030  0012F8  D7FE               	bra	u2497
  2031  0012FA  2F6F               	decfsz	??_stopM& (0+255),f,b
  2032  0012FC  D7FC               	bra	u2497
  2033  0012FE  D000               	nop2	
  2034                           
  2035                           ;user.c: 286: LATC0 = 0;
  2036  001300  908B               	bcf	3979,0,c	;volatile
  2037  001302  0012               	return		;funcret
  2038  001304                     __end_of_stopM:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           intcon	equ	0xFF2
  2047                           intcon2	equ	0xFF1
  2048                           intcon3	equ	0xFF0
  2049                           postinc0	equ	0xFEE
  2050                           wreg	equ	0xFE8
  2051                           postdec1	equ	0xFE5
  2052                           fsr1l	equ	0xFE1
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _sollevaCarrello *****************
  2056 ;; Defined at:
  2057 ;;		line 311 in file "user.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  p               1   32[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2071 ;;      Params:         0       0       0       0
  2072 ;;      Locals:         1       0       0       0
  2073 ;;      Temps:          1       0       0       0
  2074 ;;      Totals:         2       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    2
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text6
  2086  000F48                     __ptext6:
  2087                           	opt stack 0
  2088  000F48                     _sollevaCarrello:
  2089                           	opt stack 28
  2090                           
  2091                           ;user.c: 312: uint8_t p = 0;
  2092                           
  2093                           ;incstack = 0
  2094  000F48  0E00               	movlw	0
  2095  000F4A  6E21               	movwf	sollevaCarrello@p,c
  2096                           
  2097                           ;user.c: 313: for(p=0; p<43;p++)
  2098  000F4C  0E00               	movlw	0
  2099  000F4E  6E21               	movwf	sollevaCarrello@p,c
  2100  000F50                     l2361:
  2101  000F50  0E2A               	movlw	42
  2102  000F52  6421               	cpfsgt	sollevaCarrello@p,c
  2103  000F54  D001               	goto	l374
  2104  000F56  D04B               	goto	l375
  2105  000F58                     l374:
  2106                           
  2107                           ;user.c: 314: {
  2108                           ;user.c: 315: LATC7 = 1;
  2109  000F58  8E8B               	bsf	3979,7,c	;volatile
  2110                           
  2111                           ;user.c: 316: LATC4=0;
  2112  000F5A  988B               	bcf	3979,4,c	;volatile
  2113                           
  2114                           ;user.c: 317: LATC5=1;
  2115  000F5C  8A8B               	bsf	3979,5,c	;volatile
  2116                           
  2117                           ;user.c: 318: LATC3=1;
  2118  000F5E  868B               	bsf	3979,3,c	;volatile
  2119                           
  2120                           ;user.c: 319: LATC6=0;
  2121  000F60  9C8B               	bcf	3979,6,c	;volatile
  2122                           
  2123                           ;user.c: 320: _delay((unsigned long)((10)*(64000000/4000.0)));
  2124  000F62  0ED0               	movlw	208
  2125  000F64  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2126  000F66  0ECA               	movlw	202
  2127  000F68                     u2507:
  2128  000F68  2EE8               	decfsz	wreg,f,c
  2129  000F6A  D7FE               	bra	u2507
  2130  000F6C  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2131  000F6E  D7FC               	bra	u2507
  2132                           
  2133                           ;user.c: 321: _delay((unsigned long)((2)*(64000000/4000.0)));
  2134  000F70  0E2A               	movlw	42
  2135  000F72  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2136  000F74  0E8E               	movlw	142
  2137  000F76                     u2517:
  2138  000F76  2EE8               	decfsz	wreg,f,c
  2139  000F78  D7FE               	bra	u2517
  2140  000F7A  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2141  000F7C  D7FC               	bra	u2517
  2142                           
  2143                           ;user.c: 322: LATC4=0;
  2144  000F7E  988B               	bcf	3979,4,c	;volatile
  2145                           
  2146                           ;user.c: 323: LATC5=0;
  2147  000F80  9A8B               	bcf	3979,5,c	;volatile
  2148                           
  2149                           ;user.c: 324: LATC3=1;
  2150  000F82  868B               	bsf	3979,3,c	;volatile
  2151                           
  2152                           ;user.c: 325: LATC6=1;
  2153  000F84  8C8B               	bsf	3979,6,c	;volatile
  2154                           
  2155                           ;user.c: 326: _delay((unsigned long)((10)*(64000000/4000.0)));
  2156  000F86  0ED0               	movlw	208
  2157  000F88  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2158  000F8A  0ECA               	movlw	202
  2159  000F8C                     u2527:
  2160  000F8C  2EE8               	decfsz	wreg,f,c
  2161  000F8E  D7FE               	bra	u2527
  2162  000F90  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2163  000F92  D7FC               	bra	u2527
  2164                           
  2165                           ;user.c: 327: _delay((unsigned long)((2)*(64000000/4000.0)));
  2166  000F94  0E2A               	movlw	42
  2167  000F96  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2168  000F98  0E8E               	movlw	142
  2169  000F9A                     u2537:
  2170  000F9A  2EE8               	decfsz	wreg,f,c
  2171  000F9C  D7FE               	bra	u2537
  2172  000F9E  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2173  000FA0  D7FC               	bra	u2537
  2174                           
  2175                           ;user.c: 328: LATC4=1;
  2176  000FA2  888B               	bsf	3979,4,c	;volatile
  2177                           
  2178                           ;user.c: 329: LATC5=0;
  2179  000FA4  9A8B               	bcf	3979,5,c	;volatile
  2180                           
  2181                           ;user.c: 330: LATC3=0;
  2182  000FA6  968B               	bcf	3979,3,c	;volatile
  2183                           
  2184                           ;user.c: 331: LATC6=1;
  2185  000FA8  8C8B               	bsf	3979,6,c	;volatile
  2186                           
  2187                           ;user.c: 332: _delay((unsigned long)((10)*(64000000/4000.0)));
  2188  000FAA  0ED0               	movlw	208
  2189  000FAC  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2190  000FAE  0ECA               	movlw	202
  2191  000FB0                     u2547:
  2192  000FB0  2EE8               	decfsz	wreg,f,c
  2193  000FB2  D7FE               	bra	u2547
  2194  000FB4  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2195  000FB6  D7FC               	bra	u2547
  2196                           
  2197                           ;user.c: 333: _delay((unsigned long)((2)*(64000000/4000.0)));
  2198  000FB8  0E2A               	movlw	42
  2199  000FBA  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2200  000FBC  0E8E               	movlw	142
  2201  000FBE                     u2557:
  2202  000FBE  2EE8               	decfsz	wreg,f,c
  2203  000FC0  D7FE               	bra	u2557
  2204  000FC2  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2205  000FC4  D7FC               	bra	u2557
  2206                           
  2207                           ;user.c: 334: LATC4=1;
  2208  000FC6  888B               	bsf	3979,4,c	;volatile
  2209                           
  2210                           ;user.c: 335: LATC5=1;
  2211  000FC8  8A8B               	bsf	3979,5,c	;volatile
  2212                           
  2213                           ;user.c: 336: LATC3=0;
  2214  000FCA  968B               	bcf	3979,3,c	;volatile
  2215                           
  2216                           ;user.c: 337: LATC6=0;
  2217  000FCC  9C8B               	bcf	3979,6,c	;volatile
  2218                           
  2219                           ;user.c: 338: _delay((unsigned long)((10)*(64000000/4000.0)));
  2220  000FCE  0ED0               	movlw	208
  2221  000FD0  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2222  000FD2  0ECA               	movlw	202
  2223  000FD4                     u2567:
  2224  000FD4  2EE8               	decfsz	wreg,f,c
  2225  000FD6  D7FE               	bra	u2567
  2226  000FD8  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2227  000FDA  D7FC               	bra	u2567
  2228                           
  2229                           ;user.c: 339: _delay((unsigned long)((2)*(64000000/4000.0)));
  2230  000FDC  0E2A               	movlw	42
  2231  000FDE  6E20               	movwf	??_sollevaCarrello& (0+255),c
  2232  000FE0  0E8E               	movlw	142
  2233  000FE2                     u2577:
  2234  000FE2  2EE8               	decfsz	wreg,f,c
  2235  000FE4  D7FE               	bra	u2577
  2236  000FE6  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  2237  000FE8  D7FC               	bra	u2577
  2238  000FEA  2A21               	incf	sollevaCarrello@p,f,c
  2239  000FEC  D7B1               	goto	l2361
  2240  000FEE                     l375:
  2241                           
  2242                           ;user.c: 341: }
  2243                           ;user.c: 342: LATC7 = 0;
  2244  000FEE  9E8B               	bcf	3979,7,c	;volatile
  2245  000FF0  0012               	return		;funcret
  2246  000FF2                     __end_of_sollevaCarrello:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           intcon	equ	0xFF2
  2255                           intcon2	equ	0xFF1
  2256                           intcon3	equ	0xFF0
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           postdec1	equ	0xFE5
  2260                           fsr1l	equ	0xFE1
  2261                           status	equ	0xFD8
  2262                           
  2263 ;; *************** function _controllaColore *****************
  2264 ;; Defined at:
  2265 ;;		line 243 in file "user.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2279 ;;      Params:         0       0       0       0
  2280 ;;      Locals:         0       0       0       0
  2281 ;;      Temps:          0       1       0       0
  2282 ;;      Totals:         0       1       0       0
  2283 ;;Total ram usage:        1 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    4
  2286 ;; This function calls:
  2287 ;;		_ADC_GetConversion
  2288 ;;		_delay_mS
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text7
  2295  000C2A                     __ptext7:
  2296                           	opt stack 0
  2297  000C2A                     _controllaColore:
  2298                           	opt stack 26
  2299                           
  2300                           ;user.c: 245: LATA0 = 0;
  2301                           
  2302                           ;incstack = 0
  2303  000C2A  9089               	bcf	3977,0,c	;volatile
  2304                           
  2305                           ;user.c: 246: LATA1 = 1;
  2306  000C2C  8289               	bsf	3977,1,c	;volatile
  2307                           
  2308                           ;user.c: 247: LATA4 = 0;
  2309  000C2E  9889               	bcf	3977,4,c	;volatile
  2310                           
  2311                           ;user.c: 249: LATA2 = 0;
  2312  000C30  9489               	bcf	3977,2,c	;volatile
  2313                           
  2314                           ;user.c: 250: LATA3 = 0;
  2315  000C32  9689               	bcf	3977,3,c	;volatile
  2316                           
  2317                           ;user.c: 252: delay_mS(500);
  2318  000C34  0E01               	movlw	1
  2319  000C36  0100               	movlb	0	; () banked
  2320  000C38  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  2321  000C3A  0EF4               	movlw	244
  2322  000C3C  6F67               	movwf	delay_mS@m_sec& (0+255),b
  2323  000C3E  ECF4  F008         	call	_delay_mS	;wreg free
  2324                           
  2325                           ;user.c: 253: rossoPC = ADC_GetConversion(channel_AN4);
  2326  000C42  0E04               	movlw	4
  2327  000C44  ECD6  F009         	call	_ADC_GetConversion
  2328  000C48  C020  F038         	movff	?_ADC_GetConversion,_rossoPC
  2329  000C4C  C021  F039         	movff	?_ADC_GetConversion+1,_rossoPC+1
  2330                           
  2331                           ;user.c: 256: LATA2 = 0;
  2332  000C50  9489               	bcf	3977,2,c	;volatile
  2333                           
  2334                           ;user.c: 257: LATA3 = 1;
  2335  000C52  8689               	bsf	3977,3,c	;volatile
  2336                           
  2337                           ;user.c: 258: delay_mS(500);
  2338  000C54  0E01               	movlw	1
  2339  000C56  0100               	movlb	0	; () banked
  2340  000C58  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  2341  000C5A  0EF4               	movlw	244
  2342  000C5C  6F67               	movwf	delay_mS@m_sec& (0+255),b
  2343  000C5E  ECF4  F008         	call	_delay_mS	;wreg free
  2344                           
  2345                           ;user.c: 259: bluPC = ADC_GetConversion(channel_AN4);
  2346  000C62  0E04               	movlw	4
  2347  000C64  ECD6  F009         	call	_ADC_GetConversion
  2348  000C68  C020  F034         	movff	?_ADC_GetConversion,_bluPC
  2349  000C6C  C021  F035         	movff	?_ADC_GetConversion+1,_bluPC+1
  2350                           
  2351                           ;user.c: 262: LATA2 = 1;
  2352  000C70  8489               	bsf	3977,2,c	;volatile
  2353                           
  2354                           ;user.c: 263: LATA3 = 1;
  2355  000C72  8689               	bsf	3977,3,c	;volatile
  2356                           
  2357                           ;user.c: 264: delay_mS(500);
  2358  000C74  0E01               	movlw	1
  2359  000C76  0100               	movlb	0	; () banked
  2360  000C78  6F68               	movwf	(delay_mS@m_sec+1)& (0+255),b
  2361  000C7A  0EF4               	movlw	244
  2362  000C7C  6F67               	movwf	delay_mS@m_sec& (0+255),b
  2363  000C7E  ECF4  F008         	call	_delay_mS	;wreg free
  2364                           
  2365                           ;user.c: 265: verdePC = ADC_GetConversion(channel_AN4);
  2366  000C82  0E04               	movlw	4
  2367  000C84  ECD6  F009         	call	_ADC_GetConversion
  2368  000C88  C020  F036         	movff	?_ADC_GetConversion,_verdePC
  2369  000C8C  C021  F037         	movff	?_ADC_GetConversion+1,_verdePC+1
  2370                           
  2371                           ;user.c: 268: LATA4 = 1;
  2372  000C90  8889               	bsf	3977,4,c	;volatile
  2373                           
  2374                           ;user.c: 271: if(rossoPC >= bluPC){
  2375  000C92  5034               	movf	_bluPC,w,c
  2376  000C94  5C38               	subwf	_rossoPC,w,c
  2377  000C96  5039               	movf	_rossoPC+1,w,c
  2378  000C98  0A80               	xorlw	128
  2379  000C9A  0100               	movlb	0	; () banked
  2380  000C9C  6F69               	movwf	??_controllaColore& (0+255),b
  2381  000C9E  5035               	movf	_bluPC+1,w,c
  2382  000CA0  0A80               	xorlw	128
  2383  000CA2  0100               	movlb	0	; () banked
  2384  000CA4  5969               	subwfb	??_controllaColore& (0+255),w,b
  2385  000CA6  A0D8               	btfss	status,0,c
  2386  000CA8  D014               	goto	l3033
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;user.c: 272: if(rossoPC >= verdePC) colore = ROSSO; else colore = VERDE;
  2390  000CAA  5036               	movf	_verdePC,w,c
  2391  000CAC  5C38               	subwf	_rossoPC,w,c
  2392  000CAE  5039               	movf	_rossoPC+1,w,c
  2393  000CB0  0A80               	xorlw	128
  2394  000CB2  0100               	movlb	0	; () banked
  2395  000CB4  6F69               	movwf	??_controllaColore& (0+255),b
  2396  000CB6  5037               	movf	_verdePC+1,w,c
  2397  000CB8  0A80               	xorlw	128
  2398  000CBA  0100               	movlb	0	; () banked
  2399  000CBC  5969               	subwfb	??_controllaColore& (0+255),w,b
  2400  000CBE  A0D8               	btfss	status,0,c
  2401  000CC0  D004               	goto	l3031
  2402                           
  2403                           ; BSR set to: 0
  2404  000CC2  0E00               	movlw	0
  2405  000CC4  0100               	movlb	0	; () banked
  2406  000CC6  6F94               	movwf	_colore& (0+255),b
  2407  000CC8  0012               	return	
  2408  000CCA                     l3031:
  2409                           
  2410                           ; BSR set to: 0
  2411  000CCA  0E02               	movlw	2
  2412  000CCC  0100               	movlb	0	; () banked
  2413  000CCE  6F94               	movwf	_colore& (0+255),b
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;user.c: 273: }else if(bluPC>=verdePC){
  2417  000CD0  0012               	return	
  2418  000CD2                     l3033:
  2419                           
  2420                           ; BSR set to: 0
  2421  000CD2  5036               	movf	_verdePC,w,c
  2422  000CD4  5C34               	subwf	_bluPC,w,c
  2423  000CD6  5035               	movf	_bluPC+1,w,c
  2424  000CD8  0A80               	xorlw	128
  2425  000CDA  0100               	movlb	0	; () banked
  2426  000CDC  6F69               	movwf	??_controllaColore& (0+255),b
  2427  000CDE  5037               	movf	_verdePC+1,w,c
  2428  000CE0  0A80               	xorlw	128
  2429  000CE2  0100               	movlb	0	; () banked
  2430  000CE4  5969               	subwfb	??_controllaColore& (0+255),w,b
  2431  000CE6  A0D8               	btfss	status,0,c
  2432  000CE8  D004               	goto	l3037
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;user.c: 274: colore = BLU;
  2436  000CEA  0E01               	movlw	1
  2437  000CEC  0100               	movlb	0	; () banked
  2438  000CEE  6F94               	movwf	_colore& (0+255),b
  2439                           
  2440                           ;user.c: 275: }else {
  2441  000CF0  0012               	return	
  2442  000CF2                     l3037:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;user.c: 276: colore = VERDE;
  2446  000CF2  0E02               	movlw	2
  2447  000CF4  0100               	movlb	0	; () banked
  2448  000CF6  6F94               	movwf	_colore& (0+255),b
  2449                           
  2450                           ; BSR set to: 0
  2451  000CF8  0012               	return	
  2452  000CFA                     __end_of_controllaColore:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           prodh	equ	0xFF4
  2459                           prodl	equ	0xFF3
  2460                           intcon	equ	0xFF2
  2461                           intcon2	equ	0xFF1
  2462                           intcon3	equ	0xFF0
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           postdec1	equ	0xFE5
  2466                           fsr1l	equ	0xFE1
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _delay_mS *****************
  2470 ;; Defined at:
  2471 ;;		line 383 in file "user.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  m_sec           2    7[BANK0 ] unsigned int 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2485 ;;      Params:         0       2       0       0
  2486 ;;      Locals:         0       0       0       0
  2487 ;;      Temps:          1       0       0       0
  2488 ;;      Totals:         1       2       0       0
  2489 ;;Total ram usage:        3 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    3
  2492 ;; This function calls:
  2493 ;;		___lwdiv
  2494 ;;		_checkBatt
  2495 ;; This function is called by:
  2496 ;;		_taraturaIR
  2497 ;;		_taratura
  2498 ;;		_controllaColore
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text8
  2504  0011E8                     __ptext8:
  2505                           	opt stack 0
  2506  0011E8                     _delay_mS:
  2507                           	opt stack 26
  2508                           
  2509                           ;user.c: 384: msec_10 = m_sec/10;
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;incstack = 0
  2513  0011E8  C067  F060         	movff	delay_mS@m_sec,___lwdiv@dividend
  2514  0011EC  C068  F061         	movff	delay_mS@m_sec+1,___lwdiv@dividend+1
  2515  0011F0  0E00               	movlw	0
  2516  0011F2  0100               	movlb	0	; () banked
  2517  0011F4  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2518  0011F6  0E0A               	movlw	10
  2519  0011F8  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2520  0011FA  EC4E  F008         	call	___lwdiv	;wreg free
  2521  0011FE  C060  F02C         	movff	?___lwdiv,_msec_10
  2522  001202  C061  F02D         	movff	?___lwdiv+1,_msec_10+1
  2523                           
  2524                           ;user.c: 385: for(T = 0; T<=msec_10; T++){
  2525  001206  0E00               	movlw	0
  2526  001208  6E2F               	movwf	_T+1,c
  2527  00120A  0E00               	movlw	0
  2528  00120C  6E2E               	movwf	_T,c
  2529  00120E  D00B               	goto	l2811
  2530  001210                     l2805:
  2531                           
  2532                           ;user.c: 386: _delay((unsigned long)((10)*(64000000/4000.0)));
  2533  001210  0ED0               	movlw	208
  2534  001212  6E25               	movwf	??_delay_mS& (0+255),c
  2535  001214  0ECA               	movlw	202
  2536  001216                     u2587:
  2537  001216  2EE8               	decfsz	wreg,f,c
  2538  001218  D7FE               	bra	u2587
  2539  00121A  2E25               	decfsz	??_delay_mS& (0+255),f,c
  2540  00121C  D7FC               	bra	u2587
  2541                           
  2542                           ;user.c: 387: checkBatt();
  2543  00121E  EC91  F00A         	call	_checkBatt	;wreg free
  2544  001222  4A2E               	infsnz	_T,f,c
  2545  001224  2A2F               	incf	_T+1,f,c
  2546  001226                     l2811:
  2547  001226  502E               	movf	_T,w,c
  2548  001228  5C2C               	subwf	_msec_10,w,c
  2549  00122A  502F               	movf	_T+1,w,c
  2550  00122C  582D               	subwfb	_msec_10+1,w,c
  2551  00122E  A0D8               	btfss	status,0,c
  2552  001230  0012               	return	
  2553  001232  D7EE               	goto	l2805
  2554  001234                     __end_of_delay_mS:
  2555                           	opt stack 0
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           intcon	equ	0xFF2
  2563                           intcon2	equ	0xFF1
  2564                           intcon3	equ	0xFF0
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1l	equ	0xFE1
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _checkBatt *****************
  2572 ;; Defined at:
  2573 ;;		line 298 in file "user.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		None
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2587 ;;      Params:         0       0       0       0
  2588 ;;      Locals:         0       0       0       0
  2589 ;;      Temps:          0       0       0       0
  2590 ;;      Totals:         0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    2
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_delay_mS
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text9
  2602  001522                     __ptext9:
  2603                           	opt stack 0
  2604  001522                     _checkBatt:
  2605                           	opt stack 26
  2606                           
  2607                           ;incstack = 0
  2608  001522  0012               	return		;funcret
  2609  001524                     __end_of_checkBatt:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           prodh	equ	0xFF4
  2616                           prodl	equ	0xFF3
  2617                           intcon	equ	0xFF2
  2618                           intcon2	equ	0xFF1
  2619                           intcon3	equ	0xFF0
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           fsr1l	equ	0xFE1
  2624                           status	equ	0xFD8
  2625                           
  2626 ;; *************** function ___lwdiv *****************
  2627 ;; Defined at:
  2628 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  dividend        2    0[BANK0 ] unsigned int 
  2631 ;;  divisor         2    2[BANK0 ] unsigned int 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  quotient        2    5[BANK0 ] unsigned int 
  2634 ;;  counter         1    4[BANK0 ] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  2    0[BANK0 ] unsigned int 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2644 ;;      Params:         0       4       0       0
  2645 ;;      Locals:         0       3       0       0
  2646 ;;      Temps:          0       0       0       0
  2647 ;;      Totals:         0       7       0       0
  2648 ;;Total ram usage:        7 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    2
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_taratura
  2655 ;;		_delay_mS
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text10
  2660  00109C                     __ptext10:
  2661                           	opt stack 0
  2662  00109C                     ___lwdiv:
  2663                           	opt stack 26
  2664                           
  2665                           ;incstack = 0
  2666  00109C  0E00               	movlw	0
  2667  00109E  0100               	movlb	0	; () banked
  2668  0010A0  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2669  0010A2  0E00               	movlw	0
  2670  0010A4  6F65               	movwf	___lwdiv@quotient& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673  0010A6  0100               	movlb	0	; () banked
  2674  0010A8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2675  0010AA  0100               	movlb	0	; () banked
  2676  0010AC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2677  0010AE  B4D8               	btfsc	status,2,c
  2678  0010B0  D02C               	goto	l898
  2679                           
  2680                           ; BSR set to: 0
  2681  0010B2  0E01               	movlw	1
  2682  0010B4  0100               	movlb	0	; () banked
  2683  0010B6  6F64               	movwf	___lwdiv@counter& (0+255),b
  2684  0010B8  D006               	goto	l2773
  2685  0010BA                     l2771:
  2686                           
  2687                           ; BSR set to: 0
  2688  0010BA  0100               	movlb	0	; () banked
  2689  0010BC  90D8               	bcf	status,0,c
  2690  0010BE  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  2691  0010C0  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2692  0010C2  0100               	movlb	0	; () banked
  2693  0010C4  2B64               	incf	___lwdiv@counter& (0+255),f,b
  2694  0010C6                     l2773:
  2695                           
  2696                           ; BSR set to: 0
  2697  0010C6  0100               	movlb	0	; () banked
  2698  0010C8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2699  0010CA  D7F7               	goto	l2771
  2700  0010CC                     l2775:
  2701                           
  2702                           ; BSR set to: 0
  2703  0010CC  0100               	movlb	0	; () banked
  2704  0010CE  90D8               	bcf	status,0,c
  2705  0010D0  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  2706  0010D2  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2707                           
  2708                           ; BSR set to: 0
  2709  0010D4  0100               	movlb	0	; () banked
  2710  0010D6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2711  0010D8  0100               	movlb	0	; () banked
  2712  0010DA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  2713  0010DC  0100               	movlb	0	; () banked
  2714  0010DE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2715  0010E0  0100               	movlb	0	; () banked
  2716  0010E2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2717  0010E4  A0D8               	btfss	status,0,c
  2718  0010E6  D00A               	goto	l2783
  2719                           
  2720                           ; BSR set to: 0
  2721  0010E8  0100               	movlb	0	; () banked
  2722  0010EA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2723  0010EC  0100               	movlb	0	; () banked
  2724  0010EE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  2725  0010F0  0100               	movlb	0	; () banked
  2726  0010F2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2727  0010F4  0100               	movlb	0	; () banked
  2728  0010F6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2729                           
  2730                           ; BSR set to: 0
  2731  0010F8  0100               	movlb	0	; () banked
  2732  0010FA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  2733  0010FC                     l2783:
  2734                           
  2735                           ; BSR set to: 0
  2736  0010FC  0100               	movlb	0	; () banked
  2737  0010FE  90D8               	bcf	status,0,c
  2738  001100  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2739  001102  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  2740                           
  2741                           ; BSR set to: 0
  2742  001104  0100               	movlb	0	; () banked
  2743  001106  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  2744  001108  D7E1               	goto	l2775
  2745  00110A                     l898:
  2746                           
  2747                           ; BSR set to: 0
  2748  00110A  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  2749  00110E  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2750                           
  2751                           ; BSR set to: 0
  2752  001112  0012               	return		;funcret
  2753  001114                     __end_of___lwdiv:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodh	equ	0xFF4
  2760                           prodl	equ	0xFF3
  2761                           intcon	equ	0xFF2
  2762                           intcon2	equ	0xFF1
  2763                           intcon3	equ	0xFF0
  2764                           postinc0	equ	0xFEE
  2765                           wreg	equ	0xFE8
  2766                           postdec1	equ	0xFE5
  2767                           fsr1l	equ	0xFE1
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _compara *****************
  2771 ;; Defined at:
  2772 ;;		line 66 in file "user.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  valore          2   31[COMRAM] unsigned int 
  2775 ;;  soglia          2   33[COMRAM] unsigned int 
  2776 ;;  tolleranza      2   35[COMRAM] unsigned int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      unsigned char 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2788 ;;      Params:         6       0       0       0
  2789 ;;      Locals:         0       1       0       0
  2790 ;;      Temps:          0       2       0       0
  2791 ;;      Totals:         6       3       0       0
  2792 ;;Total ram usage:        9 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    2
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text11
  2803  001188                     __ptext11:
  2804                           	opt stack 0
  2805  001188                     _compara:
  2806                           	opt stack 28
  2807                           
  2808                           ;user.c: 67: return (soglia - tolleranza <= valore) && (valore <= soglia + tolleranza);
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;incstack = 0
  2812  001188  0E00               	movlw	0
  2813  00118A  0100               	movlb	0	; () banked
  2814  00118C  6F62               	movwf	_compara$971& (0+255),b
  2815                           
  2816                           ; BSR set to: 0
  2817  00118E  C024  F060         	movff	compara@tolleranza,??_compara
  2818  001192  C025  F061         	movff	compara@tolleranza+1,??_compara+1
  2819  001196  0100               	movlb	0	; () banked
  2820  001198  1F60               	comf	??_compara& (0+255),f,b
  2821  00119A  1F61               	comf	(??_compara+1)& (0+255),f,b
  2822  00119C  4B60               	infsnz	??_compara& (0+255),f,b
  2823  00119E  2B61               	incf	(??_compara+1)& (0+255),f,b
  2824  0011A0  5022               	movf	compara@soglia,w,c
  2825  0011A2  0100               	movlb	0	; () banked
  2826  0011A4  2760               	addwf	??_compara& (0+255),f,b
  2827  0011A6  5023               	movf	compara@soglia+1,w,c
  2828  0011A8  0100               	movlb	0	; () banked
  2829  0011AA  2361               	addwfc	(??_compara+1)& (0+255),f,b
  2830  0011AC  0100               	movlb	0	; () banked
  2831  0011AE  5160               	movf	??_compara& (0+255),w,b
  2832  0011B0  5C20               	subwf	compara@valore,w,c
  2833  0011B2  0100               	movlb	0	; () banked
  2834  0011B4  5161               	movf	(??_compara+1)& (0+255),w,b
  2835  0011B6  5821               	subwfb	compara@valore+1,w,c
  2836  0011B8  A0D8               	btfss	status,0,c
  2837  0011BA  D013               	goto	l309
  2838                           
  2839                           ; BSR set to: 0
  2840  0011BC  5024               	movf	compara@tolleranza,w,c
  2841  0011BE  2422               	addwf	compara@soglia,w,c
  2842  0011C0  0100               	movlb	0	; () banked
  2843  0011C2  6F60               	movwf	??_compara& (0+255),b
  2844  0011C4  5025               	movf	compara@tolleranza+1,w,c
  2845  0011C6  2023               	addwfc	compara@soglia+1,w,c
  2846  0011C8  0100               	movlb	0	; () banked
  2847  0011CA  6F61               	movwf	(??_compara+1)& (0+255),b
  2848  0011CC  5020               	movf	compara@valore,w,c
  2849  0011CE  0100               	movlb	0	; () banked
  2850  0011D0  5D60               	subwf	??_compara& (0+255),w,b
  2851  0011D2  5021               	movf	compara@valore+1,w,c
  2852  0011D4  0100               	movlb	0	; () banked
  2853  0011D6  5961               	subwfb	(??_compara+1)& (0+255),w,b
  2854  0011D8  A0D8               	btfss	status,0,c
  2855  0011DA  D003               	goto	l309
  2856                           
  2857                           ; BSR set to: 0
  2858  0011DC  0E01               	movlw	1
  2859  0011DE  0100               	movlb	0	; () banked
  2860  0011E0  6F62               	movwf	_compara$971& (0+255),b
  2861  0011E2                     l309:
  2862                           
  2863                           ; BSR set to: 0
  2864  0011E2  0100               	movlb	0	; () banked
  2865  0011E4  5162               	movf	_compara$971& (0+255),w,b
  2866  0011E6  0012               	return	
  2867  0011E8                     __end_of_compara:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           intcon	equ	0xFF2
  2876                           intcon2	equ	0xFF1
  2877                           intcon3	equ	0xFF0
  2878                           postinc0	equ	0xFEE
  2879                           wreg	equ	0xFE8
  2880                           postdec1	equ	0xFE5
  2881                           fsr1l	equ	0xFE1
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function _abbassaCarrello *****************
  2885 ;; Defined at:
  2886 ;;		line 346 in file "user.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  p               1   33[COMRAM] unsigned char 
  2891 ;;  p               1   32[COMRAM] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2901 ;;      Params:         0       0       0       0
  2902 ;;      Locals:         2       0       0       0
  2903 ;;      Temps:          1       0       0       0
  2904 ;;      Totals:         3       0       0       0
  2905 ;;Total ram usage:        3 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    2
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text12
  2916  000FF2                     __ptext12:
  2917                           	opt stack 0
  2918  000FF2                     _abbassaCarrello:
  2919                           	opt stack 28
  2920                           
  2921                           ;user.c: 347: uint8_t p = 0;
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;incstack = 0
  2925  000FF2  0E00               	movlw	0
  2926  000FF4  6E21               	movwf	abbassaCarrello@p,c
  2927                           
  2928                           ;user.c: 348: for(uint8_t p = 0; p<43;p++)
  2929  000FF6  0E00               	movlw	0
  2930  000FF8  6E22               	movwf	abbassaCarrello@p_1014,c
  2931  000FFA                     l2395:
  2932  000FFA  0E2A               	movlw	42
  2933  000FFC  6422               	cpfsgt	abbassaCarrello@p_1014,c
  2934  000FFE  D001               	goto	l379
  2935  001000  D04B               	goto	l380
  2936  001002                     l379:
  2937                           
  2938                           ;user.c: 349: {
  2939                           ;user.c: 350: LATC7 = 1;
  2940  001002  8E8B               	bsf	3979,7,c	;volatile
  2941                           
  2942                           ;user.c: 351: LATC4=1;
  2943  001004  888B               	bsf	3979,4,c	;volatile
  2944                           
  2945                           ;user.c: 352: LATC5=1;
  2946  001006  8A8B               	bsf	3979,5,c	;volatile
  2947                           
  2948                           ;user.c: 353: LATC3=0;
  2949  001008  968B               	bcf	3979,3,c	;volatile
  2950                           
  2951                           ;user.c: 354: LATC6=0;
  2952  00100A  9C8B               	bcf	3979,6,c	;volatile
  2953                           
  2954                           ;user.c: 355: _delay((unsigned long)((10)*(64000000/4000.0)));
  2955  00100C  0ED0               	movlw	208
  2956  00100E  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2957  001010  0ECA               	movlw	202
  2958  001012                     u2597:
  2959  001012  2EE8               	decfsz	wreg,f,c
  2960  001014  D7FE               	bra	u2597
  2961  001016  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2962  001018  D7FC               	bra	u2597
  2963                           
  2964                           ;user.c: 356: _delay((unsigned long)((2)*(64000000/4000.0)));
  2965  00101A  0E2A               	movlw	42
  2966  00101C  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2967  00101E  0E8E               	movlw	142
  2968  001020                     u2607:
  2969  001020  2EE8               	decfsz	wreg,f,c
  2970  001022  D7FE               	bra	u2607
  2971  001024  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2972  001026  D7FC               	bra	u2607
  2973                           
  2974                           ;user.c: 357: LATC4=1;
  2975  001028  888B               	bsf	3979,4,c	;volatile
  2976                           
  2977                           ;user.c: 358: LATC5=0;
  2978  00102A  9A8B               	bcf	3979,5,c	;volatile
  2979                           
  2980                           ;user.c: 359: LATC3=0;
  2981  00102C  968B               	bcf	3979,3,c	;volatile
  2982                           
  2983                           ;user.c: 360: LATC6=1;
  2984  00102E  8C8B               	bsf	3979,6,c	;volatile
  2985                           
  2986                           ;user.c: 361: _delay((unsigned long)((10)*(64000000/4000.0)));
  2987  001030  0ED0               	movlw	208
  2988  001032  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2989  001034  0ECA               	movlw	202
  2990  001036                     u2617:
  2991  001036  2EE8               	decfsz	wreg,f,c
  2992  001038  D7FE               	bra	u2617
  2993  00103A  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2994  00103C  D7FC               	bra	u2617
  2995                           
  2996                           ;user.c: 362: _delay((unsigned long)((2)*(64000000/4000.0)));
  2997  00103E  0E2A               	movlw	42
  2998  001040  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2999  001042  0E8E               	movlw	142
  3000  001044                     u2627:
  3001  001044  2EE8               	decfsz	wreg,f,c
  3002  001046  D7FE               	bra	u2627
  3003  001048  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  3004  00104A  D7FC               	bra	u2627
  3005                           
  3006                           ;user.c: 363: LATC4=0;
  3007  00104C  988B               	bcf	3979,4,c	;volatile
  3008                           
  3009                           ;user.c: 364: LATC5=0;
  3010  00104E  9A8B               	bcf	3979,5,c	;volatile
  3011                           
  3012                           ;user.c: 365: LATC3=1;
  3013  001050  868B               	bsf	3979,3,c	;volatile
  3014                           
  3015                           ;user.c: 366: LATC6=1;
  3016  001052  8C8B               	bsf	3979,6,c	;volatile
  3017                           
  3018                           ;user.c: 367: _delay((unsigned long)((10)*(64000000/4000.0)));
  3019  001054  0ED0               	movlw	208
  3020  001056  6E20               	movwf	??_abbassaCarrello& (0+255),c
  3021  001058  0ECA               	movlw	202
  3022  00105A                     u2637:
  3023  00105A  2EE8               	decfsz	wreg,f,c
  3024  00105C  D7FE               	bra	u2637
  3025  00105E  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  3026  001060  D7FC               	bra	u2637
  3027                           
  3028                           ;user.c: 368: _delay((unsigned long)((2)*(64000000/4000.0)));
  3029  001062  0E2A               	movlw	42
  3030  001064  6E20               	movwf	??_abbassaCarrello& (0+255),c
  3031  001066  0E8E               	movlw	142
  3032  001068                     u2647:
  3033  001068  2EE8               	decfsz	wreg,f,c
  3034  00106A  D7FE               	bra	u2647
  3035  00106C  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  3036  00106E  D7FC               	bra	u2647
  3037                           
  3038                           ;user.c: 369: LATC4=0;
  3039  001070  988B               	bcf	3979,4,c	;volatile
  3040                           
  3041                           ;user.c: 370: LATC5=1;
  3042  001072  8A8B               	bsf	3979,5,c	;volatile
  3043                           
  3044                           ;user.c: 371: LATC3=1;
  3045  001074  868B               	bsf	3979,3,c	;volatile
  3046                           
  3047                           ;user.c: 372: LATC6=0;
  3048  001076  9C8B               	bcf	3979,6,c	;volatile
  3049                           
  3050                           ;user.c: 373: _delay((unsigned long)((10)*(64000000/4000.0)));
  3051  001078  0ED0               	movlw	208
  3052  00107A  6E20               	movwf	??_abbassaCarrello& (0+255),c
  3053  00107C  0ECA               	movlw	202
  3054  00107E                     u2657:
  3055  00107E  2EE8               	decfsz	wreg,f,c
  3056  001080  D7FE               	bra	u2657
  3057  001082  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  3058  001084  D7FC               	bra	u2657
  3059                           
  3060                           ;user.c: 374: _delay((unsigned long)((2)*(64000000/4000.0)));
  3061  001086  0E2A               	movlw	42
  3062  001088  6E20               	movwf	??_abbassaCarrello& (0+255),c
  3063  00108A  0E8E               	movlw	142
  3064  00108C                     u2667:
  3065  00108C  2EE8               	decfsz	wreg,f,c
  3066  00108E  D7FE               	bra	u2667
  3067  001090  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  3068  001092  D7FC               	bra	u2667
  3069  001094  2A22               	incf	abbassaCarrello@p_1014,f,c
  3070  001096  D7B1               	goto	l2395
  3071  001098                     l380:
  3072                           
  3073                           ;user.c: 377: }
  3074                           ;user.c: 378: LATC7 = 0;
  3075  001098  9E8B               	bcf	3979,7,c	;volatile
  3076  00109A  0012               	return		;funcret
  3077  00109C                     __end_of_abbassaCarrello:
  3078                           	opt stack 0
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           prodh	equ	0xFF4
  3084                           prodl	equ	0xFF3
  3085                           intcon	equ	0xFF2
  3086                           intcon2	equ	0xFF1
  3087                           intcon3	equ	0xFF0
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           postdec1	equ	0xFE5
  3091                           fsr1l	equ	0xFE1
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _SYSTEM_Initialize *****************
  3095 ;; Defined at:
  3096 ;;		line 106 in file "mcc_generated_files/mcc.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3110 ;;      Params:         0       0       0       0
  3111 ;;      Locals:         0       0       0       0
  3112 ;;      Temps:          0       0       0       0
  3113 ;;      Totals:         0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    4
  3117 ;; This function calls:
  3118 ;;		_ADC_Initialize
  3119 ;;		_CCP4_Initialize
  3120 ;;		_EPWM1_Initialize
  3121 ;;		_EPWM2_Initialize
  3122 ;;		_OSCILLATOR_Initialize
  3123 ;;		_PIN_MANAGER_Initialize
  3124 ;;		_TMR1_Initialize
  3125 ;;		_TMR2_Initialize
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text13
  3132  001426                     __ptext13:
  3133                           	opt stack 0
  3134  001426                     _SYSTEM_Initialize:
  3135                           	opt stack 26
  3136                           
  3137                           ;mcc.c: 108: OSCILLATOR_Initialize();
  3138                           
  3139                           ;incstack = 0
  3140  001426  EC84  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  3141                           
  3142                           ;mcc.c: 109: PIN_MANAGER_Initialize();
  3143  00142A  ECBE  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  3144                           
  3145                           ;mcc.c: 110: ADC_Initialize();
  3146  00142E  EC70  F00A         	call	_ADC_Initialize	;wreg free
  3147                           
  3148                           ;mcc.c: 111: TMR2_Initialize();
  3149  001432  EC7B  F00A         	call	_TMR2_Initialize	;wreg free
  3150                           
  3151                           ;mcc.c: 112: EPWM1_Initialize();
  3152  001436  EC44  F00A         	call	_EPWM1_Initialize	;wreg free
  3153                           
  3154                           ;mcc.c: 113: EPWM2_Initialize();
  3155  00143A  EC34  F00A         	call	_EPWM2_Initialize	;wreg free
  3156                           
  3157                           ;mcc.c: 114: TMR1_Initialize();
  3158  00143E  EC24  F00A         	call	_TMR1_Initialize	;wreg free
  3159                           
  3160                           ;mcc.c: 115: CCP4_Initialize();
  3161  001442  EC63  F00A         	call	_CCP4_Initialize	;wreg free
  3162  001446  0012               	return		;funcret
  3163  001448                     __end_of_SYSTEM_Initialize:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           intcon2	equ	0xFF1
  3173                           intcon3	equ	0xFF0
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1l	equ	0xFE1
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _TMR2_Initialize *****************
  3181 ;; Defined at:
  3182 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3196 ;;      Params:         0       0       0       0
  3197 ;;      Locals:         0       0       0       0
  3198 ;;      Temps:          0       0       0       0
  3199 ;;      Totals:         0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    3
  3203 ;; This function calls:
  3204 ;;		_TMR2_StartTimer
  3205 ;; This function is called by:
  3206 ;;		_SYSTEM_Initialize
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text14
  3211  0014F6                     __ptext14:
  3212                           	opt stack 0
  3213  0014F6                     _TMR2_Initialize:
  3214                           	opt stack 26
  3215                           
  3216                           ;tmr2.c: 63: T2CON = 0x02;
  3217                           
  3218                           ;incstack = 0
  3219  0014F6  0E02               	movlw	2
  3220  0014F8  6EBA               	movwf	4026,c	;volatile
  3221                           
  3222                           ;tmr2.c: 66: PR2 = 0xFF;
  3223  0014FA  68BB               	setf	4027,c	;volatile
  3224                           
  3225                           ;tmr2.c: 69: TMR2 = 0x00;
  3226  0014FC  0E00               	movlw	0
  3227  0014FE  6EBC               	movwf	4028,c	;volatile
  3228                           
  3229                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  3230  001500  929E               	bcf	3998,1,c	;volatile
  3231                           
  3232                           ;tmr2.c: 75: TMR2_StartTimer();
  3233  001502  EC8D  F00A         	call	_TMR2_StartTimer	;wreg free
  3234  001506  0012               	return		;funcret
  3235  001508                     __end_of_TMR2_Initialize:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           intcon2	equ	0xFF1
  3245                           intcon3	equ	0xFF0
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postdec1	equ	0xFE5
  3249                           fsr1l	equ	0xFE1
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _TMR2_StartTimer *****************
  3253 ;; Defined at:
  3254 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		None
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3268 ;;      Params:         0       0       0       0
  3269 ;;      Locals:         0       0       0       0
  3270 ;;      Temps:          0       0       0       0
  3271 ;;      Totals:         0       0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    2
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_TMR2_Initialize
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text15
  3283  00151A                     __ptext15:
  3284                           	opt stack 0
  3285  00151A                     _TMR2_StartTimer:
  3286                           	opt stack 26
  3287                           
  3288                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  3289                           
  3290                           ;incstack = 0
  3291  00151A  84BA               	bsf	4026,2,c	;volatile
  3292  00151C  0012               	return		;funcret
  3293  00151E                     __end_of_TMR2_StartTimer:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           intcon	equ	0xFF2
  3302                           intcon2	equ	0xFF1
  3303                           intcon3	equ	0xFF0
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postdec1	equ	0xFE5
  3307                           fsr1l	equ	0xFE1
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _TMR1_Initialize *****************
  3311 ;; Defined at:
  3312 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3326 ;;      Params:         0       0       0       0
  3327 ;;      Locals:         0       0       0       0
  3328 ;;      Temps:          0       0       0       0
  3329 ;;      Totals:         0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    3
  3333 ;; This function calls:
  3334 ;;		_TMR1_StartTimer
  3335 ;; This function is called by:
  3336 ;;		_SYSTEM_Initialize
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text16
  3341  001448                     __ptext16:
  3342                           	opt stack 0
  3343  001448                     _TMR1_Initialize:
  3344                           	opt stack 26
  3345                           
  3346                           ;tmr1.c: 68: T1CON = 0x00;
  3347                           
  3348                           ;incstack = 0
  3349  001448  0E00               	movlw	0
  3350  00144A  6ECD               	movwf	4045,c	;volatile
  3351                           
  3352                           ;tmr1.c: 71: T1GCON = 0x00;
  3353  00144C  0E00               	movlw	0
  3354  00144E  6ECC               	movwf	4044,c	;volatile
  3355                           
  3356                           ;tmr1.c: 74: TMR1H = 0x00;
  3357  001450  0E00               	movlw	0
  3358  001452  6ECF               	movwf	4047,c	;volatile
  3359                           
  3360                           ;tmr1.c: 77: TMR1L = 0x00;
  3361  001454  0E00               	movlw	0
  3362  001456  6ECE               	movwf	4046,c	;volatile
  3363                           
  3364                           ;tmr1.c: 80: timer1ReloadVal=TMR1;
  3365  001458  CFCE F03E          	movff	4046,_timer1ReloadVal	;volatile
  3366  00145C  CFCF F03F          	movff	4047,_timer1ReloadVal+1	;volatile
  3367                           
  3368                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  3369  001460  909E               	bcf	3998,0,c	;volatile
  3370                           
  3371                           ;tmr1.c: 86: TMR1_StartTimer();
  3372  001462  EC8F  F00A         	call	_TMR1_StartTimer	;wreg free
  3373  001466  0012               	return		;funcret
  3374  001468                     __end_of_TMR1_Initialize:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           prodh	equ	0xFF4
  3381                           prodl	equ	0xFF3
  3382                           intcon	equ	0xFF2
  3383                           intcon2	equ	0xFF1
  3384                           intcon3	equ	0xFF0
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1l	equ	0xFE1
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _TMR1_StartTimer *****************
  3392 ;; Defined at:
  3393 ;;		line 89 in file "mcc_generated_files/tmr1.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		None
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3407 ;;      Params:         0       0       0       0
  3408 ;;      Locals:         0       0       0       0
  3409 ;;      Temps:          0       0       0       0
  3410 ;;      Totals:         0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    2
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_TMR1_Initialize
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text17
  3422  00151E                     __ptext17:
  3423                           	opt stack 0
  3424  00151E                     _TMR1_StartTimer:
  3425                           	opt stack 26
  3426                           
  3427                           ;tmr1.c: 92: T1CONbits.TMR1ON = 1;
  3428                           
  3429                           ;incstack = 0
  3430  00151E  80CD               	bsf	4045,0,c	;volatile
  3431  001520  0012               	return		;funcret
  3432  001522                     __end_of_TMR1_StartTimer:
  3433                           	opt stack 0
  3434                           tblptru	equ	0xFF8
  3435                           tblptrh	equ	0xFF7
  3436                           tblptrl	equ	0xFF6
  3437                           tablat	equ	0xFF5
  3438                           prodh	equ	0xFF4
  3439                           prodl	equ	0xFF3
  3440                           intcon	equ	0xFF2
  3441                           intcon2	equ	0xFF1
  3442                           intcon3	equ	0xFF0
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           postdec1	equ	0xFE5
  3446                           fsr1l	equ	0xFE1
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _PIN_MANAGER_Initialize *****************
  3450 ;; Defined at:
  3451 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3465 ;;      Params:         0       0       0       0
  3466 ;;      Locals:         0       0       0       0
  3467 ;;      Temps:          0       0       0       0
  3468 ;;      Totals:         0       0       0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    2
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_SYSTEM_Initialize
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text18
  3480  00137C                     __ptext18:
  3481                           	opt stack 0
  3482  00137C                     _PIN_MANAGER_Initialize:
  3483                           	opt stack 27
  3484                           
  3485                           ;pin_manager.c: 52: LATA = 0x00;
  3486                           
  3487                           ;incstack = 0
  3488  00137C  0E00               	movlw	0
  3489  00137E  6E89               	movwf	3977,c	;volatile
  3490                           
  3491                           ;pin_manager.c: 53: TRISA = 0xFF;
  3492  001380  6892               	setf	3986,c	;volatile
  3493                           
  3494                           ;pin_manager.c: 54: ANSELA = 0x2F;
  3495  001382  0E2F               	movlw	47
  3496  001384  010F               	movlb	15	; () banked
  3497  001386  6F38               	movwf	56,b	;volatile
  3498                           
  3499                           ;pin_manager.c: 56: LATB = 0x00;
  3500  001388  0E00               	movlw	0
  3501  00138A  6E8A               	movwf	3978,c	;volatile
  3502                           
  3503                           ;pin_manager.c: 57: TRISB = 0xFE;
  3504  00138C  0EFE               	movlw	254
  3505  00138E  6E93               	movwf	3987,c	;volatile
  3506                           
  3507                           ;pin_manager.c: 58: ANSELB = 0x3E;
  3508  001390  0E3E               	movlw	62
  3509  001392  010F               	movlb	15	; () banked
  3510  001394  6F39               	movwf	57,b	;volatile
  3511                           
  3512                           ;pin_manager.c: 59: WPUB = 0x00;
  3513  001396  0E00               	movlw	0
  3514  001398  6E61               	movwf	3937,c	;volatile
  3515                           
  3516                           ;pin_manager.c: 61: LATC = 0x00;
  3517  00139A  0E00               	movlw	0
  3518  00139C  6E8B               	movwf	3979,c	;volatile
  3519                           
  3520                           ;pin_manager.c: 62: TRISC = 0xF9;
  3521  00139E  0EF9               	movlw	249
  3522  0013A0  6E94               	movwf	3988,c	;volatile
  3523                           
  3524                           ;pin_manager.c: 63: ANSELC = 0xF8;
  3525  0013A2  0EF8               	movlw	248
  3526  0013A4  010F               	movlb	15	; () banked
  3527  0013A6  6F3A               	movwf	58,b	;volatile
  3528                           
  3529                           ; BSR set to: 15
  3530                           ;pin_manager.c: 65: INTCON2bits.nRBPU = 0x01;
  3531  0013A8  8EF1               	bsf	intcon2,7,c	;volatile
  3532                           
  3533                           ; BSR set to: 15
  3534  0013AA  0012               	return		;funcret
  3535  0013AC                     __end_of_PIN_MANAGER_Initialize:
  3536                           	opt stack 0
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           intcon2	equ	0xFF1
  3545                           intcon3	equ	0xFF0
  3546                           postinc0	equ	0xFEE
  3547                           wreg	equ	0xFE8
  3548                           postdec1	equ	0xFE5
  3549                           fsr1l	equ	0xFE1
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _OSCILLATOR_Initialize *****************
  3553 ;; Defined at:
  3554 ;;		line 118 in file "mcc_generated_files/mcc.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3568 ;;      Params:         0       0       0       0
  3569 ;;      Locals:         0       0       0       0
  3570 ;;      Temps:          0       0       0       0
  3571 ;;      Totals:         0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    2
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_SYSTEM_Initialize
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text19
  3583  001508                     __ptext19:
  3584                           	opt stack 0
  3585  001508                     _OSCILLATOR_Initialize:
  3586                           	opt stack 27
  3587                           
  3588                           ;mcc.c: 121: OSCCON = 0x70;
  3589                           
  3590                           ; BSR set to: 15
  3591                           ;incstack = 0
  3592  001508  0E70               	movlw	112
  3593  00150A  6ED3               	movwf	4051,c	;volatile
  3594                           
  3595                           ;mcc.c: 123: OSCCON2 = 0x04;
  3596  00150C  0E04               	movlw	4
  3597  00150E  6ED2               	movwf	4050,c	;volatile
  3598                           
  3599                           ;mcc.c: 125: OSCTUNE = 0x40;
  3600  001510  0E40               	movlw	64
  3601  001512  6E9B               	movwf	3995,c	;volatile
  3602  001514  0012               	return		;funcret
  3603  001516                     __end_of_OSCILLATOR_Initialize:
  3604                           	opt stack 0
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           intcon2	equ	0xFF1
  3613                           intcon3	equ	0xFF0
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           postdec1	equ	0xFE5
  3617                           fsr1l	equ	0xFE1
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _EPWM2_Initialize *****************
  3621 ;; Defined at:
  3622 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3636 ;;      Params:         0       0       0       0
  3637 ;;      Locals:         0       0       0       0
  3638 ;;      Temps:          0       0       0       0
  3639 ;;      Totals:         0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    2
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_SYSTEM_Initialize
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text20
  3651  001468                     __ptext20:
  3652                           	opt stack 0
  3653  001468                     _EPWM2_Initialize:
  3654                           	opt stack 27
  3655                           
  3656                           ;epwm2.c: 69: CCP2CON = 0x3C;
  3657                           
  3658                           ;incstack = 0
  3659  001468  0E3C               	movlw	60
  3660  00146A  6E66               	movwf	3942,c	;volatile
  3661                           
  3662                           ;epwm2.c: 72: ECCP2AS = 0x00;
  3663  00146C  0E00               	movlw	0
  3664  00146E  6E64               	movwf	3940,c	;volatile
  3665                           
  3666                           ;epwm2.c: 75: PWM2CON = 0x80;
  3667  001470  0E80               	movlw	128
  3668  001472  6E65               	movwf	3941,c	;volatile
  3669                           
  3670                           ;epwm2.c: 78: PSTR2CON = 0x01;
  3671  001474  0E01               	movlw	1
  3672  001476  6E63               	movwf	3939,c	;volatile
  3673                           
  3674                           ;epwm2.c: 81: CCPR2L = 0x7F;
  3675  001478  0E7F               	movlw	127
  3676  00147A  6E67               	movwf	3943,c	;volatile
  3677                           
  3678                           ;epwm2.c: 84: CCPR2H = 0x00;
  3679  00147C  0E00               	movlw	0
  3680  00147E  6E68               	movwf	3944,c	;volatile
  3681                           
  3682                           ;epwm2.c: 88: CCPTMRS0bits.C2TSEL = 0x0;
  3683  001480  0EE7               	movlw	-25
  3684  001482  010F               	movlb	15	; () banked
  3685  001484  1749               	andwf	73,f,b	;volatile
  3686                           
  3687                           ; BSR set to: 15
  3688  001486  0012               	return		;funcret
  3689  001488                     __end_of_EPWM2_Initialize:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           intcon2	equ	0xFF1
  3699                           intcon3	equ	0xFF0
  3700                           postinc0	equ	0xFEE
  3701                           wreg	equ	0xFE8
  3702                           postdec1	equ	0xFE5
  3703                           fsr1l	equ	0xFE1
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _EPWM1_Initialize *****************
  3707 ;; Defined at:
  3708 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3722 ;;      Params:         0       0       0       0
  3723 ;;      Locals:         0       0       0       0
  3724 ;;      Temps:          0       0       0       0
  3725 ;;      Totals:         0       0       0       0
  3726 ;;Total ram usage:        0 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    2
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_SYSTEM_Initialize
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text21
  3737  001488                     __ptext21:
  3738                           	opt stack 0
  3739  001488                     _EPWM1_Initialize:
  3740                           	opt stack 27
  3741                           
  3742                           ;epwm1.c: 69: CCP1CON = 0x3C;
  3743                           
  3744                           ; BSR set to: 15
  3745                           ;incstack = 0
  3746  001488  0E3C               	movlw	60
  3747  00148A  6EBD               	movwf	4029,c	;volatile
  3748                           
  3749                           ;epwm1.c: 72: ECCP1AS = 0x00;
  3750  00148C  0E00               	movlw	0
  3751  00148E  6EB6               	movwf	4022,c	;volatile
  3752                           
  3753                           ;epwm1.c: 75: PWM1CON = 0x80;
  3754  001490  0E80               	movlw	128
  3755  001492  6EB7               	movwf	4023,c	;volatile
  3756                           
  3757                           ;epwm1.c: 78: PSTR1CON = 0x01;
  3758  001494  0E01               	movlw	1
  3759  001496  6EB9               	movwf	4025,c	;volatile
  3760                           
  3761                           ;epwm1.c: 81: CCPR1L = 0x7F;
  3762  001498  0E7F               	movlw	127
  3763  00149A  6EBE               	movwf	4030,c	;volatile
  3764                           
  3765                           ;epwm1.c: 84: CCPR1H = 0x00;
  3766  00149C  0E00               	movlw	0
  3767  00149E  6EBF               	movwf	4031,c	;volatile
  3768                           
  3769                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  3770  0014A0  0EFC               	movlw	-4
  3771  0014A2  010F               	movlb	15	; () banked
  3772  0014A4  1749               	andwf	73,f,b	;volatile
  3773                           
  3774                           ; BSR set to: 15
  3775  0014A6  0012               	return		;funcret
  3776  0014A8                     __end_of_EPWM1_Initialize:
  3777                           	opt stack 0
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           intcon2	equ	0xFF1
  3786                           intcon3	equ	0xFF0
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           postdec1	equ	0xFE5
  3790                           fsr1l	equ	0xFE1
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _CCP4_Initialize *****************
  3794 ;; Defined at:
  3795 ;;		line 58 in file "mcc_generated_files/ccp4.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3809 ;;      Params:         0       0       0       0
  3810 ;;      Locals:         0       0       0       0
  3811 ;;      Temps:          0       0       0       0
  3812 ;;      Totals:         0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_SYSTEM_Initialize
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text22
  3824  0014C6                     __ptext22:
  3825                           	opt stack 0
  3826  0014C6                     _CCP4_Initialize:
  3827                           	opt stack 27
  3828                           
  3829                           ;ccp4.c: 63: CCP4CON = 0x02;
  3830                           
  3831                           ; BSR set to: 15
  3832                           ;incstack = 0
  3833  0014C6  0E02               	movlw	2
  3834  0014C8  010F               	movlb	15	; () banked
  3835  0014CA  6F57               	movwf	87,b	;volatile
  3836                           
  3837                           ;ccp4.c: 66: CCPR4L = 0x00;
  3838  0014CC  0E00               	movlw	0
  3839  0014CE  010F               	movlb	15	; () banked
  3840  0014D0  6F58               	movwf	88,b	;volatile
  3841                           
  3842                           ;ccp4.c: 69: CCPR4H = 0x00;
  3843  0014D2  0E00               	movlw	0
  3844  0014D4  010F               	movlb	15	; () banked
  3845  0014D6  6F59               	movwf	89,b	;volatile
  3846                           
  3847                           ;ccp4.c: 72: CCPTMRS1bits.C4TSEL = 0x0;
  3848  0014D8  0EFC               	movlw	-4
  3849  0014DA  010F               	movlb	15	; () banked
  3850  0014DC  1748               	andwf	72,f,b	;volatile
  3851                           
  3852                           ; BSR set to: 15
  3853  0014DE  0012               	return		;funcret
  3854  0014E0                     __end_of_CCP4_Initialize:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           intcon2	equ	0xFF1
  3864                           intcon3	equ	0xFF0
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           postdec1	equ	0xFE5
  3868                           fsr1l	equ	0xFE1
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function _ADC_Initialize *****************
  3872 ;; Defined at:
  3873 ;;		line 59 in file "mcc_generated_files/adc.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      void 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3887 ;;      Params:         0       0       0       0
  3888 ;;      Locals:         0       0       0       0
  3889 ;;      Temps:          0       0       0       0
  3890 ;;      Totals:         0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_SYSTEM_Initialize
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text23
  3902  0014E0                     __ptext23:
  3903                           	opt stack 0
  3904  0014E0                     _ADC_Initialize:
  3905                           	opt stack 27
  3906                           
  3907                           ;adc.c: 64: ADCON0 = 0x01;
  3908                           
  3909                           ; BSR set to: 15
  3910                           ;incstack = 0
  3911  0014E0  0E01               	movlw	1
  3912  0014E2  6EC2               	movwf	4034,c	;volatile
  3913                           
  3914                           ;adc.c: 67: ADCON1 = 0x80;
  3915  0014E4  0E80               	movlw	128
  3916  0014E6  6EC1               	movwf	4033,c	;volatile
  3917                           
  3918                           ;adc.c: 70: ADCON2 = 0x8E;
  3919  0014E8  0E8E               	movlw	142
  3920  0014EA  6EC0               	movwf	4032,c	;volatile
  3921                           
  3922                           ;adc.c: 73: ADRESL = 0x00;
  3923  0014EC  0E00               	movlw	0
  3924  0014EE  6EC3               	movwf	4035,c	;volatile
  3925                           
  3926                           ;adc.c: 76: ADRESH = 0x00;
  3927  0014F0  0E00               	movlw	0
  3928  0014F2  6EC4               	movwf	4036,c	;volatile
  3929  0014F4  0012               	return		;funcret
  3930  0014F6                     __end_of_ADC_Initialize:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           intcon2	equ	0xFF1
  3940                           intcon3	equ	0xFF0
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           postdec1	equ	0xFE5
  3944                           fsr1l	equ	0xFE1
  3945                           status	equ	0xFD8
  3946                           
  3947 ;; *************** function _PID_Linea *****************
  3948 ;; Defined at:
  3949 ;;		line 150 in file "user.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  vel             2   36[BANK0 ] int 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  e               3   45[BANK0 ] int 
  3954 ;;  deltaV          3   42[BANK0 ] int 
  3955 ;;  Ie              3   39[BANK0 ] int 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3965 ;;      Params:         0       2       0       0
  3966 ;;      Locals:         0       9       0       0
  3967 ;;      Temps:          0       1       0       0
  3968 ;;      Totals:         0      12       0       0
  3969 ;;Total ram usage:       12 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    5
  3972 ;; This function calls:
  3973 ;;		_ADC_GetConversion
  3974 ;;		_EPWM1_LoadDutyValue
  3975 ;;		_EPWM2_LoadDutyValue
  3976 ;;		___ftadd
  3977 ;;		___ftmul
  3978 ;;		___ftsub
  3979 ;;		___fttol
  3980 ;;		___lwtoft
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text24
  3987  0006B2                     __ptext24:
  3988                           	opt stack 0
  3989  0006B2                     _PID_Linea:
  3990                           	opt stack 25
  3991                           
  3992                           ;user.c: 151: EPWM1_LoadDutyValue(vel);
  3993                           
  3994                           ;incstack = 0
  3995  0006B2  C084  F06B         	movff	PID_Linea@vel,EPWM1_LoadDutyValue@dutyValue
  3996  0006B6  C085  F06C         	movff	PID_Linea@vel+1,EPWM1_LoadDutyValue@dutyValue+1
  3997  0006BA  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  3998                           
  3999                           ;user.c: 152: EPWM2_LoadDutyValue(vel);
  4000  0006BE  C084  F06B         	movff	PID_Linea@vel,EPWM2_LoadDutyValue@dutyValue
  4001  0006C2  C085  F06C         	movff	PID_Linea@vel+1,EPWM2_LoadDutyValue@dutyValue+1
  4002  0006C6  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  4003                           
  4004                           ;user.c: 153: LATC0 = 1;
  4005  0006CA  808B               	bsf	3979,0,c	;volatile
  4006                           
  4007                           ;user.c: 154: double e = 0.0;
  4008  0006CC  0E00               	movlw	0
  4009  0006CE  0100               	movlb	0	; () banked
  4010  0006D0  6F8D               	movwf	PID_Linea@e& (0+255),b
  4011  0006D2  0E00               	movlw	0
  4012  0006D4  0100               	movlb	0	; () banked
  4013  0006D6  6F8E               	movwf	(PID_Linea@e+1)& (0+255),b
  4014  0006D8  0E00               	movlw	0
  4015  0006DA  0100               	movlb	0	; () banked
  4016  0006DC  6F8F               	movwf	(PID_Linea@e+2)& (0+255),b
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;user.c: 155: double Ie = 0.0;
  4020  0006DE  0E00               	movlw	0
  4021  0006E0  0100               	movlb	0	; () banked
  4022  0006E2  6F87               	movwf	PID_Linea@Ie& (0+255),b
  4023  0006E4  0E00               	movlw	0
  4024  0006E6  0100               	movlb	0	; () banked
  4025  0006E8  6F88               	movwf	(PID_Linea@Ie+1)& (0+255),b
  4026  0006EA  0E00               	movlw	0
  4027  0006EC  0100               	movlb	0	; () banked
  4028  0006EE  6F89               	movwf	(PID_Linea@Ie+2)& (0+255),b
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;user.c: 157: double deltaV = 0.0;
  4032  0006F0  0E00               	movlw	0
  4033  0006F2  0100               	movlb	0	; () banked
  4034  0006F4  6F8A               	movwf	PID_Linea@deltaV& (0+255),b
  4035  0006F6  0E00               	movlw	0
  4036  0006F8  0100               	movlb	0	; () banked
  4037  0006FA  6F8B               	movwf	(PID_Linea@deltaV+1)& (0+255),b
  4038  0006FC  0E00               	movlw	0
  4039  0006FE  0100               	movlb	0	; () banked
  4040  000700  6F8C               	movwf	(PID_Linea@deltaV+2)& (0+255),b
  4041                           
  4042                           ;user.c: 158: while(ADC_GetConversion(channel_AN13) < ((31/32)*4.25)*(1023/5.0)){
  4043  000702  D0B6               	goto	l2967
  4044  000704                     l2963:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;user.c: 159: e = (double) ADC_GetConversion(channel_AN13);
  4048  000704  0E0D               	movlw	13
  4049  000706  ECD6  F009         	call	_ADC_GetConversion
  4050  00070A  C020  F063         	movff	?_ADC_GetConversion,___lwtoft@c
  4051  00070E  C021  F064         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  4052  000712  EC01  F00A         	call	___lwtoft	;wreg free
  4053  000716  C063  F08D         	movff	?___lwtoft,PID_Linea@e
  4054  00071A  C064  F08E         	movff	?___lwtoft+1,PID_Linea@e+1
  4055  00071E  C065  F08F         	movff	?___lwtoft+2,PID_Linea@e+2
  4056                           
  4057                           ;user.c: 160: e -= (2.0*1023.0)/5.0;
  4058  000722  C08D  F07E         	movff	PID_Linea@e,___ftsub@f1
  4059  000726  C08E  F07F         	movff	PID_Linea@e+1,___ftsub@f1+1
  4060  00072A  C08F  F080         	movff	PID_Linea@e+2,___ftsub@f1+2
  4061  00072E  0E9A               	movlw	154
  4062  000730  0100               	movlb	0	; () banked
  4063  000732  6F81               	movwf	___ftsub@f2& (0+255),b
  4064  000734  0ECC               	movlw	204
  4065  000736  0100               	movlb	0	; () banked
  4066  000738  6F82               	movwf	(___ftsub@f2+1)& (0+255),b
  4067  00073A  0E43               	movlw	67
  4068  00073C  0100               	movlb	0	; () banked
  4069  00073E  6F83               	movwf	(___ftsub@f2+2)& (0+255),b
  4070  000740  EC1A  F009         	call	___ftsub	;wreg free
  4071  000744  C07E  F08D         	movff	?___ftsub,PID_Linea@e
  4072  000748  C07F  F08E         	movff	?___ftsub+1,PID_Linea@e+1
  4073  00074C  C080  F08F         	movff	?___ftsub+2,PID_Linea@e+2
  4074                           
  4075                           ;user.c: 161: Ie += 1*e;
  4076  000750  C087  F072         	movff	PID_Linea@Ie,___ftadd@f1
  4077  000754  C088  F073         	movff	PID_Linea@Ie+1,___ftadd@f1+1
  4078  000758  C089  F074         	movff	PID_Linea@Ie+2,___ftadd@f1+2
  4079  00075C  0E00               	movlw	0
  4080  00075E  0100               	movlb	0	; () banked
  4081  000760  6F66               	movwf	___ftmul@f2& (0+255),b
  4082  000762  0E80               	movlw	128
  4083  000764  0100               	movlb	0	; () banked
  4084  000766  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4085  000768  0E3F               	movlw	63
  4086  00076A  0100               	movlb	0	; () banked
  4087  00076C  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4088  00076E  C08D  F063         	movff	PID_Linea@e,___ftmul@f1
  4089  000772  C08E  F064         	movff	PID_Linea@e+1,___ftmul@f1+1
  4090  000776  C08F  F065         	movff	PID_Linea@e+2,___ftmul@f1+2
  4091  00077A  EC46  F004         	call	___ftmul	;wreg free
  4092  00077E  C063  F075         	movff	?___ftmul,___ftadd@f2
  4093  000782  C064  F076         	movff	?___ftmul+1,___ftadd@f2+1
  4094  000786  C065  F077         	movff	?___ftmul+2,___ftadd@f2+2
  4095  00078A  EC25  F002         	call	___ftadd	;wreg free
  4096  00078E  C072  F087         	movff	?___ftadd,PID_Linea@Ie
  4097  000792  C073  F088         	movff	?___ftadd+1,PID_Linea@Ie+1
  4098  000796  C074  F089         	movff	?___ftadd+2,PID_Linea@Ie+2
  4099                           
  4100                           ;user.c: 162: deltaV = (1.0*e) + (1.0*Ie);
  4101  00079A  0E00               	movlw	0
  4102  00079C  0100               	movlb	0	; () banked
  4103  00079E  6F66               	movwf	___ftmul@f2& (0+255),b
  4104  0007A0  0E80               	movlw	128
  4105  0007A2  0100               	movlb	0	; () banked
  4106  0007A4  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4107  0007A6  0E3F               	movlw	63
  4108  0007A8  0100               	movlb	0	; () banked
  4109  0007AA  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4110  0007AC  C08D  F063         	movff	PID_Linea@e,___ftmul@f1
  4111  0007B0  C08E  F064         	movff	PID_Linea@e+1,___ftmul@f1+1
  4112  0007B4  C08F  F065         	movff	PID_Linea@e+2,___ftmul@f1+2
  4113  0007B8  EC46  F004         	call	___ftmul	;wreg free
  4114  0007BC  C063  F072         	movff	?___ftmul,___ftadd@f1
  4115  0007C0  C064  F073         	movff	?___ftmul+1,___ftadd@f1+1
  4116  0007C4  C065  F074         	movff	?___ftmul+2,___ftadd@f1+2
  4117  0007C8  0E00               	movlw	0
  4118  0007CA  0100               	movlb	0	; () banked
  4119  0007CC  6F66               	movwf	___ftmul@f2& (0+255),b
  4120  0007CE  0E80               	movlw	128
  4121  0007D0  0100               	movlb	0	; () banked
  4122  0007D2  6F67               	movwf	(___ftmul@f2+1)& (0+255),b
  4123  0007D4  0E3F               	movlw	63
  4124  0007D6  0100               	movlb	0	; () banked
  4125  0007D8  6F68               	movwf	(___ftmul@f2+2)& (0+255),b
  4126  0007DA  C087  F063         	movff	PID_Linea@Ie,___ftmul@f1
  4127  0007DE  C088  F064         	movff	PID_Linea@Ie+1,___ftmul@f1+1
  4128  0007E2  C089  F065         	movff	PID_Linea@Ie+2,___ftmul@f1+2
  4129  0007E6  EC46  F004         	call	___ftmul	;wreg free
  4130  0007EA  C063  F075         	movff	?___ftmul,___ftadd@f2
  4131  0007EE  C064  F076         	movff	?___ftmul+1,___ftadd@f2+1
  4132  0007F2  C065  F077         	movff	?___ftmul+2,___ftadd@f2+2
  4133  0007F6  EC25  F002         	call	___ftadd	;wreg free
  4134  0007FA  C072  F08A         	movff	?___ftadd,PID_Linea@deltaV
  4135  0007FE  C073  F08B         	movff	?___ftadd+1,PID_Linea@deltaV+1
  4136  000802  C074  F08C         	movff	?___ftadd+2,PID_Linea@deltaV+2
  4137                           
  4138                           ;user.c: 163: EPWM1_LoadDutyValue(vel +((int) deltaV));
  4139  000806  C08A  F020         	movff	PID_Linea@deltaV,___fttol@f1
  4140  00080A  C08B  F021         	movff	PID_Linea@deltaV+1,___fttol@f1+1
  4141  00080E  C08C  F022         	movff	PID_Linea@deltaV+2,___fttol@f1+2
  4142  000812  ECF5  F004         	call	___fttol	;wreg free
  4143  000816  0100               	movlb	0	; () banked
  4144  000818  5184               	movf	PID_Linea@vel& (0+255),w,b
  4145  00081A  2420               	addwf	?___fttol,w,c
  4146  00081C  0100               	movlb	0	; () banked
  4147  00081E  6F6B               	movwf	EPWM1_LoadDutyValue@dutyValue& (0+255),b
  4148  000820  0100               	movlb	0	; () banked
  4149  000822  5185               	movf	(PID_Linea@vel+1)& (0+255),w,b
  4150  000824  2021               	addwfc	?___fttol+1,w,c
  4151  000826  0100               	movlb	0	; () banked
  4152  000828  6F6C               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)& (0+255),b
  4153  00082A  ECA0  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  4154                           
  4155                           ;user.c: 164: EPWM2_LoadDutyValue(vel -((int) deltaV));
  4156  00082E  C08A  F020         	movff	PID_Linea@deltaV,___fttol@f1
  4157  000832  C08B  F021         	movff	PID_Linea@deltaV+1,___fttol@f1+1
  4158  000836  C08C  F022         	movff	PID_Linea@deltaV+2,___fttol@f1+2
  4159  00083A  ECF5  F004         	call	___fttol	;wreg free
  4160  00083E  1E20               	comf	?___fttol,f,c
  4161  000840  1E21               	comf	?___fttol+1,f,c
  4162  000842  4A20               	infsnz	?___fttol,f,c
  4163  000844  2A21               	incf	?___fttol+1,f,c
  4164  000846  0100               	movlb	0	; () banked
  4165  000848  5184               	movf	PID_Linea@vel& (0+255),w,b
  4166  00084A  2420               	addwf	?___fttol,w,c
  4167  00084C  0100               	movlb	0	; () banked
  4168  00084E  6F6B               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  4169  000850  0100               	movlb	0	; () banked
  4170  000852  5185               	movf	(PID_Linea@vel+1)& (0+255),w,b
  4171  000854  2021               	addwfc	?___fttol+1,w,c
  4172  000856  0100               	movlb	0	; () banked
  4173  000858  6F6C               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  4174  00085A  EC82  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  4175                           
  4176                           ;user.c: 165: _delay((unsigned long)((1)*(64000000/4000.0)));
  4177  00085E  0E15               	movlw	21
  4178  000860  0100               	movlb	0	; () banked
  4179  000862  6F86               	movwf	??_PID_Linea& (0+255),b
  4180  000864  0EC6               	movlw	198
  4181  000866                     u2677:
  4182  000866  2EE8               	decfsz	wreg,f,c
  4183  000868  D7FE               	bra	u2677
  4184  00086A  2F86               	decfsz	??_PID_Linea& (0+255),f,b
  4185  00086C  D7FC               	bra	u2677
  4186  00086E  F000               	nop	
  4187  000870                     l2967:
  4188  000870  0E0D               	movlw	13
  4189  000872  ECD6  F009         	call	_ADC_GetConversion
  4190  000876  C020  F063         	movff	?_ADC_GetConversion,___lwtoft@c
  4191  00087A  C021  F064         	movff	?_ADC_GetConversion+1,___lwtoft@c+1
  4192  00087E  EC01  F00A         	call	___lwtoft	;wreg free
  4193  000882  0100               	movlb	0	; () banked
  4194  000884  BF65               	btfsc	(?___lwtoft+2)& (0+255),7,b
  4195  000886  D73E               	goto	l2963
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;user.c: 168: }
  4199                           ;user.c: 169: LATC0 = 0;
  4200  000888  908B               	bcf	3979,0,c	;volatile
  4201                           
  4202                           ; BSR set to: 0
  4203  00088A  0012               	return		;funcret
  4204  00088C                     __end_of_PID_Linea:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon	equ	0xFF2
  4213                           intcon2	equ	0xFF1
  4214                           intcon3	equ	0xFF0
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           postdec1	equ	0xFE5
  4218                           fsr1l	equ	0xFE1
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function ___lwtoft *****************
  4222 ;; Defined at:
  4223 ;;		line 28 in file "/opt/microchip/xc8/v1.41/sources/common/lwtoft.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  c               2    3[BANK0 ] unsigned int 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  3    3[BANK0 ] float 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4237 ;;      Params:         0       3       0       0
  4238 ;;      Locals:         0       0       0       0
  4239 ;;      Temps:          0       0       0       0
  4240 ;;      Totals:         0       3       0       0
  4241 ;;Total ram usage:        3 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    3
  4244 ;; This function calls:
  4245 ;;		___ftpack
  4246 ;; This function is called by:
  4247 ;;		_PID_Linea
  4248 ;;		_taraturaIR
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text25
  4253  001402                     __ptext25:
  4254                           	opt stack 0
  4255  001402                     ___lwtoft:
  4256                           	opt stack 26
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;incstack = 0
  4260  001402  C063  F020         	movff	___lwtoft@c,___ftpack@arg
  4261  001406  C064  F021         	movff	___lwtoft@c+1,___ftpack@arg+1
  4262  00140A  6A22               	clrf	___ftpack@arg+2,c
  4263  00140C  0E8E               	movlw	142
  4264  00140E  6E23               	movwf	___ftpack@exp,c
  4265  001410  0E00               	movlw	0
  4266  001412  6E24               	movwf	___ftpack@sign,c
  4267  001414  ECE1  F006         	call	___ftpack	;wreg free
  4268  001418  C020  F063         	movff	?___ftpack,?___lwtoft
  4269  00141C  C021  F064         	movff	?___ftpack+1,?___lwtoft+1
  4270  001420  C022  F065         	movff	?___ftpack+2,?___lwtoft+2
  4271  001424  0012               	return	
  4272  001426                     __end_of___lwtoft:
  4273                           	opt stack 0
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           intcon	equ	0xFF2
  4281                           intcon2	equ	0xFF1
  4282                           intcon3	equ	0xFF0
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           postdec1	equ	0xFE5
  4286                           fsr1l	equ	0xFE1
  4287                           status	equ	0xFD8
  4288                           
  4289 ;; *************** function ___fttol *****************
  4290 ;; Defined at:
  4291 ;;		line 44 in file "/opt/microchip/xc8/v1.41/sources/common/fttol.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  f1              3   31[COMRAM] float 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  lval            4    6[BANK0 ] unsigned long 
  4296 ;;  exp1            1   10[BANK0 ] unsigned char 
  4297 ;;  sign1           1    5[BANK0 ] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  4   31[COMRAM] long 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4307 ;;      Params:         4       0       0       0
  4308 ;;      Locals:         0       6       0       0
  4309 ;;      Temps:          0       5       0       0
  4310 ;;      Totals:         4      11       0       0
  4311 ;;Total ram usage:       15 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    2
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_PID_Linea
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text26
  4322  0009EA                     __ptext26:
  4323                           	opt stack 0
  4324  0009EA                     ___fttol:
  4325                           	opt stack 27
  4326                           
  4327                           ;incstack = 0
  4328  0009EA  C022  F060         	movff	___fttol@f1+2,??___fttol
  4329  0009EE  0100               	movlb	0	; () banked
  4330  0009F0  6B61               	clrf	(??___fttol+1)& (0+255),b
  4331  0009F2  6B62               	clrf	(??___fttol+2)& (0+255),b
  4332  0009F4  3421               	rlcf	___fttol@f1+1,w,c
  4333  0009F6  0100               	movlb	0	; () banked
  4334  0009F8  3760               	rlcf	??___fttol& (0+255),f,b
  4335  0009FA  E301               	bnc	u2131
  4336  0009FC  8161               	bsf	(??___fttol+1)& (0+255),0,b
  4337  0009FE                     u2131:
  4338  0009FE  0100               	movlb	0	; () banked
  4339  000A00  5160               	movf	??___fttol& (0+255),w,b
  4340  000A02  0100               	movlb	0	; () banked
  4341  000A04  6F6A               	movwf	___fttol@exp1& (0+255),b
  4342  000A06  0100               	movlb	0	; () banked
  4343  000A08  516A               	movf	___fttol@exp1& (0+255),w,b
  4344  000A0A  A4D8               	btfss	status,2,c
  4345  000A0C  D009               	goto	l2899
  4346                           
  4347                           ; BSR set to: 0
  4348  000A0E  0E00               	movlw	0
  4349  000A10  6E20               	movwf	?___fttol,c
  4350  000A12  0E00               	movlw	0
  4351  000A14  6E21               	movwf	?___fttol+1,c
  4352  000A16  0E00               	movlw	0
  4353  000A18  6E22               	movwf	?___fttol+2,c
  4354  000A1A  0E00               	movlw	0
  4355  000A1C  6E23               	movwf	?___fttol+3,c
  4356                           
  4357                           ; BSR set to: 0
  4358  000A1E  0012               	return	
  4359  000A20                     l2899:
  4360                           
  4361                           ; BSR set to: 0
  4362  000A20  0E17               	movlw	23
  4363  000A22  0100               	movlb	0	; () banked
  4364  000A24  6F60               	movwf	??___fttol& (0+255),b
  4365  000A26  C020  F061         	movff	___fttol@f1,??___fttol+1
  4366  000A2A  C021  F062         	movff	___fttol@f1+1,??___fttol+2
  4367  000A2E  C022  F063         	movff	___fttol@f1+2,??___fttol+3
  4368  000A32  0100               	movlb	0	; () banked
  4369  000A34  2960               	incf	??___fttol& (0+255),w,b
  4370  000A36  0100               	movlb	0	; () banked
  4371  000A38  6F64               	movwf	(??___fttol+4)& (0+255),b
  4372  000A3A  D005               	goto	u2150
  4373  000A3C                     u2155:
  4374  000A3C  0100               	movlb	0	; () banked
  4375  000A3E  90D8               	bcf	status,0,c
  4376  000A40  3363               	rrcf	(??___fttol+3)& (0+255),f,b
  4377  000A42  3362               	rrcf	(??___fttol+2)& (0+255),f,b
  4378  000A44  3361               	rrcf	(??___fttol+1)& (0+255),f,b
  4379  000A46                     u2150:
  4380  000A46  0100               	movlb	0	; () banked
  4381  000A48  2F64               	decfsz	(??___fttol+4)& (0+255),f,b
  4382  000A4A  D7F8               	goto	u2155
  4383  000A4C  0100               	movlb	0	; () banked
  4384  000A4E  5161               	movf	(??___fttol+1)& (0+255),w,b
  4385  000A50  0100               	movlb	0	; () banked
  4386  000A52  6F65               	movwf	___fttol@sign1& (0+255),b
  4387                           
  4388                           ; BSR set to: 0
  4389  000A54  8E21               	bsf	___fttol@f1+1,7,c
  4390                           
  4391                           ; BSR set to: 0
  4392  000A56  0EFF               	movlw	255
  4393  000A58  1620               	andwf	___fttol@f1,f,c
  4394  000A5A  0EFF               	movlw	255
  4395  000A5C  1621               	andwf	___fttol@f1+1,f,c
  4396  000A5E  0E00               	movlw	0
  4397  000A60  1622               	andwf	___fttol@f1+2,f,c
  4398                           
  4399                           ; BSR set to: 0
  4400  000A62  5020               	movf	___fttol@f1,w,c
  4401  000A64  0100               	movlb	0	; () banked
  4402  000A66  6F66               	movwf	___fttol@lval& (0+255),b
  4403  000A68  5021               	movf	___fttol@f1+1,w,c
  4404  000A6A  0100               	movlb	0	; () banked
  4405  000A6C  6F67               	movwf	(___fttol@lval+1)& (0+255),b
  4406  000A6E  5022               	movf	___fttol@f1+2,w,c
  4407  000A70  0100               	movlb	0	; () banked
  4408  000A72  6F68               	movwf	(___fttol@lval+2)& (0+255),b
  4409  000A74  0100               	movlb	0	; () banked
  4410  000A76  6B69               	clrf	(___fttol@lval+3)& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413  000A78  0E8E               	movlw	142
  4414  000A7A  0100               	movlb	0	; () banked
  4415  000A7C  5F6A               	subwf	___fttol@exp1& (0+255),f,b
  4416                           
  4417                           ; BSR set to: 0
  4418  000A7E  0100               	movlb	0	; () banked
  4419  000A80  AF6A               	btfss	___fttol@exp1& (0+255),7,b
  4420  000A82  D019               	goto	l2921
  4421                           
  4422                           ; BSR set to: 0
  4423  000A84  0100               	movlb	0	; () banked
  4424  000A86  516A               	movf	___fttol@exp1& (0+255),w,b
  4425  000A88  0A80               	xorlw	128
  4426  000A8A  0F8F               	addlw	143
  4427  000A8C  B0D8               	btfsc	status,0,c
  4428  000A8E  D009               	goto	l2917
  4429                           
  4430                           ; BSR set to: 0
  4431  000A90  0E00               	movlw	0
  4432  000A92  6E20               	movwf	?___fttol,c
  4433  000A94  0E00               	movlw	0
  4434  000A96  6E21               	movwf	?___fttol+1,c
  4435  000A98  0E00               	movlw	0
  4436  000A9A  6E22               	movwf	?___fttol+2,c
  4437  000A9C  0E00               	movlw	0
  4438  000A9E  6E23               	movwf	?___fttol+3,c
  4439                           
  4440                           ; BSR set to: 0
  4441  000AA0  0012               	return	
  4442  000AA2                     l2917:
  4443                           
  4444                           ; BSR set to: 0
  4445  000AA2  0100               	movlb	0	; () banked
  4446  000AA4  90D8               	bcf	status,0,c
  4447  000AA6  3369               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4448  000AA8  3368               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4449  000AAA  3367               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4450  000AAC  3366               	rrcf	___fttol@lval& (0+255),f,b
  4451                           
  4452                           ; BSR set to: 0
  4453  000AAE  0100               	movlb	0	; () banked
  4454  000AB0  3F6A               	incfsz	___fttol@exp1& (0+255),f,b
  4455  000AB2  D7F7               	goto	l2917
  4456                           
  4457                           ; BSR set to: 0
  4458  000AB4  D01A               	goto	l2931
  4459  000AB6                     l2921:
  4460                           
  4461                           ; BSR set to: 0
  4462  000AB6  0E17               	movlw	23
  4463  000AB8  0100               	movlb	0	; () banked
  4464  000ABA  656A               	cpfsgt	___fttol@exp1& (0+255),b
  4465  000ABC  D011               	goto	l2929
  4466                           
  4467                           ; BSR set to: 0
  4468  000ABE  0E00               	movlw	0
  4469  000AC0  6E20               	movwf	?___fttol,c
  4470  000AC2  0E00               	movlw	0
  4471  000AC4  6E21               	movwf	?___fttol+1,c
  4472  000AC6  0E00               	movlw	0
  4473  000AC8  6E22               	movwf	?___fttol+2,c
  4474  000ACA  0E00               	movlw	0
  4475  000ACC  6E23               	movwf	?___fttol+3,c
  4476                           
  4477                           ; BSR set to: 0
  4478  000ACE  0012               	return	
  4479  000AD0                     l2927:
  4480                           
  4481                           ; BSR set to: 0
  4482  000AD0  0100               	movlb	0	; () banked
  4483  000AD2  90D8               	bcf	status,0,c
  4484  000AD4  3766               	rlcf	___fttol@lval& (0+255),f,b
  4485  000AD6  3767               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4486  000AD8  3768               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4487  000ADA  3769               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4488  000ADC  0100               	movlb	0	; () banked
  4489  000ADE  076A               	decf	___fttol@exp1& (0+255),f,b
  4490  000AE0                     l2929:
  4491                           
  4492                           ; BSR set to: 0
  4493  000AE0  0100               	movlb	0	; () banked
  4494  000AE2  516A               	movf	___fttol@exp1& (0+255),w,b
  4495  000AE4  0100               	movlb	0	; () banked
  4496  000AE6  A4D8               	btfss	status,2,c
  4497  000AE8  D7F3               	goto	l2927
  4498  000AEA                     l2931:
  4499                           
  4500                           ; BSR set to: 0
  4501  000AEA  0100               	movlb	0	; () banked
  4502  000AEC  5165               	movf	___fttol@sign1& (0+255),w,b
  4503  000AEE  0100               	movlb	0	; () banked
  4504  000AF0  B4D8               	btfsc	status,2,c
  4505  000AF2  D009               	goto	l2935
  4506                           
  4507                           ; BSR set to: 0
  4508  000AF4  0100               	movlb	0	; () banked
  4509  000AF6  1F69               	comf	(___fttol@lval+3)& (0+255),f,b
  4510  000AF8  1F68               	comf	(___fttol@lval+2)& (0+255),f,b
  4511  000AFA  1F67               	comf	(___fttol@lval+1)& (0+255),f,b
  4512  000AFC  6D66               	negf	___fttol@lval& (0+255),b
  4513  000AFE  0E00               	movlw	0
  4514  000B00  2367               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4515  000B02  2368               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4516  000B04  2369               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4517  000B06                     l2935:
  4518                           
  4519                           ; BSR set to: 0
  4520  000B06  C066  F020         	movff	___fttol@lval,?___fttol
  4521  000B0A  C067  F021         	movff	___fttol@lval+1,?___fttol+1
  4522  000B0E  C068  F022         	movff	___fttol@lval+2,?___fttol+2
  4523  000B12  C069  F023         	movff	___fttol@lval+3,?___fttol+3
  4524  000B16  0012               	return	
  4525  000B18                     __end_of___fttol:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           intcon2	equ	0xFF1
  4535                           intcon3	equ	0xFF0
  4536                           postinc0	equ	0xFEE
  4537                           wreg	equ	0xFE8
  4538                           postdec1	equ	0xFE5
  4539                           fsr1l	equ	0xFE1
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function ___ftsub *****************
  4543 ;; Defined at:
  4544 ;;		line 20 in file "/opt/microchip/xc8/v1.41/sources/common/ftsub.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  f1              3   30[BANK0 ] float 
  4547 ;;  f2              3   33[BANK0 ] float 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  3   30[BANK0 ] float 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4559 ;;      Params:         0       6       0       0
  4560 ;;      Locals:         0       0       0       0
  4561 ;;      Temps:          0       0       0       0
  4562 ;;      Totals:         0       6       0       0
  4563 ;;Total ram usage:        6 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    4
  4566 ;; This function calls:
  4567 ;;		___ftadd
  4568 ;; This function is called by:
  4569 ;;		_PID_Linea
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text27
  4574  001234                     __ptext27:
  4575                           	opt stack 0
  4576  001234                     ___ftsub:
  4577                           	opt stack 25
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;incstack = 0
  4581  001234  0100               	movlb	0	; () banked
  4582  001236  5181               	movf	___ftsub@f2& (0+255),w,b
  4583  001238  0100               	movlb	0	; () banked
  4584  00123A  1182               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  4585  00123C  0100               	movlb	0	; () banked
  4586  00123E  1183               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  4587  001240  B4D8               	btfsc	status,2,c
  4588  001242  D009               	goto	l2871
  4589                           
  4590                           ; BSR set to: 0
  4591  001244  0E00               	movlw	0
  4592  001246  0100               	movlb	0	; () banked
  4593  001248  1B81               	xorwf	___ftsub@f2& (0+255),f,b
  4594  00124A  0E00               	movlw	0
  4595  00124C  0100               	movlb	0	; () banked
  4596  00124E  1B82               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  4597  001250  0E80               	movlw	128
  4598  001252  0100               	movlb	0	; () banked
  4599  001254  1B83               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  4600  001256                     l2871:
  4601                           
  4602                           ; BSR set to: 0
  4603  001256  C07E  F072         	movff	___ftsub@f1,___ftadd@f1
  4604  00125A  C07F  F073         	movff	___ftsub@f1+1,___ftadd@f1+1
  4605  00125E  C080  F074         	movff	___ftsub@f1+2,___ftadd@f1+2
  4606  001262  C081  F075         	movff	___ftsub@f2,___ftadd@f2
  4607  001266  C082  F076         	movff	___ftsub@f2+1,___ftadd@f2+1
  4608  00126A  C083  F077         	movff	___ftsub@f2+2,___ftadd@f2+2
  4609  00126E  EC25  F002         	call	___ftadd	;wreg free
  4610  001272  C072  F07E         	movff	?___ftadd,?___ftsub
  4611  001276  C073  F07F         	movff	?___ftadd+1,?___ftsub+1
  4612  00127A  C074  F080         	movff	?___ftadd+2,?___ftsub+2
  4613  00127E  0012               	return	
  4614  001280                     __end_of___ftsub:
  4615                           	opt stack 0
  4616                           tblptru	equ	0xFF8
  4617                           tblptrh	equ	0xFF7
  4618                           tblptrl	equ	0xFF6
  4619                           tablat	equ	0xFF5
  4620                           prodh	equ	0xFF4
  4621                           prodl	equ	0xFF3
  4622                           intcon	equ	0xFF2
  4623                           intcon2	equ	0xFF1
  4624                           intcon3	equ	0xFF0
  4625                           postinc0	equ	0xFEE
  4626                           wreg	equ	0xFE8
  4627                           postdec1	equ	0xFE5
  4628                           fsr1l	equ	0xFE1
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function ___ftadd *****************
  4632 ;; Defined at:
  4633 ;;		line 86 in file "/opt/microchip/xc8/v1.41/sources/common/ftadd.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  f1              3   18[BANK0 ] float 
  4636 ;;  f2              3   21[BANK0 ] float 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  exp1            1   29[BANK0 ] unsigned char 
  4639 ;;  exp2            1   28[BANK0 ] unsigned char 
  4640 ;;  sign            1   27[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  3   18[BANK0 ] float 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4650 ;;      Params:         0       6       0       0
  4651 ;;      Locals:         0       3       0       0
  4652 ;;      Temps:          0       3       0       0
  4653 ;;      Totals:         0      12       0       0
  4654 ;;Total ram usage:       12 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		___ftpack
  4659 ;; This function is called by:
  4660 ;;		_PID_Linea
  4661 ;;		___ftsub
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text28
  4666  00044A                     __ptext28:
  4667                           	opt stack 0
  4668  00044A                     ___ftadd:
  4669                           	opt stack 25
  4670                           
  4671                           ;incstack = 0
  4672  00044A  C074  F078         	movff	___ftadd@f1+2,??___ftadd
  4673  00044E  0100               	movlb	0	; () banked
  4674  000450  6B79               	clrf	(??___ftadd+1)& (0+255),b
  4675  000452  6B7A               	clrf	(??___ftadd+2)& (0+255),b
  4676  000454  0100               	movlb	0	; () banked
  4677  000456  3573               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  4678  000458  0100               	movlb	0	; () banked
  4679  00045A  3778               	rlcf	??___ftadd& (0+255),f,b
  4680  00045C  E301               	bnc	u1771
  4681  00045E  8179               	bsf	(??___ftadd+1)& (0+255),0,b
  4682  000460                     u1771:
  4683  000460  0100               	movlb	0	; () banked
  4684  000462  5178               	movf	??___ftadd& (0+255),w,b
  4685  000464  0100               	movlb	0	; () banked
  4686  000466  6F7D               	movwf	___ftadd@exp1& (0+255),b
  4687  000468  C077  F078         	movff	___ftadd@f2+2,??___ftadd
  4688  00046C  0100               	movlb	0	; () banked
  4689  00046E  6B79               	clrf	(??___ftadd+1)& (0+255),b
  4690  000470  6B7A               	clrf	(??___ftadd+2)& (0+255),b
  4691  000472  0100               	movlb	0	; () banked
  4692  000474  3576               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  4693  000476  0100               	movlb	0	; () banked
  4694  000478  3778               	rlcf	??___ftadd& (0+255),f,b
  4695  00047A  E301               	bnc	u1781
  4696  00047C  8179               	bsf	(??___ftadd+1)& (0+255),0,b
  4697  00047E                     u1781:
  4698  00047E  0100               	movlb	0	; () banked
  4699  000480  5178               	movf	??___ftadd& (0+255),w,b
  4700  000482  0100               	movlb	0	; () banked
  4701  000484  6F7C               	movwf	___ftadd@exp2& (0+255),b
  4702                           
  4703                           ; BSR set to: 0
  4704  000486  0100               	movlb	0	; () banked
  4705  000488  517D               	movf	___ftadd@exp1& (0+255),w,b
  4706  00048A  0100               	movlb	0	; () banked
  4707  00048C  B4D8               	btfsc	status,2,c
  4708  00048E  D011               	goto	l743
  4709                           
  4710                           ; BSR set to: 0
  4711  000490  0100               	movlb	0	; () banked
  4712  000492  517C               	movf	___ftadd@exp2& (0+255),w,b
  4713  000494  0100               	movlb	0	; () banked
  4714  000496  5D7D               	subwf	___ftadd@exp1& (0+255),w,b
  4715  000498  B0D8               	btfsc	status,0,c
  4716  00049A  D012               	goto	l2703
  4717                           
  4718                           ; BSR set to: 0
  4719  00049C  0100               	movlb	0	; () banked
  4720  00049E  517D               	movf	___ftadd@exp1& (0+255),w,b
  4721  0004A0  0800               	sublw	0
  4722  0004A2  0100               	movlb	0	; () banked
  4723  0004A4  257C               	addwf	___ftadd@exp2& (0+255),w,b
  4724  0004A6  0100               	movlb	0	; () banked
  4725  0004A8  6F78               	movwf	??___ftadd& (0+255),b
  4726  0004AA  0E18               	movlw	24
  4727  0004AC  0100               	movlb	0	; () banked
  4728  0004AE  6578               	cpfsgt	??___ftadd& (0+255),b
  4729  0004B0  D007               	goto	l2703
  4730  0004B2                     l743:
  4731                           
  4732                           ; BSR set to: 0
  4733  0004B2  C075  F072         	movff	___ftadd@f2,?___ftadd
  4734  0004B6  C076  F073         	movff	___ftadd@f2+1,?___ftadd+1
  4735  0004BA  C077  F074         	movff	___ftadd@f2+2,?___ftadd+2
  4736  0004BE  0012               	return	
  4737  0004C0                     l2703:
  4738                           
  4739                           ; BSR set to: 0
  4740  0004C0  0100               	movlb	0	; () banked
  4741  0004C2  517C               	movf	___ftadd@exp2& (0+255),w,b
  4742  0004C4  0100               	movlb	0	; () banked
  4743  0004C6  B4D8               	btfsc	status,2,c
  4744  0004C8  D011               	goto	l747
  4745                           
  4746                           ; BSR set to: 0
  4747  0004CA  0100               	movlb	0	; () banked
  4748  0004CC  517D               	movf	___ftadd@exp1& (0+255),w,b
  4749  0004CE  0100               	movlb	0	; () banked
  4750  0004D0  5D7C               	subwf	___ftadd@exp2& (0+255),w,b
  4751  0004D2  B0D8               	btfsc	status,0,c
  4752  0004D4  D012               	goto	l2709
  4753                           
  4754                           ; BSR set to: 0
  4755  0004D6  0100               	movlb	0	; () banked
  4756  0004D8  517C               	movf	___ftadd@exp2& (0+255),w,b
  4757  0004DA  0800               	sublw	0
  4758  0004DC  0100               	movlb	0	; () banked
  4759  0004DE  257D               	addwf	___ftadd@exp1& (0+255),w,b
  4760  0004E0  0100               	movlb	0	; () banked
  4761  0004E2  6F78               	movwf	??___ftadd& (0+255),b
  4762  0004E4  0E18               	movlw	24
  4763  0004E6  0100               	movlb	0	; () banked
  4764  0004E8  6578               	cpfsgt	??___ftadd& (0+255),b
  4765  0004EA  D007               	goto	l2709
  4766  0004EC                     l747:
  4767                           
  4768                           ; BSR set to: 0
  4769  0004EC  C072  F072         	movff	___ftadd@f1,?___ftadd
  4770  0004F0  C073  F073         	movff	___ftadd@f1+1,?___ftadd+1
  4771  0004F4  C074  F074         	movff	___ftadd@f1+2,?___ftadd+2
  4772  0004F8  0012               	return	
  4773  0004FA                     l2709:
  4774                           
  4775                           ; BSR set to: 0
  4776  0004FA  0E06               	movlw	6
  4777  0004FC  0100               	movlb	0	; () banked
  4778  0004FE  6F7B               	movwf	___ftadd@sign& (0+255),b
  4779                           
  4780                           ; BSR set to: 0
  4781  000500  0100               	movlb	0	; () banked
  4782  000502  AF74               	btfss	(___ftadd@f1+2)& (0+255),7,b
  4783  000504  D002               	goto	l2715
  4784                           
  4785                           ; BSR set to: 0
  4786  000506  0100               	movlb	0	; () banked
  4787  000508  8F7B               	bsf	___ftadd@sign& (0+255),7,b
  4788  00050A                     l2715:
  4789                           
  4790                           ; BSR set to: 0
  4791  00050A  0100               	movlb	0	; () banked
  4792  00050C  AF77               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4793  00050E  D002               	goto	l749
  4794                           
  4795                           ; BSR set to: 0
  4796  000510  0100               	movlb	0	; () banked
  4797  000512  8D7B               	bsf	___ftadd@sign& (0+255),6,b
  4798  000514                     l749:
  4799                           
  4800                           ; BSR set to: 0
  4801  000514  0100               	movlb	0	; () banked
  4802  000516  8F73               	bsf	(___ftadd@f1+1)& (0+255),7,b
  4803                           
  4804                           ; BSR set to: 0
  4805  000518  0EFF               	movlw	255
  4806  00051A  0100               	movlb	0	; () banked
  4807  00051C  1772               	andwf	___ftadd@f1& (0+255),f,b
  4808  00051E  0EFF               	movlw	255
  4809  000520  0100               	movlb	0	; () banked
  4810  000522  1773               	andwf	(___ftadd@f1+1)& (0+255),f,b
  4811  000524  0E00               	movlw	0
  4812  000526  0100               	movlb	0	; () banked
  4813  000528  1774               	andwf	(___ftadd@f1+2)& (0+255),f,b
  4814  00052A  0100               	movlb	0	; () banked
  4815  00052C  8F76               	bsf	(___ftadd@f2+1)& (0+255),7,b
  4816                           
  4817                           ; BSR set to: 0
  4818  00052E  0EFF               	movlw	255
  4819  000530  0100               	movlb	0	; () banked
  4820  000532  1775               	andwf	___ftadd@f2& (0+255),f,b
  4821  000534  0EFF               	movlw	255
  4822  000536  0100               	movlb	0	; () banked
  4823  000538  1776               	andwf	(___ftadd@f2+1)& (0+255),f,b
  4824  00053A  0E00               	movlw	0
  4825  00053C  0100               	movlb	0	; () banked
  4826  00053E  1777               	andwf	(___ftadd@f2+2)& (0+255),f,b
  4827                           
  4828                           ; BSR set to: 0
  4829  000540  0100               	movlb	0	; () banked
  4830  000542  517C               	movf	___ftadd@exp2& (0+255),w,b
  4831  000544  0100               	movlb	0	; () banked
  4832  000546  5D7D               	subwf	___ftadd@exp1& (0+255),w,b
  4833  000548  B0D8               	btfsc	status,0,c
  4834  00054A  D025               	goto	l2735
  4835  00054C                     l2725:
  4836                           
  4837                           ; BSR set to: 0
  4838  00054C  0100               	movlb	0	; () banked
  4839  00054E  90D8               	bcf	status,0,c
  4840  000550  3775               	rlcf	___ftadd@f2& (0+255),f,b
  4841  000552  3776               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  4842  000554  3777               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  4843  000556  0100               	movlb	0	; () banked
  4844  000558  077C               	decf	___ftadd@exp2& (0+255),f,b
  4845                           
  4846                           ; BSR set to: 0
  4847  00055A  0100               	movlb	0	; () banked
  4848  00055C  517D               	movf	___ftadd@exp1& (0+255),w,b
  4849  00055E  0100               	movlb	0	; () banked
  4850  000560  197C               	xorwf	___ftadd@exp2& (0+255),w,b
  4851  000562  B4D8               	btfsc	status,2,c
  4852  000564  D011               	goto	l2733
  4853                           
  4854                           ; BSR set to: 0
  4855  000566  0100               	movlb	0	; () banked
  4856  000568  077B               	decf	___ftadd@sign& (0+255),f,b
  4857  00056A  C07B  F078         	movff	___ftadd@sign,??___ftadd
  4858  00056E  0E07               	movlw	7
  4859  000570  0100               	movlb	0	; () banked
  4860  000572  1778               	andwf	??___ftadd& (0+255),f,b
  4861  000574  B4D8               	btfsc	status,2,c
  4862  000576  D008               	goto	l2733
  4863  000578  D7E9               	goto	l2725
  4864  00057A                     l2731:
  4865                           
  4866                           ; BSR set to: 0
  4867  00057A  0100               	movlb	0	; () banked
  4868  00057C  90D8               	bcf	status,0,c
  4869  00057E  3374               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  4870  000580  3373               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  4871  000582  3372               	rrcf	___ftadd@f1& (0+255),f,b
  4872  000584  0100               	movlb	0	; () banked
  4873  000586  2B7D               	incf	___ftadd@exp1& (0+255),f,b
  4874  000588                     l2733:
  4875                           
  4876                           ; BSR set to: 0
  4877  000588  0100               	movlb	0	; () banked
  4878  00058A  517C               	movf	___ftadd@exp2& (0+255),w,b
  4879  00058C  0100               	movlb	0	; () banked
  4880  00058E  197D               	xorwf	___ftadd@exp1& (0+255),w,b
  4881  000590  B4D8               	btfsc	status,2,c
  4882  000592  D02B               	goto	l758
  4883  000594  D7F2               	goto	l2731
  4884  000596                     l2735:
  4885                           
  4886                           ; BSR set to: 0
  4887  000596  0100               	movlb	0	; () banked
  4888  000598  517D               	movf	___ftadd@exp1& (0+255),w,b
  4889  00059A  0100               	movlb	0	; () banked
  4890  00059C  5D7C               	subwf	___ftadd@exp2& (0+255),w,b
  4891  00059E  B0D8               	btfsc	status,0,c
  4892  0005A0  D024               	goto	l758
  4893  0005A2                     l2737:
  4894                           
  4895                           ; BSR set to: 0
  4896  0005A2  0100               	movlb	0	; () banked
  4897  0005A4  90D8               	bcf	status,0,c
  4898  0005A6  3772               	rlcf	___ftadd@f1& (0+255),f,b
  4899  0005A8  3773               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  4900  0005AA  3774               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  4901  0005AC  0100               	movlb	0	; () banked
  4902  0005AE  077D               	decf	___ftadd@exp1& (0+255),f,b
  4903                           
  4904                           ; BSR set to: 0
  4905  0005B0  0100               	movlb	0	; () banked
  4906  0005B2  517D               	movf	___ftadd@exp1& (0+255),w,b
  4907  0005B4  0100               	movlb	0	; () banked
  4908  0005B6  197C               	xorwf	___ftadd@exp2& (0+255),w,b
  4909  0005B8  B4D8               	btfsc	status,2,c
  4910  0005BA  D011               	goto	l2745
  4911                           
  4912                           ; BSR set to: 0
  4913  0005BC  0100               	movlb	0	; () banked
  4914  0005BE  077B               	decf	___ftadd@sign& (0+255),f,b
  4915  0005C0  C07B  F078         	movff	___ftadd@sign,??___ftadd
  4916  0005C4  0E07               	movlw	7
  4917  0005C6  0100               	movlb	0	; () banked
  4918  0005C8  1778               	andwf	??___ftadd& (0+255),f,b
  4919  0005CA  B4D8               	btfsc	status,2,c
  4920  0005CC  D008               	goto	l2745
  4921  0005CE  D7E9               	goto	l2737
  4922  0005D0                     l2743:
  4923                           
  4924                           ; BSR set to: 0
  4925  0005D0  0100               	movlb	0	; () banked
  4926  0005D2  90D8               	bcf	status,0,c
  4927  0005D4  3377               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  4928  0005D6  3376               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  4929  0005D8  3375               	rrcf	___ftadd@f2& (0+255),f,b
  4930  0005DA  0100               	movlb	0	; () banked
  4931  0005DC  2B7C               	incf	___ftadd@exp2& (0+255),f,b
  4932  0005DE                     l2745:
  4933                           
  4934                           ; BSR set to: 0
  4935  0005DE  0100               	movlb	0	; () banked
  4936  0005E0  517C               	movf	___ftadd@exp2& (0+255),w,b
  4937  0005E2  0100               	movlb	0	; () banked
  4938  0005E4  197D               	xorwf	___ftadd@exp1& (0+255),w,b
  4939  0005E6  A4D8               	btfss	status,2,c
  4940  0005E8  D7F3               	goto	l2743
  4941  0005EA                     l758:
  4942                           
  4943                           ; BSR set to: 0
  4944  0005EA  0100               	movlb	0	; () banked
  4945  0005EC  AF7B               	btfss	___ftadd@sign& (0+255),7,b
  4946  0005EE  D012               	goto	l767
  4947                           
  4948                           ; BSR set to: 0
  4949  0005F0  0EFF               	movlw	255
  4950  0005F2  0100               	movlb	0	; () banked
  4951  0005F4  1B72               	xorwf	___ftadd@f1& (0+255),f,b
  4952  0005F6  0EFF               	movlw	255
  4953  0005F8  0100               	movlb	0	; () banked
  4954  0005FA  1B73               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4955  0005FC  0EFF               	movlw	255
  4956  0005FE  0100               	movlb	0	; () banked
  4957  000600  1B74               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4958  000602  0E01               	movlw	1
  4959  000604  0100               	movlb	0	; () banked
  4960  000606  2772               	addwf	___ftadd@f1& (0+255),f,b
  4961  000608  0E00               	movlw	0
  4962  00060A  0100               	movlb	0	; () banked
  4963  00060C  2373               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4964  00060E  0E00               	movlw	0
  4965  000610  0100               	movlb	0	; () banked
  4966  000612  2374               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4967  000614                     l767:
  4968                           
  4969                           ; BSR set to: 0
  4970  000614  0100               	movlb	0	; () banked
  4971  000616  AD7B               	btfss	___ftadd@sign& (0+255),6,b
  4972  000618  D012               	goto	l2751
  4973                           
  4974                           ; BSR set to: 0
  4975  00061A  0EFF               	movlw	255
  4976  00061C  0100               	movlb	0	; () banked
  4977  00061E  1B75               	xorwf	___ftadd@f2& (0+255),f,b
  4978  000620  0EFF               	movlw	255
  4979  000622  0100               	movlb	0	; () banked
  4980  000624  1B76               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4981  000626  0EFF               	movlw	255
  4982  000628  0100               	movlb	0	; () banked
  4983  00062A  1B77               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4984  00062C  0E01               	movlw	1
  4985  00062E  0100               	movlb	0	; () banked
  4986  000630  2775               	addwf	___ftadd@f2& (0+255),f,b
  4987  000632  0E00               	movlw	0
  4988  000634  0100               	movlb	0	; () banked
  4989  000636  2376               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4990  000638  0E00               	movlw	0
  4991  00063A  0100               	movlb	0	; () banked
  4992  00063C  2377               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4993  00063E                     l2751:
  4994                           
  4995                           ; BSR set to: 0
  4996  00063E  0E00               	movlw	0
  4997  000640  0100               	movlb	0	; () banked
  4998  000642  6F7B               	movwf	___ftadd@sign& (0+255),b
  4999                           
  5000                           ; BSR set to: 0
  5001  000644  0100               	movlb	0	; () banked
  5002  000646  5172               	movf	___ftadd@f1& (0+255),w,b
  5003  000648  0100               	movlb	0	; () banked
  5004  00064A  2775               	addwf	___ftadd@f2& (0+255),f,b
  5005  00064C  0100               	movlb	0	; () banked
  5006  00064E  5173               	movf	(___ftadd@f1+1)& (0+255),w,b
  5007  000650  0100               	movlb	0	; () banked
  5008  000652  2376               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5009  000654  0100               	movlb	0	; () banked
  5010  000656  5174               	movf	(___ftadd@f1+2)& (0+255),w,b
  5011  000658  0100               	movlb	0	; () banked
  5012  00065A  2377               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5013                           
  5014                           ; BSR set to: 0
  5015  00065C  0100               	movlb	0	; () banked
  5016  00065E  AF77               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5017  000660  D015               	goto	l2761
  5018                           
  5019                           ; BSR set to: 0
  5020  000662  0EFF               	movlw	255
  5021  000664  0100               	movlb	0	; () banked
  5022  000666  1B75               	xorwf	___ftadd@f2& (0+255),f,b
  5023  000668  0EFF               	movlw	255
  5024  00066A  0100               	movlb	0	; () banked
  5025  00066C  1B76               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5026  00066E  0EFF               	movlw	255
  5027  000670  0100               	movlb	0	; () banked
  5028  000672  1B77               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5029  000674  0E01               	movlw	1
  5030  000676  0100               	movlb	0	; () banked
  5031  000678  2775               	addwf	___ftadd@f2& (0+255),f,b
  5032  00067A  0E00               	movlw	0
  5033  00067C  0100               	movlb	0	; () banked
  5034  00067E  2376               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5035  000680  0E00               	movlw	0
  5036  000682  0100               	movlb	0	; () banked
  5037  000684  2377               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5038                           
  5039                           ; BSR set to: 0
  5040  000686  0E01               	movlw	1
  5041  000688  0100               	movlb	0	; () banked
  5042  00068A  6F7B               	movwf	___ftadd@sign& (0+255),b
  5043  00068C                     l2761:
  5044                           
  5045                           ; BSR set to: 0
  5046  00068C  C075  F020         	movff	___ftadd@f2,___ftpack@arg
  5047  000690  C076  F021         	movff	___ftadd@f2+1,___ftpack@arg+1
  5048  000694  C077  F022         	movff	___ftadd@f2+2,___ftpack@arg+2
  5049  000698  C07D  F023         	movff	___ftadd@exp1,___ftpack@exp
  5050  00069C  C07B  F024         	movff	___ftadd@sign,___ftpack@sign
  5051  0006A0  ECE1  F006         	call	___ftpack	;wreg free
  5052  0006A4  C020  F072         	movff	?___ftpack,?___ftadd
  5053  0006A8  C021  F073         	movff	?___ftpack+1,?___ftadd+1
  5054  0006AC  C022  F074         	movff	?___ftpack+2,?___ftadd+2
  5055  0006B0  0012               	return	
  5056  0006B2                     __end_of___ftadd:
  5057                           	opt stack 0
  5058                           tblptru	equ	0xFF8
  5059                           tblptrh	equ	0xFF7
  5060                           tblptrl	equ	0xFF6
  5061                           tablat	equ	0xFF5
  5062                           prodh	equ	0xFF4
  5063                           prodl	equ	0xFF3
  5064                           intcon	equ	0xFF2
  5065                           intcon2	equ	0xFF1
  5066                           intcon3	equ	0xFF0
  5067                           postinc0	equ	0xFEE
  5068                           wreg	equ	0xFE8
  5069                           postdec1	equ	0xFE5
  5070                           fsr1l	equ	0xFE1
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function ___ftmul *****************
  5074 ;; Defined at:
  5075 ;;		line 62 in file "/opt/microchip/xc8/v1.41/sources/common/ftmul.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  f1              3    3[BANK0 ] float 
  5078 ;;  f2              3    6[BANK0 ] float 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  5081 ;;  sign            1   17[BANK0 ] unsigned char 
  5082 ;;  cntr            1   16[BANK0 ] unsigned char 
  5083 ;;  exp             1   12[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  3    3[BANK0 ] float 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5093 ;;      Params:         0       6       0       0
  5094 ;;      Locals:         0       6       0       0
  5095 ;;      Temps:          0       3       0       0
  5096 ;;      Totals:         0      15       0       0
  5097 ;;Total ram usage:       15 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    3
  5100 ;; This function calls:
  5101 ;;		___ftpack
  5102 ;; This function is called by:
  5103 ;;		_PID_Linea
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text29
  5108  00088C                     __ptext29:
  5109                           	opt stack 0
  5110  00088C                     ___ftmul:
  5111                           	opt stack 26
  5112                           
  5113                           ;incstack = 0
  5114  00088C  C065  F069         	movff	___ftmul@f1+2,??___ftmul
  5115  000890  0100               	movlb	0	; () banked
  5116  000892  6B6A               	clrf	(??___ftmul+1)& (0+255),b
  5117  000894  6B6B               	clrf	(??___ftmul+2)& (0+255),b
  5118  000896  0100               	movlb	0	; () banked
  5119  000898  3564               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5120  00089A  0100               	movlb	0	; () banked
  5121  00089C  3769               	rlcf	??___ftmul& (0+255),f,b
  5122  00089E  E301               	bnc	u2031
  5123  0008A0  816A               	bsf	(??___ftmul+1)& (0+255),0,b
  5124  0008A2                     u2031:
  5125  0008A2  0100               	movlb	0	; () banked
  5126  0008A4  5169               	movf	??___ftmul& (0+255),w,b
  5127  0008A6  0100               	movlb	0	; () banked
  5128  0008A8  6F6C               	movwf	___ftmul@exp& (0+255),b
  5129  0008AA  0100               	movlb	0	; () banked
  5130  0008AC  516C               	movf	___ftmul@exp& (0+255),w,b
  5131  0008AE  A4D8               	btfss	status,2,c
  5132  0008B0  D00A               	goto	l2825
  5133                           
  5134                           ; BSR set to: 0
  5135  0008B2  0E00               	movlw	0
  5136  0008B4  0100               	movlb	0	; () banked
  5137  0008B6  6F63               	movwf	?___ftmul& (0+255),b
  5138  0008B8  0E00               	movlw	0
  5139  0008BA  0100               	movlb	0	; () banked
  5140  0008BC  6F64               	movwf	(?___ftmul+1)& (0+255),b
  5141  0008BE  0E00               	movlw	0
  5142  0008C0  0100               	movlb	0	; () banked
  5143  0008C2  6F65               	movwf	(?___ftmul+2)& (0+255),b
  5144                           
  5145                           ; BSR set to: 0
  5146  0008C4  0012               	return	
  5147  0008C6                     l2825:
  5148                           
  5149                           ; BSR set to: 0
  5150  0008C6  C068  F069         	movff	___ftmul@f2+2,??___ftmul
  5151  0008CA  0100               	movlb	0	; () banked
  5152  0008CC  6B6A               	clrf	(??___ftmul+1)& (0+255),b
  5153  0008CE  6B6B               	clrf	(??___ftmul+2)& (0+255),b
  5154  0008D0  0100               	movlb	0	; () banked
  5155  0008D2  3567               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5156  0008D4  0100               	movlb	0	; () banked
  5157  0008D6  3769               	rlcf	??___ftmul& (0+255),f,b
  5158  0008D8  E301               	bnc	u2051
  5159  0008DA  816A               	bsf	(??___ftmul+1)& (0+255),0,b
  5160  0008DC                     u2051:
  5161  0008DC  0100               	movlb	0	; () banked
  5162  0008DE  5169               	movf	??___ftmul& (0+255),w,b
  5163  0008E0  0100               	movlb	0	; () banked
  5164  0008E2  6F71               	movwf	___ftmul@sign& (0+255),b
  5165  0008E4  0100               	movlb	0	; () banked
  5166  0008E6  5171               	movf	___ftmul@sign& (0+255),w,b
  5167  0008E8  A4D8               	btfss	status,2,c
  5168  0008EA  D00A               	goto	l2831
  5169                           
  5170                           ; BSR set to: 0
  5171  0008EC  0E00               	movlw	0
  5172  0008EE  0100               	movlb	0	; () banked
  5173  0008F0  6F63               	movwf	?___ftmul& (0+255),b
  5174  0008F2  0E00               	movlw	0
  5175  0008F4  0100               	movlb	0	; () banked
  5176  0008F6  6F64               	movwf	(?___ftmul+1)& (0+255),b
  5177  0008F8  0E00               	movlw	0
  5178  0008FA  0100               	movlb	0	; () banked
  5179  0008FC  6F65               	movwf	(?___ftmul+2)& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182  0008FE  0012               	return	
  5183  000900                     l2831:
  5184                           
  5185                           ; BSR set to: 0
  5186  000900  0100               	movlb	0	; () banked
  5187  000902  5171               	movf	___ftmul@sign& (0+255),w,b
  5188  000904  0F7B               	addlw	123
  5189  000906  0100               	movlb	0	; () banked
  5190  000908  276C               	addwf	___ftmul@exp& (0+255),f,b
  5191                           
  5192                           ; BSR set to: 0
  5193  00090A  C065  F071         	movff	___ftmul@f1+2,___ftmul@sign
  5194  00090E  0100               	movlb	0	; () banked
  5195  000910  5168               	movf	(___ftmul@f2+2)& (0+255),w,b
  5196  000912  0100               	movlb	0	; () banked
  5197  000914  1B71               	xorwf	___ftmul@sign& (0+255),f,b
  5198  000916  0E80               	movlw	128
  5199  000918  0100               	movlb	0	; () banked
  5200  00091A  1771               	andwf	___ftmul@sign& (0+255),f,b
  5201                           
  5202                           ; BSR set to: 0
  5203  00091C  0100               	movlb	0	; () banked
  5204  00091E  8F64               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5205                           
  5206                           ; BSR set to: 0
  5207  000920  0100               	movlb	0	; () banked
  5208  000922  8F67               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5209                           
  5210                           ; BSR set to: 0
  5211  000924  0EFF               	movlw	255
  5212  000926  0100               	movlb	0	; () banked
  5213  000928  1766               	andwf	___ftmul@f2& (0+255),f,b
  5214  00092A  0EFF               	movlw	255
  5215  00092C  0100               	movlb	0	; () banked
  5216  00092E  1767               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5217  000930  0E00               	movlw	0
  5218  000932  0100               	movlb	0	; () banked
  5219  000934  1768               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5220                           
  5221                           ; BSR set to: 0
  5222  000936  0E00               	movlw	0
  5223  000938  0100               	movlb	0	; () banked
  5224  00093A  6F6D               	movwf	___ftmul@f3_as_product& (0+255),b
  5225  00093C  0E00               	movlw	0
  5226  00093E  0100               	movlb	0	; () banked
  5227  000940  6F6E               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5228  000942  0E00               	movlw	0
  5229  000944  0100               	movlb	0	; () banked
  5230  000946  6F6F               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5231                           
  5232                           ; BSR set to: 0
  5233  000948  0E07               	movlw	7
  5234  00094A  0100               	movlb	0	; () banked
  5235  00094C  6F70               	movwf	___ftmul@cntr& (0+255),b
  5236  00094E                     l2845:
  5237                           
  5238                           ; BSR set to: 0
  5239  00094E  0100               	movlb	0	; () banked
  5240  000950  A163               	btfss	___ftmul@f1& (0+255),0,b
  5241  000952  D00C               	goto	l2849
  5242                           
  5243                           ; BSR set to: 0
  5244  000954  0100               	movlb	0	; () banked
  5245  000956  5166               	movf	___ftmul@f2& (0+255),w,b
  5246  000958  0100               	movlb	0	; () banked
  5247  00095A  276D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5248  00095C  0100               	movlb	0	; () banked
  5249  00095E  5167               	movf	(___ftmul@f2+1)& (0+255),w,b
  5250  000960  0100               	movlb	0	; () banked
  5251  000962  236E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5252  000964  0100               	movlb	0	; () banked
  5253  000966  5168               	movf	(___ftmul@f2+2)& (0+255),w,b
  5254  000968  0100               	movlb	0	; () banked
  5255  00096A  236F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5256  00096C                     l2849:
  5257                           
  5258                           ; BSR set to: 0
  5259  00096C  0100               	movlb	0	; () banked
  5260  00096E  90D8               	bcf	status,0,c
  5261  000970  3365               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5262  000972  3364               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5263  000974  3363               	rrcf	___ftmul@f1& (0+255),f,b
  5264  000976  0100               	movlb	0	; () banked
  5265  000978  90D8               	bcf	status,0,c
  5266  00097A  3766               	rlcf	___ftmul@f2& (0+255),f,b
  5267  00097C  3767               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5268  00097E  3768               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5269                           
  5270                           ; BSR set to: 0
  5271  000980  0100               	movlb	0	; () banked
  5272  000982  2F70               	decfsz	___ftmul@cntr& (0+255),f,b
  5273  000984  D7E4               	goto	l2845
  5274                           
  5275                           ; BSR set to: 0
  5276                           
  5277                           ; BSR set to: 0
  5278  000986  0E09               	movlw	9
  5279  000988  0100               	movlb	0	; () banked
  5280  00098A  6F70               	movwf	___ftmul@cntr& (0+255),b
  5281  00098C                     l2855:
  5282                           
  5283                           ; BSR set to: 0
  5284  00098C  0100               	movlb	0	; () banked
  5285  00098E  A163               	btfss	___ftmul@f1& (0+255),0,b
  5286  000990  D00C               	goto	l2859
  5287                           
  5288                           ; BSR set to: 0
  5289  000992  0100               	movlb	0	; () banked
  5290  000994  5166               	movf	___ftmul@f2& (0+255),w,b
  5291  000996  0100               	movlb	0	; () banked
  5292  000998  276D               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5293  00099A  0100               	movlb	0	; () banked
  5294  00099C  5167               	movf	(___ftmul@f2+1)& (0+255),w,b
  5295  00099E  0100               	movlb	0	; () banked
  5296  0009A0  236E               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5297  0009A2  0100               	movlb	0	; () banked
  5298  0009A4  5168               	movf	(___ftmul@f2+2)& (0+255),w,b
  5299  0009A6  0100               	movlb	0	; () banked
  5300  0009A8  236F               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5301  0009AA                     l2859:
  5302                           
  5303                           ; BSR set to: 0
  5304  0009AA  0100               	movlb	0	; () banked
  5305  0009AC  90D8               	bcf	status,0,c
  5306  0009AE  3365               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5307  0009B0  3364               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5308  0009B2  3363               	rrcf	___ftmul@f1& (0+255),f,b
  5309  0009B4  0100               	movlb	0	; () banked
  5310  0009B6  90D8               	bcf	status,0,c
  5311  0009B8  336F               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5312  0009BA  336E               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5313  0009BC  336D               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5314                           
  5315                           ; BSR set to: 0
  5316  0009BE  0100               	movlb	0	; () banked
  5317  0009C0  2F70               	decfsz	___ftmul@cntr& (0+255),f,b
  5318  0009C2  D7E4               	goto	l2855
  5319                           
  5320                           ; BSR set to: 0
  5321                           
  5322                           ; BSR set to: 0
  5323  0009C4  C06D  F020         	movff	___ftmul@f3_as_product,___ftpack@arg
  5324  0009C8  C06E  F021         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5325  0009CC  C06F  F022         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5326  0009D0  C06C  F023         	movff	___ftmul@exp,___ftpack@exp
  5327  0009D4  C071  F024         	movff	___ftmul@sign,___ftpack@sign
  5328  0009D8  ECE1  F006         	call	___ftpack	;wreg free
  5329  0009DC  C020  F063         	movff	?___ftpack,?___ftmul
  5330  0009E0  C021  F064         	movff	?___ftpack+1,?___ftmul+1
  5331  0009E4  C022  F065         	movff	?___ftpack+2,?___ftmul+2
  5332  0009E8  0012               	return	
  5333  0009EA                     __end_of___ftmul:
  5334                           	opt stack 0
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           intcon2	equ	0xFF1
  5343                           intcon3	equ	0xFF0
  5344                           postinc0	equ	0xFEE
  5345                           wreg	equ	0xFE8
  5346                           postdec1	equ	0xFE5
  5347                           fsr1l	equ	0xFE1
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function ___ftpack *****************
  5351 ;; Defined at:
  5352 ;;		line 62 in file "/opt/microchip/xc8/v1.41/sources/common/float.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  arg             3   31[COMRAM] unsigned um
  5355 ;;  exp             1   34[COMRAM] unsigned char 
  5356 ;;  sign            1   35[COMRAM] unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  3   31[COMRAM] float 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5368 ;;      Params:         5       0       0       0
  5369 ;;      Locals:         0       0       0       0
  5370 ;;      Temps:          0       3       0       0
  5371 ;;      Totals:         5       3       0       0
  5372 ;;Total ram usage:        8 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    2
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		___ftadd
  5379 ;;		___ftmul
  5380 ;;		___lwtoft
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text30
  5385  000DC2                     __ptext30:
  5386                           	opt stack 0
  5387  000DC2                     ___ftpack:
  5388                           	opt stack 26
  5389                           
  5390                           ;incstack = 0
  5391  000DC2  5023               	movf	___ftpack@exp,w,c
  5392  000DC4  B4D8               	btfsc	status,2,c
  5393  000DC6  D005               	goto	l2663
  5394  000DC8  5020               	movf	___ftpack@arg,w,c
  5395  000DCA  1021               	iorwf	___ftpack@arg+1,w,c
  5396  000DCC  1022               	iorwf	___ftpack@arg+2,w,c
  5397  000DCE  A4D8               	btfss	status,2,c
  5398  000DD0  D00C               	goto	l2669
  5399  000DD2                     l2663:
  5400  000DD2  0E00               	movlw	0
  5401  000DD4  6E20               	movwf	?___ftpack,c
  5402  000DD6  0E00               	movlw	0
  5403  000DD8  6E21               	movwf	?___ftpack+1,c
  5404  000DDA  0E00               	movlw	0
  5405  000DDC  6E22               	movwf	?___ftpack+2,c
  5406  000DDE  0012               	return	
  5407  000DE0                     l2667:
  5408  000DE0  2A23               	incf	___ftpack@exp,f,c
  5409  000DE2  90D8               	bcf	status,0,c
  5410  000DE4  3222               	rrcf	___ftpack@arg+2,f,c
  5411  000DE6  3221               	rrcf	___ftpack@arg+1,f,c
  5412  000DE8  3220               	rrcf	___ftpack@arg,f,c
  5413  000DEA                     l2669:
  5414  000DEA  0E00               	movlw	0
  5415  000DEC  1420               	andwf	___ftpack@arg,w,c
  5416  000DEE  0100               	movlb	0	; () banked
  5417  000DF0  6F60               	movwf	??___ftpack& (0+255),b
  5418  000DF2  0E00               	movlw	0
  5419  000DF4  1421               	andwf	___ftpack@arg+1,w,c
  5420  000DF6  0100               	movlb	0	; () banked
  5421  000DF8  6F61               	movwf	(??___ftpack+1)& (0+255),b
  5422  000DFA  0EFE               	movlw	254
  5423  000DFC  1422               	andwf	___ftpack@arg+2,w,c
  5424  000DFE  0100               	movlb	0	; () banked
  5425  000E00  6F62               	movwf	(??___ftpack+2)& (0+255),b
  5426  000E02  0100               	movlb	0	; () banked
  5427  000E04  5160               	movf	??___ftpack& (0+255),w,b
  5428  000E06  0100               	movlb	0	; () banked
  5429  000E08  1161               	iorwf	(??___ftpack+1)& (0+255),w,b
  5430  000E0A  0100               	movlb	0	; () banked
  5431  000E0C  1162               	iorwf	(??___ftpack+2)& (0+255),w,b
  5432  000E0E  B4D8               	btfsc	status,2,c
  5433  000E10  D00C               	goto	l2675
  5434  000E12  D7E6               	goto	l2667
  5435  000E14                     l2671:
  5436                           
  5437                           ; BSR set to: 0
  5438  000E14  2A23               	incf	___ftpack@exp,f,c
  5439                           
  5440                           ; BSR set to: 0
  5441  000E16  0E01               	movlw	1
  5442  000E18  2620               	addwf	___ftpack@arg,f,c
  5443  000E1A  0E00               	movlw	0
  5444  000E1C  2221               	addwfc	___ftpack@arg+1,f,c
  5445  000E1E  0E00               	movlw	0
  5446  000E20  2222               	addwfc	___ftpack@arg+2,f,c
  5447  000E22  90D8               	bcf	status,0,c
  5448  000E24  3222               	rrcf	___ftpack@arg+2,f,c
  5449  000E26  3221               	rrcf	___ftpack@arg+1,f,c
  5450  000E28  3220               	rrcf	___ftpack@arg,f,c
  5451  000E2A                     l2675:
  5452                           
  5453                           ; BSR set to: 0
  5454  000E2A  0E00               	movlw	0
  5455  000E2C  1420               	andwf	___ftpack@arg,w,c
  5456  000E2E  0100               	movlb	0	; () banked
  5457  000E30  6F60               	movwf	??___ftpack& (0+255),b
  5458  000E32  0E00               	movlw	0
  5459  000E34  1421               	andwf	___ftpack@arg+1,w,c
  5460  000E36  0100               	movlb	0	; () banked
  5461  000E38  6F61               	movwf	(??___ftpack+1)& (0+255),b
  5462  000E3A  0EFF               	movlw	255
  5463  000E3C  1422               	andwf	___ftpack@arg+2,w,c
  5464  000E3E  0100               	movlb	0	; () banked
  5465  000E40  6F62               	movwf	(??___ftpack+2)& (0+255),b
  5466  000E42  0100               	movlb	0	; () banked
  5467  000E44  5160               	movf	??___ftpack& (0+255),w,b
  5468  000E46  0100               	movlb	0	; () banked
  5469  000E48  1161               	iorwf	(??___ftpack+1)& (0+255),w,b
  5470  000E4A  0100               	movlb	0	; () banked
  5471  000E4C  1162               	iorwf	(??___ftpack+2)& (0+255),w,b
  5472  000E4E  B4D8               	btfsc	status,2,c
  5473  000E50  D006               	goto	l2679
  5474  000E52  D7E0               	goto	l2671
  5475  000E54                     l2677:
  5476  000E54  0623               	decf	___ftpack@exp,f,c
  5477  000E56  90D8               	bcf	status,0,c
  5478  000E58  3620               	rlcf	___ftpack@arg,f,c
  5479  000E5A  3621               	rlcf	___ftpack@arg+1,f,c
  5480  000E5C  3622               	rlcf	___ftpack@arg+2,f,c
  5481  000E5E                     l2679:
  5482  000E5E  BE21               	btfsc	___ftpack@arg+1,7,c
  5483  000E60  D003               	goto	l720
  5484  000E62  0E02               	movlw	2
  5485  000E64  6023               	cpfslt	___ftpack@exp,c
  5486  000E66  D7F6               	goto	l2677
  5487  000E68                     l720:
  5488  000E68  A023               	btfss	___ftpack@exp,0,c
  5489  000E6A  9E21               	bcf	___ftpack@arg+1,7,c
  5490  000E6C  90D8               	bcf	status,0,c
  5491  000E6E  3223               	rrcf	___ftpack@exp,f,c
  5492  000E70  5023               	movf	___ftpack@exp,w,c
  5493  000E72  1222               	iorwf	___ftpack@arg+2,f,c
  5494  000E74  5024               	movf	___ftpack@sign,w,c
  5495  000E76  A4D8               	btfss	status,2,c
  5496  000E78  8E22               	bsf	___ftpack@arg+2,7,c
  5497  000E7A  C020  F020         	movff	___ftpack@arg,?___ftpack
  5498  000E7E  C021  F021         	movff	___ftpack@arg+1,?___ftpack+1
  5499  000E82  C022  F022         	movff	___ftpack@arg+2,?___ftpack+2
  5500  000E86  0012               	return	
  5501  000E88                     __end_of___ftpack:
  5502                           	opt stack 0
  5503                           tblptru	equ	0xFF8
  5504                           tblptrh	equ	0xFF7
  5505                           tblptrl	equ	0xFF6
  5506                           tablat	equ	0xFF5
  5507                           prodh	equ	0xFF4
  5508                           prodl	equ	0xFF3
  5509                           intcon	equ	0xFF2
  5510                           intcon2	equ	0xFF1
  5511                           intcon3	equ	0xFF0
  5512                           postinc0	equ	0xFEE
  5513                           wreg	equ	0xFE8
  5514                           postdec1	equ	0xFE5
  5515                           fsr1l	equ	0xFE1
  5516                           status	equ	0xFD8
  5517                           
  5518 ;; *************** function _EPWM2_LoadDutyValue *****************
  5519 ;; Defined at:
  5520 ;;		line 91 in file "mcc_generated_files/epwm2.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  dutyValue       2   11[BANK0 ] unsigned int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5534 ;;      Params:         0       2       0       0
  5535 ;;      Locals:         0       0       0       0
  5536 ;;      Temps:          0       2       0       0
  5537 ;;      Totals:         0       4       0       0
  5538 ;;Total ram usage:        4 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    2
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_PID_Linea
  5545 ;;		_taraturaIR
  5546 ;;		_stopM
  5547 ;;		_main
  5548 ;;		_seguiLinea
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text31
  5553  001304                     __ptext31:
  5554                           	opt stack 0
  5555  001304                     _EPWM2_LoadDutyValue:
  5556                           	opt stack 27
  5557                           
  5558                           ;epwm2.c: 94: CCPR2L = ((dutyValue & 0x03FC)>>2);
  5559                           
  5560                           ;incstack = 0
  5561  001304  C06B  F06D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  5562  001308  C06C  F06E         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  5563  00130C  0100               	movlb	0	; () banked
  5564  00130E  90D8               	bcf	status,0,c
  5565  001310  336E               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  5566  001312  336D               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  5567  001314  0100               	movlb	0	; () banked
  5568  001316  90D8               	bcf	status,0,c
  5569  001318  336E               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  5570  00131A  336D               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  5571  00131C  0100               	movlb	0	; () banked
  5572  00131E  516D               	movf	??_EPWM2_LoadDutyValue& (0+255),w,b
  5573  001320  6E67               	movwf	3943,c	;volatile
  5574                           
  5575                           ;epwm2.c: 97: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  5576  001322  C06B  F06D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  5577  001326  0E03               	movlw	3
  5578  001328  0100               	movlb	0	; () banked
  5579  00132A  176D               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  5580  00132C  0100               	movlb	0	; () banked
  5581  00132E  3B6D               	swapf	??_EPWM2_LoadDutyValue& (0+255),f,b
  5582  001330  0EF0               	movlw	240
  5583  001332  176D               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  5584  001334  5066               	movf	3942,w,c	;volatile
  5585  001336  0BCF               	andlw	207
  5586  001338  0100               	movlb	0	; () banked
  5587  00133A  116D               	iorwf	??_EPWM2_LoadDutyValue& (0+255),w,b
  5588  00133C  6E66               	movwf	3942,c	;volatile
  5589                           
  5590                           ; BSR set to: 0
  5591  00133E  0012               	return		;funcret
  5592  001340                     __end_of_EPWM2_LoadDutyValue:
  5593                           	opt stack 0
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           intcon2	equ	0xFF1
  5602                           intcon3	equ	0xFF0
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           postdec1	equ	0xFE5
  5606                           fsr1l	equ	0xFE1
  5607                           status	equ	0xFD8
  5608                           
  5609 ;; *************** function _EPWM1_LoadDutyValue *****************
  5610 ;; Defined at:
  5611 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  dutyValue       2   11[BANK0 ] unsigned int 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5625 ;;      Params:         0       2       0       0
  5626 ;;      Locals:         0       0       0       0
  5627 ;;      Temps:          0       2       0       0
  5628 ;;      Totals:         0       4       0       0
  5629 ;;Total ram usage:        4 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    2
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_PID_Linea
  5636 ;;		_taraturaIR
  5637 ;;		_stopM
  5638 ;;		_main
  5639 ;;		_seguiLinea
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text32
  5644  001340                     __ptext32:
  5645                           	opt stack 0
  5646  001340                     _EPWM1_LoadDutyValue:
  5647                           	opt stack 27
  5648                           
  5649                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;incstack = 0
  5653  001340  C06B  F06D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5654  001344  C06C  F06E         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5655  001348  0100               	movlb	0	; () banked
  5656  00134A  90D8               	bcf	status,0,c
  5657  00134C  336E               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5658  00134E  336D               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5659  001350  0100               	movlb	0	; () banked
  5660  001352  90D8               	bcf	status,0,c
  5661  001354  336E               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  5662  001356  336D               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5663  001358  0100               	movlb	0	; () banked
  5664  00135A  516D               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5665  00135C  6EBE               	movwf	4030,c	;volatile
  5666                           
  5667                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  5668  00135E  C06B  F06D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5669  001362  0E03               	movlw	3
  5670  001364  0100               	movlb	0	; () banked
  5671  001366  176D               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5672  001368  0100               	movlb	0	; () banked
  5673  00136A  3B6D               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5674  00136C  0EF0               	movlw	240
  5675  00136E  176D               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  5676  001370  50BD               	movf	4029,w,c	;volatile
  5677  001372  0BCF               	andlw	207
  5678  001374  0100               	movlb	0	; () banked
  5679  001376  116D               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
  5680  001378  6EBD               	movwf	4029,c	;volatile
  5681                           
  5682                           ; BSR set to: 0
  5683  00137A  0012               	return		;funcret
  5684  00137C                     __end_of_EPWM1_LoadDutyValue:
  5685                           	opt stack 0
  5686                           tblptru	equ	0xFF8
  5687                           tblptrh	equ	0xFF7
  5688                           tblptrl	equ	0xFF6
  5689                           tablat	equ	0xFF5
  5690                           prodh	equ	0xFF4
  5691                           prodl	equ	0xFF3
  5692                           intcon	equ	0xFF2
  5693                           intcon2	equ	0xFF1
  5694                           intcon3	equ	0xFF0
  5695                           postinc0	equ	0xFEE
  5696                           wreg	equ	0xFE8
  5697                           postdec1	equ	0xFE5
  5698                           fsr1l	equ	0xFE1
  5699                           status	equ	0xFD8
  5700                           
  5701 ;; *************** function _ADC_GetConversion *****************
  5702 ;; Defined at:
  5703 ;;		line 105 in file "mcc_generated_files/adc.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  channel         1    wreg     enum E6653
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  channel         1   35[COMRAM] enum E6653
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  2   31[COMRAM] unsigned int 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5717 ;;      Params:         2       0       0       0
  5718 ;;      Locals:         1       0       0       0
  5719 ;;      Temps:          2       0       0       0
  5720 ;;      Totals:         5       0       0       0
  5721 ;;Total ram usage:        5 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    2
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_PID_Linea
  5728 ;;		_taraturaIR
  5729 ;;		_taratura
  5730 ;;		_controllaColore
  5731 ;;		_main
  5732 ;;		_seguiLinea
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text33
  5737  0013AC                     __ptext33:
  5738                           	opt stack 0
  5739  0013AC                     _ADC_GetConversion:
  5740                           	opt stack 27
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;incstack = 0
  5744                           ;ADC_GetConversion@channel stored from wreg
  5745  0013AC  6E24               	movwf	ADC_GetConversion@channel,c
  5746                           
  5747                           ;adc.c: 108: ADCON0bits.CHS = channel;
  5748  0013AE  C024  F022         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  5749  0013B2  4622               	rlncf	??_ADC_GetConversion,f,c
  5750  0013B4  4622               	rlncf	??_ADC_GetConversion,f,c
  5751  0013B6  50C2               	movf	4034,w,c	;volatile
  5752  0013B8  1822               	xorwf	??_ADC_GetConversion,w,c
  5753  0013BA  0B83               	andlw	-125
  5754  0013BC  1822               	xorwf	??_ADC_GetConversion,w,c
  5755  0013BE  6EC2               	movwf	4034,c	;volatile
  5756                           
  5757                           ;adc.c: 111: ADCON0bits.ADON = 1;
  5758  0013C0  80C2               	bsf	4034,0,c	;volatile
  5759                           
  5760                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  5761  0013C2  82C2               	bsf	4034,1,c	;volatile
  5762  0013C4                     l222:
  5763  0013C4  B2C2               	btfsc	4034,1,c	;volatile
  5764  0013C6  D7FE               	goto	l222
  5765                           
  5766                           ;adc.c: 120: }
  5767                           ;adc.c: 123: return ((ADRESH << 8) + ADRESL);
  5768  0013C8  50C4               	movf	4036,w,c	;volatile
  5769  0013CA  6E23               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  5770  0013CC  6A22               	clrf	??_ADC_GetConversion& (0+255),c
  5771  0013CE  50C3               	movf	4035,w,c	;volatile
  5772  0013D0  2422               	addwf	??_ADC_GetConversion,w,c
  5773  0013D2  6E20               	movwf	?_ADC_GetConversion,c
  5774  0013D4  0E00               	movlw	0
  5775  0013D6  2023               	addwfc	??_ADC_GetConversion+1,w,c
  5776  0013D8  6E21               	movwf	?_ADC_GetConversion+1,c
  5777  0013DA  0012               	return	
  5778  0013DC                     __end_of_ADC_GetConversion:
  5779                           	opt stack 0
  5780                           tblptru	equ	0xFF8
  5781                           tblptrh	equ	0xFF7
  5782                           tblptrl	equ	0xFF6
  5783                           tablat	equ	0xFF5
  5784                           prodh	equ	0xFF4
  5785                           prodl	equ	0xFF3
  5786                           intcon	equ	0xFF2
  5787                           intcon2	equ	0xFF1
  5788                           intcon3	equ	0xFF0
  5789                           postinc0	equ	0xFEE
  5790                           wreg	equ	0xFE8
  5791                           postdec1	equ	0xFE5
  5792                           fsr1l	equ	0xFE1
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _InitApp *****************
  5796 ;; Defined at:
  5797 ;;		line 37 in file "user.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5811 ;;      Params:         0       0       0       0
  5812 ;;      Locals:         0       0       0       0
  5813 ;;      Temps:          0       0       0       0
  5814 ;;      Totals:         0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    2
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_main
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text34
  5826  0014A8                     __ptext34:
  5827                           	opt stack 0
  5828  0014A8                     _InitApp:
  5829                           	opt stack 28
  5830                           
  5831                           ;user.c: 40: TRISAbits.RA0 = 0;
  5832                           
  5833                           ;incstack = 0
  5834  0014A8  9092               	bcf	3986,0,c	;volatile
  5835                           
  5836                           ;user.c: 41: TRISAbits.RA1 = 0;
  5837  0014AA  9292               	bcf	3986,1,c	;volatile
  5838                           
  5839                           ;user.c: 42: TRISAbits.RA2 = 0;
  5840  0014AC  9492               	bcf	3986,2,c	;volatile
  5841                           
  5842                           ;user.c: 43: TRISAbits.RA3 = 0;
  5843  0014AE  9692               	bcf	3986,3,c	;volatile
  5844                           
  5845                           ;user.c: 44: TRISAbits.RA4 = 0;
  5846  0014B0  9892               	bcf	3986,4,c	;volatile
  5847                           
  5848                           ;user.c: 45: TRISAbits.RA5 = 1;
  5849  0014B2  8A92               	bsf	3986,5,c	;volatile
  5850                           
  5851                           ;user.c: 47: TRISBbits.RB0 = 0;
  5852  0014B4  9093               	bcf	3987,0,c	;volatile
  5853                           
  5854                           ;user.c: 48: TRISBbits.RB1 = 1;
  5855  0014B6  8293               	bsf	3987,1,c	;volatile
  5856                           
  5857                           ;user.c: 49: TRISBbits.RB2 = 1;
  5858  0014B8  8493               	bsf	3987,2,c	;volatile
  5859                           
  5860                           ;user.c: 50: TRISBbits.RB3 = 1;
  5861  0014BA  8693               	bsf	3987,3,c	;volatile
  5862                           
  5863                           ;user.c: 51: TRISBbits.RB4 = 1;
  5864  0014BC  8893               	bsf	3987,4,c	;volatile
  5865                           
  5866                           ;user.c: 52: TRISBbits.RB5 = 1;
  5867  0014BE  8A93               	bsf	3987,5,c	;volatile
  5868                           
  5869                           ;user.c: 55: TRISC = 0x00;
  5870  0014C0  0E00               	movlw	0
  5871  0014C2  6E94               	movwf	3988,c	;volatile
  5872  0014C4  0012               	return		;funcret
  5873  0014C6                     __end_of_InitApp:
  5874                           	opt stack 0
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           intcon2	equ	0xFF1
  5883                           intcon3	equ	0xFF0
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           postdec1	equ	0xFE5
  5887                           fsr1l	equ	0xFE1
  5888                           status	equ	0xFD8
  5889                           
  5890 ;; *************** function _low_isr *****************
  5891 ;; Defined at:
  5892 ;;		line 67 in file "interrupts.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		None
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5906 ;;      Params:         0       0       0       0
  5907 ;;      Locals:         0       0       0       0
  5908 ;;      Temps:         17       0       0       0
  5909 ;;      Totals:        17       0       0       0
  5910 ;;Total ram usage:       17 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    1
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		Interrupt level 1
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	intcodelo
  5921  000018                     __pintcodelo:
  5922                           	opt stack 0
  5923  000018                     _low_isr:
  5924                           	opt stack 25
  5925                           
  5926                           ;incstack = 0
  5927  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5928  00001A  CFD8 F00F          	movff	status,??_low_isr
  5929  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
  5930  000022  CFE0 F011          	movff	bsr,??_low_isr+2
  5931  000026  CFFA F012          	movff	pclath,??_low_isr+3
  5932  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
  5933  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
  5934  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
  5935  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
  5936  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
  5937  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
  5938  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
  5939  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
  5940  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
  5941  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  5942  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  5943  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
  5944  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
  5945  00005E  C01F  FFF5         	movff	??_low_isr+16,tablat
  5946  000062  C01E  FFF8         	movff	??_low_isr+15,tblptru
  5947  000066  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  5948  00006A  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  5949  00006E  C01B  FFF4         	movff	??_low_isr+12,prodh
  5950  000072  C01A  FFF3         	movff	??_low_isr+11,prodl
  5951  000076  C019  FFDA         	movff	??_low_isr+10,fsr2h
  5952  00007A  C018  FFD9         	movff	??_low_isr+9,fsr2l
  5953  00007E  C017  FFE2         	movff	??_low_isr+8,fsr1h
  5954  000082  C016  FFE1         	movff	??_low_isr+7,fsr1l
  5955  000086  C015  FFEA         	movff	??_low_isr+6,fsr0h
  5956  00008A  C014  FFE9         	movff	??_low_isr+5,fsr0l
  5957  00008E  C013  FFFB         	movff	??_low_isr+4,pclatu
  5958  000092  C012  FFFA         	movff	??_low_isr+3,pclath
  5959  000096  C011  FFE0         	movff	??_low_isr+2,bsr
  5960  00009A  C010  FFE8         	movff	??_low_isr+1,wreg
  5961  00009E  C00F  FFD8         	movff	??_low_isr,status
  5962  0000A2  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5963  0000A4  0010               	retfie	
  5964  0000A6                     __end_of_low_isr:
  5965                           	opt stack 0
  5966                           pclatu	equ	0xFFB
  5967                           pclath	equ	0xFFA
  5968                           tblptru	equ	0xFF8
  5969                           tblptrh	equ	0xFF7
  5970                           tblptrl	equ	0xFF6
  5971                           tablat	equ	0xFF5
  5972                           prodh	equ	0xFF4
  5973                           prodl	equ	0xFF3
  5974                           intcon	equ	0xFF2
  5975                           intcon2	equ	0xFF1
  5976                           intcon3	equ	0xFF0
  5977                           postinc0	equ	0xFEE
  5978                           fsr0h	equ	0xFEA
  5979                           fsr0l	equ	0xFE9
  5980                           wreg	equ	0xFE8
  5981                           postdec1	equ	0xFE5
  5982                           fsr1h	equ	0xFE2
  5983                           fsr1l	equ	0xFE1
  5984                           bsr	equ	0xFE0
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function _high_isr *****************
  5990 ;; Defined at:
  5991 ;;		line 27 in file "interrupts.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		None
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6005 ;;      Params:         0       0       0       0
  6006 ;;      Locals:         0       0       0       0
  6007 ;;      Temps:         14       0       0       0
  6008 ;;      Totals:        14       0       0       0
  6009 ;;Total ram usage:       14 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		Interrupt level 2
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	intcode
  6019  000008                     __pintcode:
  6020                           	opt stack 0
  6021  000008                     _high_isr:
  6022                           	opt stack 25
  6023                           
  6024                           ;incstack = 0
  6025  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6026  00000A  EF8A  F008         	goto	int_func
  6027                           pclatu	equ	0xFFB
  6028                           pclath	equ	0xFFA
  6029                           tblptru	equ	0xFF8
  6030                           tblptrh	equ	0xFF7
  6031                           tblptrl	equ	0xFF6
  6032                           tablat	equ	0xFF5
  6033                           prodh	equ	0xFF4
  6034                           prodl	equ	0xFF3
  6035                           intcon	equ	0xFF2
  6036                           intcon2	equ	0xFF1
  6037                           intcon3	equ	0xFF0
  6038                           postinc0	equ	0xFEE
  6039                           fsr0h	equ	0xFEA
  6040                           fsr0l	equ	0xFE9
  6041                           wreg	equ	0xFE8
  6042                           postdec1	equ	0xFE5
  6043                           fsr1h	equ	0xFE2
  6044                           fsr1l	equ	0xFE1
  6045                           bsr	equ	0xFE0
  6046                           fsr2h	equ	0xFDA
  6047                           fsr2l	equ	0xFD9
  6048                           status	equ	0xFD8
  6049                           
  6050                           	psect	intcode_body
  6051  001114                     __pintcode_body:
  6052                           	opt stack 25
  6053  001114                     int_func:
  6054                           	opt stack 25
  6055  001114  CFFA F001          	movff	pclath,??_high_isr
  6056  001118  CFFB F002          	movff	pclatu,??_high_isr+1
  6057  00111C  CFE9 F003          	movff	fsr0l,??_high_isr+2
  6058  001120  CFEA F004          	movff	fsr0h,??_high_isr+3
  6059  001124  CFE1 F005          	movff	fsr1l,??_high_isr+4
  6060  001128  CFE2 F006          	movff	fsr1h,??_high_isr+5
  6061  00112C  CFD9 F007          	movff	fsr2l,??_high_isr+6
  6062  001130  CFDA F008          	movff	fsr2h,??_high_isr+7
  6063  001134  CFF3 F009          	movff	prodl,??_high_isr+8
  6064  001138  CFF4 F00A          	movff	prodh,??_high_isr+9
  6065  00113C  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  6066  001140  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  6067  001144  CFF8 F00D          	movff	tblptru,??_high_isr+12
  6068  001148  CFF5 F00E          	movff	tablat,??_high_isr+13
  6069  00114C  C00E  FFF5         	movff	??_high_isr+13,tablat
  6070  001150  C00D  FFF8         	movff	??_high_isr+12,tblptru
  6071  001154  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  6072  001158  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  6073  00115C  C00A  FFF4         	movff	??_high_isr+9,prodh
  6074  001160  C009  FFF3         	movff	??_high_isr+8,prodl
  6075  001164  C008  FFDA         	movff	??_high_isr+7,fsr2h
  6076  001168  C007  FFD9         	movff	??_high_isr+6,fsr2l
  6077  00116C  C006  FFE2         	movff	??_high_isr+5,fsr1h
  6078  001170  C005  FFE1         	movff	??_high_isr+4,fsr1l
  6079  001174  C004  FFEA         	movff	??_high_isr+3,fsr0h
  6080  001178  C003  FFE9         	movff	??_high_isr+2,fsr0l
  6081  00117C  C002  FFFB         	movff	??_high_isr+1,pclatu
  6082  001180  C001  FFFA         	movff	??_high_isr,pclath
  6083  001184  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6084  001186  0011               	retfie		f
  6085  001188                     __end_of_high_isr:
  6086                           	opt stack 0
  6087  0000                     pclatu	equ	0xFFB
  6088                           pclath	equ	0xFFA
  6089                           tblptru	equ	0xFF8
  6090                           tblptrh	equ	0xFF7
  6091                           tblptrl	equ	0xFF6
  6092                           tablat	equ	0xFF5
  6093                           prodh	equ	0xFF4
  6094                           prodl	equ	0xFF3
  6095                           intcon	equ	0xFF2
  6096                           intcon2	equ	0xFF1
  6097                           intcon3	equ	0xFF0
  6098                           postinc0	equ	0xFEE
  6099                           fsr0h	equ	0xFEA
  6100                           fsr0l	equ	0xFE9
  6101                           wreg	equ	0xFE8
  6102                           postdec1	equ	0xFE5
  6103                           fsr1h	equ	0xFE2
  6104                           fsr1l	equ	0xFE1
  6105                           bsr	equ	0xFE0
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           pclatu	equ	0xFFB
  6110                           pclath	equ	0xFFA
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           intcon2	equ	0xFF1
  6119                           intcon3	equ	0xFF0
  6120                           postinc0	equ	0xFEE
  6121                           fsr0h	equ	0xFEA
  6122                           fsr0l	equ	0xFE9
  6123                           wreg	equ	0xFE8
  6124                           postdec1	equ	0xFE5
  6125                           fsr1h	equ	0xFE2
  6126                           fsr1l	equ	0xFE1
  6127                           bsr	equ	0xFE0
  6128                           fsr2h	equ	0xFDA
  6129                           fsr2l	equ	0xFD9
  6130                           status	equ	0xFD8
  6131                           
  6132                           	psect	rparam
  6133  0000                     pclatu	equ	0xFFB
  6134                           pclath	equ	0xFFA
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           intcon	equ	0xFF2
  6142                           intcon2	equ	0xFF1
  6143                           intcon3	equ	0xFF0
  6144                           postinc0	equ	0xFEE
  6145                           fsr0h	equ	0xFEA
  6146                           fsr0l	equ	0xFE9
  6147                           wreg	equ	0xFE8
  6148                           postdec1	equ	0xFE5
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           bsr	equ	0xFE0
  6152                           fsr2h	equ	0xFDA
  6153                           fsr2l	equ	0xFD9
  6154                           status	equ	0xFD8
  6155                           
  6156                           	psect	temp
  6157  000040                     btemp:
  6158                           	opt stack 0
  6159  000040                     	ds	1
  6160  0000                     int$flags	set	btemp
  6161                           pclatu	equ	0xFFB
  6162                           pclath	equ	0xFFA
  6163                           tblptru	equ	0xFF8
  6164                           tblptrh	equ	0xFF7
  6165                           tblptrl	equ	0xFF6
  6166                           tablat	equ	0xFF5
  6167                           prodh	equ	0xFF4
  6168                           prodl	equ	0xFF3
  6169                           intcon	equ	0xFF2
  6170                           intcon2	equ	0xFF1
  6171                           intcon3	equ	0xFF0
  6172                           postinc0	equ	0xFEE
  6173                           fsr0h	equ	0xFEA
  6174                           fsr0l	equ	0xFE9
  6175                           wreg	equ	0xFE8
  6176                           postdec1	equ	0xFE5
  6177                           fsr1h	equ	0xFE2
  6178                           fsr1l	equ	0xFE1
  6179                           bsr	equ	0xFE0
  6180                           fsr2h	equ	0xFDA
  6181                           fsr2l	equ	0xFD9
  6182                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         24
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      63
    BANK0           160     49      53
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_compara
    _main->_delay_mS
    _taraturaIR->___wmul
    _taraturaIR->_delay_mS
    ___ftge->_ADC_GetConversion
    _taratura->_delay_mS
    _controllaColore->_delay_mS
    ___lwdiv->_ADC_GetConversion
    ___lwtoft->_ADC_GetConversion
    ___lwtoft->___ftpack
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _EPWM2_LoadDutyValue->___wmul
    _EPWM1_LoadDutyValue->___wmul

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PID_Linea
    _taraturaIR->_EPWM1_LoadDutyValue
    _taraturaIR->_EPWM2_LoadDutyValue
    _taraturaIR->___ftge
    ___ftge->___lwtoft
    _taratura->_delay_mS
    _stopM->_EPWM1_LoadDutyValue
    _stopM->_EPWM2_LoadDutyValue
    _controllaColore->_delay_mS
    _delay_mS->___lwdiv
    _PID_Linea->___ftsub
    ___lwtoft->___ftpack
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___ftpack
    _EPWM2_LoadDutyValue->___fttol
    _EPWM1_LoadDutyValue->___fttol

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40697
                                             48 BANK0      1     1      0
                  _ADC_GetConversion
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                            _InitApp
                          _PID_Linea
                  _SYSTEM_Initialize
                    _abbassaCarrello
                            _compara
                    _controllaColore
                           _delay_mS
                    _sollevaCarrello
                              _stopM
                           _taratura
                         _taraturaIR
 ---------------------------------------------------------------------------------
 (1) _taraturaIR                                           8     8      0    8402
                                             15 BANK0      8     8      0
                  _ADC_GetConversion
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                             ___ftge
                           ___lwtoft
                             ___wmul
                           _delay_mS
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     540
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     352
                                              6 BANK0      9     3      6
                  _ADC_GetConversion (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _taratura                                             4     4      0    2272
                                              9 BANK0      4     4      0
                  _ADC_GetConversion
                            ___lwdiv
                           _delay_mS
 ---------------------------------------------------------------------------------
 (1) _stopM                                                1     1      0    3050
                                             15 BANK0      1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _sollevaCarrello                                      2     2      0      47
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _controllaColore                                      1     1      0    1689
                                              9 BANK0      1     1      0
                  _ADC_GetConversion
                           _delay_mS
 ---------------------------------------------------------------------------------
 (2) _delay_mS                                             3     1      2    1658
                                             36 COMRAM     1     1      0
                                              7 BANK0      2     0      2
                            ___lwdiv
                          _checkBatt
 ---------------------------------------------------------------------------------
 (3) _checkBatt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) _compara                                              9     3      6    1147
                                             31 COMRAM     6     0      6
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _abbassaCarrello                                      3     3      0      47
                                             31 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP4_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_Linea                                           12    10      2   19261
                                             36 BANK0     12    10      2
                  _ADC_GetConversion
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                            ___ftadd
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2666
                                              3 BANK0      3     0      3
                  _ADC_GetConversion (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     525
                                             31 COMRAM     4     0      4
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4569
                                             30 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4205
                                             18 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3468
                                              3 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                             31 COMRAM     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2    1525
                                             11 BANK0      4     2      2
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2    1525
                                             11 BANK0      4     2      2
                            ___fttol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                             31 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EPWM1_LoadDutyValue
     ___fttol (ARG)
     ___wmul (ARG)
   _EPWM2_LoadDutyValue
     ___fttol (ARG)
     ___wmul (ARG)
   _InitApp
   _PID_Linea
     _ADC_GetConversion
     _EPWM1_LoadDutyValue
       ___fttol (ARG)
       ___wmul (ARG)
     _EPWM2_LoadDutyValue
       ___fttol (ARG)
       ___wmul (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___fttol
     ___lwtoft
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _abbassaCarrello
   _compara
   _controllaColore
     _ADC_GetConversion
     _delay_mS
       ___lwdiv
         _ADC_GetConversion (ARG)
       _checkBatt
   _delay_mS
     ___lwdiv
       _ADC_GetConversion (ARG)
     _checkBatt
   _sollevaCarrello
   _stopM
     _EPWM1_LoadDutyValue
       ___fttol (ARG)
       ___wmul (ARG)
     _EPWM2_LoadDutyValue
       ___fttol (ARG)
       ___wmul (ARG)
   _taratura
     _ADC_GetConversion
     ___lwdiv
       _ADC_GetConversion (ARG)
     _delay_mS
       ___lwdiv
         _ADC_GetConversion (ARG)
       _checkBatt
   _taraturaIR
     _ADC_GetConversion
     _EPWM1_LoadDutyValue
       ___fttol (ARG)
       ___wmul (ARG)
     _EPWM2_LoadDutyValue
       ___fttol (ARG)
       ___wmul (ARG)
     ___ftge
       _ADC_GetConversion (ARG)
       ___lwtoft (ARG)
         _ADC_GetConversion (ARG)
         ___ftpack (ARG)
     ___lwtoft
       _ADC_GetConversion (ARG)
       ___ftpack (ARG)
     ___wmul
     _delay_mS
       ___lwdiv
         _ADC_GetConversion (ARG)
       _checkBatt

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      35       4       33.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      3F       1       67.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74       8        0.0%
DATA                 0      0      74      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Oct 25 10:54:25 2020

                _CCP4_Initialize 14C6     __size_of_EPWM2_LoadDutyValue 003C  
                              _T 002E                                _i 0026  
                             bsr 000FE0              ___wmul@multiplicand 0022  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   ___ftadd@exp1 007D                     ___ftadd@exp2 007C  
                   ___ftadd@sign 007B                              l222 13C4  
                            l309 11E2                              l342 0EC4  
                            l344 0EC8                              l345 0ED0  
                            l346 0ED6                              l347 0EDC  
                            l339 0F3A                              l380 1098  
                            l348 0EE4                              l349 0EEA  
                            l374 0F58                              l375 0FEE  
                            l720 0E68                              l379 1002  
                            l743 04B2                              l747 04EC  
                            l749 0514                              l758 05EA  
                            l767 0614                              l898 110A  
                   __CFG_CPB$OFF 000000                              _PR2 000FBB  
                   __CFG_CPD$OFF 000000                  _timer1ReloadVal 003E  
                _TMR2_Initialize 14F6                              wreg 000FE8  
       __end_of_EPWM2_Initialize 1488         __size_of_controllaColore 00D0  
                   __CFG_LVP$OFF 000000                             l3031 0CCA  
                           l3033 0CD2                             l3131 0128  
                           l3123 00EE                             l3037 0CF2  
                           l3221 0398                             l3141 0184  
                           l3215 0358                             l2361 0F50  
                           l3145 01AC                             l3137 015E  
                           l3227 03D6                             l2703 04C0  
                           l2731 057A                             l2715 050A  
                           l2395 0FFA                             l2811 1226  
                           l3179 02AA                             l2733 0588  
                           l2725 054C                             l2709 04FA  
                           l2805 1210                             l2671 0E14  
                           l2663 0DD2                             l2831 0900  
                           l2751 063E                             l2743 05D0  
                           l2735 0596                             l3295 0F0A  
                           l2825 08C6                             l2761 068C  
                           l2745 05DE                             l2737 05A2  
                           l2921 0AB6                             l3297 0F2E  
                           l2675 0E2A                             l2667 0DE0  
                           l2931 0AEA                             l2771 10BA  
                           l2677 0E54                             l2669 0DEA  
                           l2845 094E                             l2917 0AA2  
                           l2773 10C6                             l2679 0E5E  
                           l2855 098C                             l2871 1256  
                           l2935 0B06                             l2927 0AD0  
                           l2783 10FC                             l2775 10CC  
                           l2849 096C                             l2929 0AE0  
                           l2859 09AA                             l2963 0704  
                           l2883 0D7A                             l2967 0870  
                           l2879 0D3A                             l2993 0E9E  
                           l2889 0DBE                             l2977 0B50  
                           l2899 0A20                             l2987 0BEC  
                           l2997 0EF0                             u2031 08A2  
                           u2051 08DC                             u2131 09FE  
                           _LATA 000F89                             u2150 0A46  
                           _LATB 000F8A                             _LATC 000F8B  
                           u2155 0A3C                             u2507 0F68  
                           u2517 0F76                             u2607 1020  
                           u2527 0F8C                             u2617 1036  
                           u2537 0F9A                             u1771 0460  
                           u2627 1044                             u2547 0FB0  
                           u1781 047E                             u2637 105A  
                           u2557 0FBE                             u2477 0B26  
                           u2647 1068                             u2567 0FD4  
                           u2487 12E4                             u2657 107E  
                           u2577 0FE2                             u2497 12F6  
                           u2667 108C                             u2587 1216  
                           u2677 0866                             u2597 1012  
                           _TMR1 000FCE                             _TMR2 000FBC  
                           _WPUB 000F61                             _main 00AA  
                   ___ftpack@arg 0020                     ___ftpack@exp 0023  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0040                    __CFG_BORV$190 000000  
                           prodh 000FF4                             prodl 000FF3  
              taratura@v_sensori 006B                             start 00A6  
                  __CFG_IESO$OFF 000000            ??_EPWM1_LoadDutyValue 006D  
                   ___ftmul@cntr 0070                     ___param_bank 000000  
                   ___ftmul@sign 0071                  __end_of_InitApp 14C6  
                   ___fttol@exp1 006A                     ___fttol@lval 0066  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 1516  
             __size_of_PID_Linea 01DA                            ?_main 0001  
                __end_of___ftadd 06B2                  _TMR1_StartTimer 151E  
                _sollevaCarrello 0F48                  __end_of___ftmul 09EA  
                          _T1CON 000FCD                  __end_of___ftsub 1280  
                __end_of___fttol 0B18                            _T2CON 000FBA  
                          _LATA0 007C48                            _LATA1 007C49  
                          _LATA2 007C4A                            _LATA3 007C4B  
                          _LATC0 007C58                            _LATA4 007C4C  
                          _LATC3 007C5B                            _LATC4 007C5C  
                          _LATC5 007C5D                            _LATC6 007C5E  
                          _LATC7 007C5F                   __CFG_DEBUG$OFF 000000  
                __end_of___lwdiv 1114                            _TMR1H 000FCF  
                          _TMR1L 000FCE                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                    __CFG_WRTB$OFF 000000  
                __end_of_compara 11E8                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                            _bluPC 0034  
                 __CFG_EBTRB$OFF 000000                     main@numLinee 0090  
             __CFG_MCLRE$EXTMCLR 000000                    ___ftpack@sign 0024  
                          _stopM 12C4          __end_of_TMR1_Initialize 1468  
                __end_of_low_isr 00A6                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
        __end_of_CCP4_Initialize 14E0                   __CFG_HFOFST$ON 000000  
                _TMR2_StartTimer 151A                   __CFG_PBADEN$ON 000000  
                __initialization 1280                     __end_of_main 044A  
        __end_of_TMR2_Initialize 1508                           ??_main 0026  
                  ___fttol@sign1 0065                    __activetblptr 000002  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1H 000FBF  
                         _CCPR2H 000F68                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                           _CCPR4H 000F59  
                         _CCPR4L 000F58                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
               __end_of___ftpack 0E88                           ?_stopM 0001  
                         _T1GCON 000FCC                           _INT1IE 007F83  
                         _INT1IP 007F86                   __CFG_WDTEN$OFF 000000  
               __end_of___lwtoft 1426                           _OSCCON 000FD3  
              ??_controllaColore 0069                __end_of_PID_Linea 088C  
                      ??_InitApp 0020                       _V_frontale 002A  
               __end_of_delay_mS 1234                   __CFG_XINST$OFF 000000  
                         _V_batt 0032                     _CCPTMRS0bits 000F49  
                   _CCPTMRS1bits 000F48                    compara@valore 0020  
               __end_of_high_isr 1188                    compara@soglia 0022  
                         ___ftge 0CFA          __end_of_TMR1_StartTimer 1522  
        __end_of_sollevaCarrello 0FF2                           ___wmul 13DC  
                      ??___ftadd 0078                   __CFG_STVREN$ON 000000  
                         _deltaV 0030                        ??___ftmul 0069  
                      ??___ftsub 0025                        ??___fttol 0060  
                      ??___lwdiv 0025                           _colore 0094  
                         clear_0 12B0                           _vel_DX 003C  
                         _vel_SX 003A         __size_of_abbassaCarrello 00AA  
                      ??_compara 0060            ___ftmul@f3_as_product 006D  
               __end_of_taratura 0F48                     __pdataCOMRAM 003A  
                      ??_low_isr 000F                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       ADC_GetConversion@channel 0024              _EPWM2_LoadDutyValue 1304  
        __end_of_TMR2_StartTimer 151E                 ?_TMR1_Initialize 0001  
              _SYSTEM_Initialize 1426                       __accesstop 0060  
        __end_of__initialization 12B6                       ___ftadd@f1 0072  
                     ___ftadd@f2 0075                 ?_CCP4_Initialize 0001  
                     ___ftge@ff1 0066                       ___ftge@ff2 0069  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
              compara@tolleranza 0024                       ___ftmul@f1 0063  
                     ___ftmul@f2 0066                ?_EPWM1_Initialize 0001  
                     ___ftsub@f1 007E                       ___ftsub@f2 0081  
                     ___fttol@f1 0020                   __pcstackCOMRAM 0001  
           ?_EPWM2_LoadDutyValue 006B               __size_of_checkBatt 0002  
            ??_SYSTEM_Initialize 0020               ??_EPWM1_Initialize 0020  
                  __end_of_stopM 1304                 ?_TMR2_Initialize 0001  
                     ___lwtoft@c 0063                ?_EPWM2_Initialize 0001  
                    PID_Linea@Ie 0087        __end_of_SYSTEM_Initialize 1448  
             ??_EPWM2_Initialize 0020                          ??_stopM 006F  
                     __pbssBANK0 0091                  __CFG_PLLCFG$OFF 000000  
                     __pnvCOMRAM 003E               __CFG_CCP2MX$PORTC1 000000  
          ??_EPWM2_LoadDutyValue 006D                          ?___ftge 0066  
                        ?___wmul 0020                 ?_TMR1_StartTimer 0001  
               ?_sollevaCarrello 0001               __CFG_CCP3MX$PORTB5 000000  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        _CCP4CON 000F57                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64                        ?___ftpack 0020  
        __size_of_ADC_Initialize 0016                        ?___lwtoft 0063  
                        _INTEDG1 007F8D                          _OSCCON2 000FD2  
                      ?_delay_mS 0067                __CFG_PRICLKEN$OFF 000000  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                ??_abbassaCarrello 0020  
              __end_of_checkBatt 1524                 ?_TMR2_StartTimer 0001  
                     _goal_color 0093                        ?_high_isr 0001  
    __end_of_EPWM1_LoadDutyValue 137C                          _InitApp 14A8  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                        ?_taratura 0001  
                __size_of___ftge 00C8                          ___ftadd 044A  
                __size_of___wmul 0026                          ___ftmul 088C  
                        ___ftsub 1234                          ___fttol 09EA  
                        ___lwdiv 109C                          __pcinit 1280  
                     ??___ftpack 0060                          __ramtop 0300  
                        __ptext0 00AA                          __ptext1 0B18  
                        __ptext2 13DC                          __ptext3 0CFA  
                        __ptext4 0E88                          __ptext5 12C4  
                        __ptext6 0F48                          __ptext7 0C2A  
                        __ptext8 11E8                          __ptext9 1522  
                    taraturaIR@i 0073                      taraturaIR@s 0075  
                     ??___lwtoft 0025                          _compara 1188  
                      _T1CONbits 000FCD            _OSCILLATOR_Initialize 1508  
                      _T2CONbits 000FBA                          _msec_10 002C  
                _controllaColore 0C2A         ??_PIN_MANAGER_Initialize 0020  
                     ??_delay_mS 0025                          _low_isr 0018  
                        _verdePC 0036                          _rossoPC 0038  
     __size_of_SYSTEM_Initialize 0022                       ??_high_isr 0001  
                 __pintcode_body 1114             end_of_initialization 12B6  
                  __Lmediumconst 0000                          int_func 1114  
               taraturaIR@soglia 0071                       _taraturaIR 0B18  
                     ??_taratura 0069                        _PID_Linea 06B2  
                        postdec1 000FE5                          postinc0 000FEE  
                      _PORTBbits 000F81                        _TRISAbits 000F92  
                      _TRISBbits 000F93                    delay_mS@m_sec 0067  
               sollevaCarrello@p 0021                       ?_PID_Linea 0084  
                    ___ftmul@exp 006C                   __end_of___ftge 0DC2  
                 __end_of___wmul 1402          __end_of_controllaColore 0CFA  
                  __pidataCOMRAM 1516                   _ADC_Initialize 14E0  
         ?_OSCILLATOR_Initialize 0001              start_initialization 1280  
      __size_of_EPWM1_Initialize 0020  __size_of_PIN_MANAGER_Initialize 0030  
   EPWM1_LoadDutyValue@dutyValue 006B                      ?_taraturaIR 0001  
      __size_of_EPWM2_Initialize 0020         __size_of_TMR1_Initialize 0020  
                       ??___ftge 006C                     PID_Linea@vel 0084  
                       ??___wmul 0024         __size_of_CCP4_Initialize 001A  
         __end_of_ADC_Initialize 14F6                  _abbassaCarrello 0FF2  
               abbassaCarrello@p 0021                __size_of___ftpack 00C6  
                    __pbssCOMRAM 0026                __size_of___lwtoft 0024  
                  __pcstackBANK0 0060         __size_of_TMR2_Initialize 0012  
              __size_of_delay_mS 004C                       PID_Linea@e 008D  
              __size_of_high_isr 1180      __end_of_EPWM2_LoadDutyValue 1340  
                      _checkBatt 1522                         ?_InitApp 0001  
               ___lwdiv@dividend 0060           _PIN_MANAGER_Initialize 137C  
                    ??_PID_Linea 0086                        __pintcode 0008  
                       ?___ftadd 0072                         ?___ftmul 0063  
                       ?___ftsub 007E                         ?___fttol 0020  
              __size_of_taratura 00C0                         ?___lwdiv 0060  
                ?_ADC_Initialize 0001                      __pintcodelo 0018  
               ?_controllaColore 0001                         ?_compara 0020  
       __size_of_TMR1_StartTimer 0004         __size_of_sollevaCarrello 00AA  
                       ?_low_isr 0001              __size_of_taraturaIR 0112  
               ___lwdiv@quotient 0065                    _V_pulsantiera 0091  
                 __size_of_stopM 0040                       ?_checkBatt 0001  
                 ___wmul@product 0024         __size_of_TMR2_StartTimer 0004  
                    _compara$971 0062                         _PIR1bits 000F9E  
        __end_of_abbassaCarrello 109C                         _PIR4bits 000F7B  
   __size_of_EPWM1_LoadDutyValue 003C                 __CFG_WDTPS$32768 000000  
                       _PSTR1CON 000FB9                         _PSTR2CON 000F63  
              ??_TMR1_Initialize 0020                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0020                ??_CCP4_Initialize 0020  
               _EPWM1_Initialize 1488                      _INTCON2bits 000FF1  
                      copy_data0 1294                ??_TMR2_Initialize 0020  
               __size_of_InitApp 001E                         __Hrparam 0000  
               _EPWM2_Initialize 1468                         __Lrparam 0000  
              _ADC_GetConversion 13AC               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTB5 000000          ??_OSCILLATOR_Initialize 0020  
             ?_ADC_GetConversion 0020                 __size_of___ftadd 0268  
               __size_of___ftmul 015E                 __size_of___ftsub 004C  
               __size_of___fttol 012E                 __size_of___lwdiv 0078  
                       ___ftpack 0DC2                         ___lwtoft 1402  
            ??_ADC_GetConversion 0022                 __size_of_compara 0060  
          abbassaCarrello@p_1014 0022                         _delay_mS 11E8  
                ___lwdiv@divisor 0062                  ___lwdiv@counter 0064  
                PID_Linea@deltaV 008A                 __size_of_low_isr 008E  
                       __ptext10 109C                         __ptext11 1188  
                       __ptext20 1468                         __ptext12 0FF2  
                       __ptext21 1488                         __ptext13 1426  
                     _T1GCONbits 000FCC                         __ptext30 0DC2  
                       __ptext22 14C6                         __ptext14 14F6  
                       __ptext31 1304                         __ptext23 14E0  
                       __ptext15 151A                         __ptext32 1340  
                       __ptext24 06B2                         __ptext16 1448  
                       __ptext33 13AC                         __ptext25 1402  
                       __ptext17 151E                         __ptext34 14A8  
                       __ptext26 09EA                         __ptext18 137C  
                       __ptext27 1234                         __ptext19 1508  
                       __ptext28 044A                         __ptext29 088C  
                       _high_isr 0008                ??_TMR1_StartTimer 0020  
              ??_sollevaCarrello 0020                     _V_posteriore 0028  
                    ??_checkBatt 0020                    __size_of_main 03A0  
      __end_of_ADC_GetConversion 13DC                     ??_taraturaIR 006F  
                       _taratura 0E88                 ?_abbassaCarrello 0001  
                       int$flags 0040                ??_TMR2_StartTimer 0020  
                     _INTCONbits 000FF2               __end_of_taraturaIR 0C2A  
                       intlevel1 0000                         intlevel2 0000  
   EPWM2_LoadDutyValue@dutyValue 006B          ?_PIN_MANAGER_Initialize 0001  
               ??_ADC_Initialize 0020                __CFG_T3CMX$PORTC0 000000  
            _EPWM1_LoadDutyValue 1340   __end_of_PIN_MANAGER_Initialize 13AC  
              __CFG_FOSC$INTIO67 000000       __size_of_ADC_GetConversion 0030  
                _TMR1_Initialize 1448         __end_of_EPWM1_Initialize 14A8  
           ?_EPWM1_LoadDutyValue 006B  

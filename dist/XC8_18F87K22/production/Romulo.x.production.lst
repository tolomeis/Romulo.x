

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu May 19 19:33:04 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  000B92                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _vel_DX
    50  000B92  02C8               	dw	712
    51                           
    52                           ;initializer for _vel_SX
    53  000B94  02BC               	dw	700
    54                           
    55                           	psect	nvCOMRAM
    56  000038                     __pnvCOMRAM:
    57                           	opt stack 0
    58  000038                     _V_pulsantiera:
    59                           	opt stack 0
    60  000038                     	ds	2
    61  00003A                     _timer1ReloadVal:
    62                           	opt stack 0
    63  00003A                     	ds	2
    64  0000                     _ANSELA	set	3896
    65  0000                     _ANSELB	set	3897
    66  0000                     _ANSELC	set	3898
    67  0000                     _CCP4CON	set	3927
    68  0000                     _CCPR4H	set	3929
    69  0000                     _CCPR4L	set	3928
    70  0000                     _CCPTMRS0bits	set	3913
    71  0000                     _CCPTMRS1bits	set	3912
    72  0000                     _TMR1	set	4046
    73  0000                     _ADCON0	set	4034
    74  0000                     _ADCON0bits	set	4034
    75  0000                     _ADCON1	set	4033
    76  0000                     _ADCON2	set	4032
    77  0000                     _ADRESH	set	4036
    78  0000                     _ADRESL	set	4035
    79  0000                     _CCP1CON	set	4029
    80  0000                     _CCP2CON	set	3942
    81  0000                     _CCPR1H	set	4031
    82  0000                     _CCPR1L	set	4030
    83  0000                     _CCPR2H	set	3944
    84  0000                     _CCPR2L	set	3943
    85  0000                     _ECCP1AS	set	4022
    86  0000                     _ECCP2AS	set	3940
    87  0000                     _INTCON2bits	set	4081
    88  0000                     _INTCONbits	set	4082
    89  0000                     _LATA	set	3977
    90  0000                     _LATB	set	3978
    91  0000                     _LATC	set	3979
    92  0000                     _OSCCON	set	4051
    93  0000                     _OSCCON2	set	4050
    94  0000                     _OSCTUNE	set	3995
    95  0000                     _PIR1bits	set	3998
    96  0000                     _PIR4bits	set	3963
    97  0000                     _PORTBbits	set	3969
    98  0000                     _PR2	set	4027
    99  0000                     _PSTR1CON	set	4025
   100  0000                     _PSTR2CON	set	3939
   101  0000                     _PWM1CON	set	4023
   102  0000                     _PWM2CON	set	3941
   103  0000                     _T1CON	set	4045
   104  0000                     _T1CONbits	set	4045
   105  0000                     _T1GCON	set	4044
   106  0000                     _T1GCONbits	set	4044
   107  0000                     _T2CON	set	4026
   108  0000                     _T2CONbits	set	4026
   109  0000                     _TMR1H	set	4047
   110  0000                     _TMR1L	set	4046
   111  0000                     _TMR2	set	4028
   112  0000                     _TRISA	set	3986
   113  0000                     _TRISAbits	set	3986
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISBbits	set	3987
   116  0000                     _TRISC	set	3988
   117  0000                     _WPUB	set	3937
   118  0000                     _INT1IE	set	32643
   119  0000                     _INT1IP	set	32646
   120  0000                     _INTEDG1	set	32653
   121  0000                     _LATA0	set	31816
   122  0000                     _LATA1	set	31817
   123  0000                     _LATA2	set	31818
   124  0000                     _LATA3	set	31819
   125  0000                     _LATA4	set	31820
   126  0000                     _LATC0	set	31832
   127  0000                     _LATC3	set	31835
   128  0000                     _LATC4	set	31836
   129  0000                     _LATC5	set	31837
   130  0000                     _LATC6	set	31838
   131  0000                     _LATC7	set	31839
   132                           
   133                           ; #config settings
   134  0000                     
   135                           	psect	cinit
   136  000A00                     __pcinit:
   137                           	opt stack 0
   138  000A00                     start_initialization:
   139                           	opt stack 0
   140  000A00                     __initialization:
   141                           	opt stack 0
   142                           
   143                           ; Clear objects allocated to COMRAM (22 bytes)
   144  000A00  EE00  F022         	lfsr	0,__pbssCOMRAM
   145  000A04  0E16               	movlw	22
   146  000A06                     clear_0:
   147  000A06  6AEE               	clrf	postinc0,c
   148  000A08  06E8               	decf	wreg,f,c
   149  000A0A  E1FD               	bnz	clear_0
   150                           
   151                           ; Initialize objects allocated to COMRAM (4 bytes)
   152                           ; load TBLPTR registers with __pidataCOMRAM
   153  000A0C  0E92               	movlw	low __pidataCOMRAM
   154  000A0E  6EF6               	movwf	tblptrl,c
   155  000A10  0E0B               	movlw	high __pidataCOMRAM
   156  000A12  6EF7               	movwf	tblptrh,c
   157  000A14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   158  000A16  6EF8               	movwf	tblptru,c
   159  000A18  EE00  F03C         	lfsr	0,__pdataCOMRAM
   160  000A1C  EE10 F004          	lfsr	1,4
   161  000A20                     copy_data0:
   162  000A20  0009               	tblrd		*+
   163  000A22  CFF5 FFEE          	movff	tablat,postinc0
   164  000A26  50E5               	movf	postdec1,w,c
   165  000A28  50E1               	movf	fsr1l,w,c
   166  000A2A  E1FA               	bnz	copy_data0
   167  000A2C                     end_of_initialization:
   168                           	opt stack 0
   169  000A2C                     __end_of__initialization:
   170                           	opt stack 0
   171  000A2C  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   172  000A2E  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   173  000A30  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  000A32  6EF8               	movwf	tblptru,c
   175  000A34  0100               	movlb	0
   176  000A36  EF55  F000         	goto	_main	;jump to C main() function
   177                           tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           postinc0	equ	0xFEE
   182                           wreg	equ	0xFE8
   183                           postdec1	equ	0xFE5
   184                           fsr1l	equ	0xFE1
   185                           
   186                           	psect	bssCOMRAM
   187  000022                     __pbssCOMRAM:
   188                           	opt stack 0
   189  000022                     _T:
   190                           	opt stack 0
   191  000022                     	ds	2
   192  000024                     _V_batt:
   193                           	opt stack 0
   194  000024                     	ds	2
   195  000026                     _V_frontale:
   196                           	opt stack 0
   197  000026                     	ds	2
   198  000028                     _V_posteriore:
   199                           	opt stack 0
   200  000028                     	ds	2
   201  00002A                     _bluPC:
   202                           	opt stack 0
   203  00002A                     	ds	2
   204  00002C                     _deltaV:
   205                           	opt stack 0
   206  00002C                     	ds	2
   207  00002E                     _i:
   208                           	opt stack 0
   209  00002E                     	ds	2
   210  000030                     _msec_10:
   211                           	opt stack 0
   212  000030                     	ds	2
   213  000032                     _rossoPC:
   214                           	opt stack 0
   215  000032                     	ds	2
   216  000034                     _verdePC:
   217                           	opt stack 0
   218  000034                     	ds	2
   219  000036                     _colore:
   220                           	opt stack 0
   221  000036                     	ds	1
   222  000037                     _goal_color:
   223                           	opt stack 0
   224  000037                     	ds	1
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           postdec1	equ	0xFE5
   232                           fsr1l	equ	0xFE1
   233                           
   234                           	psect	dataCOMRAM
   235  00003C                     __pdataCOMRAM:
   236                           	opt stack 0
   237  00003C                     _vel_DX:
   238                           	opt stack 0
   239  00003C                     	ds	2
   240  00003E                     _vel_SX:
   241                           	opt stack 0
   242  00003E                     	ds	2
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           postdec1	equ	0xFE5
   250                           fsr1l	equ	0xFE1
   251                           
   252                           	psect	cstackBANK0
   253  000060                     __pcstackBANK0:
   254                           	opt stack 0
   255  000060                     ??_EPWM2_LoadDutyValue:
   256  000060                     ??_EPWM1_LoadDutyValue:
   257  000060                     ??_ADC_GetConversion:
   258  000060                     abbassaCarrello@p:
   259                           	opt stack 0
   260  000060                     compara@valore:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  000060                     	ds	1
   265  000061                     abbassaCarrello@p_1005:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x1
   269  000061                     	ds	1
   270  000062                     ??_stopM:
   271  000062                     ADC_GetConversion@channel:
   272                           	opt stack 0
   273  000062                     compara@soglia:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x2
   277  000062                     	ds	1
   278  000063                     ??_seguiLinea:
   279  000063                     ?___lwdiv:
   280                           	opt stack 0
   281  000063                     ___lwdiv@dividend:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x3
   285  000063                     	ds	1
   286  000064                     seguiLinea@T:
   287                           	opt stack 0
   288  000064                     compara@tolleranza:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x4
   292  000064                     	ds	1
   293  000065                     ___lwdiv@divisor:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x5
   297  000065                     	ds	1
   298  000066                     _compara$971:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x6
   302  000066                     	ds	1
   303  000067                     ___lwdiv@counter:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x7
   307  000067                     	ds	1
   308  000068                     ___lwdiv@quotient:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x8
   312  000068                     	ds	2
   313  00006A                     delay_mS@m_sec:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0xA
   317  00006A                     	ds	2
   318  00006C                     ??_delay_mS:
   319                           
   320                           ; 1 bytes @ 0xC
   321  00006C                     	ds	1
   322  00006D                     ??_taratura:
   323  00006D                     ??_controllaColore:
   324                           
   325                           ; 1 bytes @ 0xD
   326  00006D                     	ds	2
   327  00006F                     taratura@v_sensori:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0xF
   331  00006F                     	ds	2
   332  000071                     main@numLinee:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x11
   336  000071                     	ds	1
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	cstackCOMRAM
   347  000001                     __pcstackCOMRAM:
   348                           	opt stack 0
   349  000001                     ??_high_isr:
   350  000001                     
   351                           ; 1 bytes @ 0x0
   352  000001                     	ds	14
   353  00000F                     ??_low_isr:
   354                           
   355                           ; 1 bytes @ 0xE
   356  00000F                     	ds	17
   357  000020                     ??_compara:
   358  000020                     ??_sollevaCarrello:
   359  000020                     ??_abbassaCarrello:
   360  000020                     ?_ADC_GetConversion:
   361                           	opt stack 0
   362  000020                     EPWM2_LoadDutyValue@dutyValue:
   363                           	opt stack 0
   364  000020                     EPWM1_LoadDutyValue@dutyValue:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x1F
   368  000020                     	ds	1
   369  000021                     sollevaCarrello@p:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x20
   373  000021                     	ds	1
   374  000022                     tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383                           ; 1 bytes @ 0x21
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 46 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  numLinee        1   17[BANK0 ] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   403 ;;      Params:         0       0       0       0
   404 ;;      Locals:         0       1       0       0
   405 ;;      Temps:          0       0       0       0
   406 ;;      Totals:         0       1       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels required when called:    5
   409 ;; This function calls:
   410 ;;		_ADC_GetConversion
   411 ;;		_EPWM1_LoadDutyValue
   412 ;;		_EPWM2_LoadDutyValue
   413 ;;		_InitApp
   414 ;;		_SYSTEM_Initialize
   415 ;;		_abbassaCarrello
   416 ;;		_compara
   417 ;;		_controllaColore
   418 ;;		_delay_mS
   419 ;;		_seguiLinea
   420 ;;		_sollevaCarrello
   421 ;;		_stopM
   422 ;;		_taratura
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  0000AA                     __ptext0:
   430                           	opt stack 0
   431  0000AA                     _main:
   432                           	opt stack 26
   433                           
   434                           ;main.c: 48: SYSTEM_Initialize();
   435                           
   436                           ;incstack = 0
   437  0000AA  EC51  F005         	call	_SYSTEM_Initialize	;wreg free
   438                           
   439                           ;main.c: 49: InitApp();
   440  0000AE  EC92  F005         	call	_InitApp	;wreg free
   441                           
   442                           ;main.c: 52: LATC0 = 0;
   443  0000B2  908B               	bcf	3979,0,c	;volatile
   444                           
   445                           ;main.c: 53: LATC7 = 0;
   446  0000B4  9E8B               	bcf	3979,7,c	;volatile
   447                           
   448                           ;main.c: 54: EPWM1_LoadDutyValue(511);
   449  0000B6  0E01               	movlw	1
   450  0000B8  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   451  0000BA  6820               	setf	EPWM1_LoadDutyValue@dutyValue,c
   452  0000BC  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   453                           
   454                           ;main.c: 55: EPWM2_LoadDutyValue(511);
   455  0000C0  0E01               	movlw	1
   456  0000C2  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   457  0000C4  6820               	setf	EPWM2_LoadDutyValue@dutyValue,c
   458  0000C6  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   459                           
   460                           ;main.c: 57: T1CONbits.TMR1ON = 0;
   461  0000CA  90CD               	bcf	4045,0,c	;volatile
   462                           
   463                           ;main.c: 58: LATA4= 1;
   464  0000CC  8889               	bsf	3977,4,c	;volatile
   465                           
   466                           ;main.c: 60: TRISBbits.RB1 = 1;
   467  0000CE  8293               	bsf	3987,1,c	;volatile
   468                           
   469                           ;main.c: 61: INTEDG1 = 0;
   470  0000D0  9AF1               	bcf	intcon2,5,c	;volatile
   471                           
   472                           ;main.c: 62: INT1IP = 1;
   473  0000D2  8CF0               	bsf	intcon3,6,c	;volatile
   474                           
   475                           ;main.c: 63: INT1IE = 1;
   476  0000D4  86F0               	bsf	intcon3,3,c	;volatile
   477                           
   478                           ;main.c: 64: (INTCONbits.GIE = 0);
   479  0000D6  9EF2               	bcf	intcon,7,c	;volatile
   480                           
   481                           ;main.c: 68: LATC4=0;
   482  0000D8  988B               	bcf	3979,4,c	;volatile
   483                           
   484                           ;main.c: 69: LATC5=0;
   485  0000DA  9A8B               	bcf	3979,5,c	;volatile
   486                           
   487                           ;main.c: 70: LATC3=0;
   488  0000DC  968B               	bcf	3979,3,c	;volatile
   489                           
   490                           ;main.c: 71: LATC6=0;
   491  0000DE  9C8B               	bcf	3979,6,c	;volatile
   492                           
   493                           ;main.c: 74: uint8_t numLinee = 0;
   494  0000E0  0E00               	movlw	0
   495  0000E2  0100               	movlb	0	; () banked
   496  0000E4  6F71               	movwf	main@numLinee& (0+255),b
   497  0000E6                     l2251:
   498                           
   499                           ;main.c: 80: V_pulsantiera = ADC_GetConversion(channel_AN9);
   500  0000E6  0E09               	movlw	9
   501  0000E8  ECE2  F004         	call	_ADC_GetConversion
   502  0000EC  C020  F038         	movff	?_ADC_GetConversion,_V_pulsantiera
   503  0000F0  C021  F039         	movff	?_ADC_GetConversion+1,_V_pulsantiera+1
   504                           
   505                           ;main.c: 84: if(PORTBbits.RB1 == 0 && compara(V_pulsantiera,532,40)){
   506  0000F4  B281               	btfsc	3969,1,c	;volatile
   507  0000F6  D016               	goto	l2259
   508  0000F8  C038  F060         	movff	_V_pulsantiera,compara@valore
   509  0000FC  C039  F061         	movff	_V_pulsantiera+1,compara@valore+1
   510  000100  0E02               	movlw	2
   511  000102  0100               	movlb	0	; () banked
   512  000104  6F63               	movwf	(compara@soglia+1)& (0+255),b
   513  000106  0E14               	movlw	20
   514  000108  6F62               	movwf	compara@soglia& (0+255),b
   515  00010A  0E00               	movlw	0
   516  00010C  0100               	movlb	0	; () banked
   517  00010E  6F65               	movwf	(compara@tolleranza+1)& (0+255),b
   518  000110  0E28               	movlw	40
   519  000112  6F64               	movwf	compara@tolleranza& (0+255),b
   520  000114  EC4E  F004         	call	_compara	;wreg free
   521  000118  0900               	iorlw	0
   522  00011A  B4D8               	btfsc	status,2,c
   523  00011C  D003               	goto	l2259
   524                           
   525                           ;main.c: 85: taratura();
   526  00011E  ECCE  F002         	call	_taratura	;wreg free
   527                           
   528                           ;main.c: 86: }else if(V_pulsantiera <1000){
   529  000122  D7E1               	goto	l2251
   530  000124                     l2259:
   531  000124  0EE8               	movlw	232
   532  000126  5C38               	subwf	_V_pulsantiera,w,c
   533  000128  0E03               	movlw	3
   534  00012A  5839               	subwfb	_V_pulsantiera+1,w,c
   535  00012C  B0D8               	btfsc	status,0,c
   536  00012E  D7DB               	goto	l2251
   537                           
   538                           ;main.c: 87: if(compara(V_pulsantiera,921,40)){
   539  000130  C038  F060         	movff	_V_pulsantiera,compara@valore
   540  000134  C039  F061         	movff	_V_pulsantiera+1,compara@valore+1
   541  000138  0E03               	movlw	3
   542  00013A  0100               	movlb	0	; () banked
   543  00013C  6F63               	movwf	(compara@soglia+1)& (0+255),b
   544  00013E  0E99               	movlw	153
   545  000140  6F62               	movwf	compara@soglia& (0+255),b
   546  000142  0E00               	movlw	0
   547  000144  0100               	movlb	0	; () banked
   548  000146  6F65               	movwf	(compara@tolleranza+1)& (0+255),b
   549  000148  0E28               	movlw	40
   550  00014A  6F64               	movwf	compara@tolleranza& (0+255),b
   551  00014C  EC4E  F004         	call	_compara	;wreg free
   552  000150  0900               	iorlw	0
   553  000152  B4D8               	btfsc	status,2,c
   554  000154  D002               	goto	l2265
   555                           
   556                           ;main.c: 88: goal_color = ROSSO;
   557  000156  0E00               	movlw	0
   558  000158  D029               	goto	L2
   559  00015A                     l2265:
   560  00015A  C038  F060         	movff	_V_pulsantiera,compara@valore
   561  00015E  C039  F061         	movff	_V_pulsantiera+1,compara@valore+1
   562  000162  0E02               	movlw	2
   563  000164  0100               	movlb	0	; () banked
   564  000166  6F63               	movwf	(compara@soglia+1)& (0+255),b
   565  000168  0ED4               	movlw	212
   566  00016A  6F62               	movwf	compara@soglia& (0+255),b
   567  00016C  0E00               	movlw	0
   568  00016E  0100               	movlb	0	; () banked
   569  000170  6F65               	movwf	(compara@tolleranza+1)& (0+255),b
   570  000172  0E28               	movlw	40
   571  000174  6F64               	movwf	compara@tolleranza& (0+255),b
   572  000176  EC4E  F004         	call	_compara	;wreg free
   573  00017A  0900               	iorlw	0
   574  00017C  B4D8               	btfsc	status,2,c
   575  00017E  D002               	goto	l2269
   576                           
   577                           ;main.c: 90: goal_color = VERDE;
   578  000180  0E02               	movlw	2
   579  000182  D014               	goto	L2
   580  000184                     l2269:
   581  000184  C038  F060         	movff	_V_pulsantiera,compara@valore
   582  000188  C039  F061         	movff	_V_pulsantiera+1,compara@valore+1
   583  00018C  0E02               	movlw	2
   584  00018E  0100               	movlb	0	; () banked
   585  000190  6F63               	movwf	(compara@soglia+1)& (0+255),b
   586  000192  0E14               	movlw	20
   587  000194  6F62               	movwf	compara@soglia& (0+255),b
   588  000196  0E00               	movlw	0
   589  000198  0100               	movlb	0	; () banked
   590  00019A  6F65               	movwf	(compara@tolleranza+1)& (0+255),b
   591  00019C  0E28               	movlw	40
   592  00019E  6F64               	movwf	compara@tolleranza& (0+255),b
   593  0001A0  EC4E  F004         	call	_compara	;wreg free
   594  0001A4  0900               	iorlw	0
   595  0001A6  B4D8               	btfsc	status,2,c
   596  0001A8  D002               	goto	l2273
   597                           
   598                           ;main.c: 92: goal_color = BLU;
   599  0001AA  0E01               	movlw	1
   600  0001AC                     L2:
   601  0001AC  6E37               	movwf	_goal_color,c
   602  0001AE                     l2273:
   603                           
   604                           ;main.c: 93: }
   605                           ;main.c: 97: delay_mS(500);
   606  0001AE  0E01               	movlw	1
   607  0001B0  0100               	movlb	0	; () banked
   608  0001B2  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   609  0001B4  0EF4               	movlw	244
   610  0001B6  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   611  0001B8  EC7F  F004         	call	_delay_mS	;wreg free
   612                           
   613                           ;main.c: 99: EPWM1_LoadDutyValue(514);
   614  0001BC  0E02               	movlw	2
   615  0001BE  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   616  0001C0  0E02               	movlw	2
   617  0001C2  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   618  0001C4  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   619                           
   620                           ;main.c: 100: EPWM2_LoadDutyValue(514);
   621  0001C8  0E02               	movlw	2
   622  0001CA  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   623  0001CC  0E02               	movlw	2
   624  0001CE  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   625  0001D0  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   626                           
   627                           ;main.c: 101: LATC0 = 1;
   628  0001D4  808B               	bsf	3979,0,c	;volatile
   629                           
   630                           ;main.c: 102: EPWM1_LoadDutyValue(700);
   631  0001D6  0E02               	movlw	2
   632  0001D8  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   633  0001DA  0EBC               	movlw	188
   634  0001DC  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   635  0001DE  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   636                           
   637                           ;main.c: 103: EPWM2_LoadDutyValue(712);
   638  0001E2  0E02               	movlw	2
   639  0001E4  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   640  0001E6  0EC8               	movlw	200
   641  0001E8  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   642  0001EA  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   643                           
   644                           ;main.c: 104: seguiLinea();
   645  0001EE  ECF1  F001         	call	_seguiLinea	;wreg free
   646                           
   647                           ;main.c: 108: stopM();
   648  0001F2  EC1D  F005         	call	_stopM	;wreg free
   649                           
   650                           ;main.c: 110: controllaColore();
   651  0001F6  EC6A  F002         	call	_controllaColore	;wreg free
   652                           
   653                           ;main.c: 112: if(colore != goal_color){
   654  0001FA  5037               	movf	_goal_color,w,c
   655  0001FC  1836               	xorwf	_colore,w,c
   656  0001FE  B4D8               	btfsc	status,2,c
   657  000200  D03A               	goto	l2307
   658                           
   659                           ;main.c: 114: LATC0 = 1;
   660  000202  808B               	bsf	3979,0,c	;volatile
   661                           
   662                           ;main.c: 115: EPWM1_LoadDutyValue(700);
   663  000204  0E02               	movlw	2
   664  000206  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   665  000208  0EBC               	movlw	188
   666  00020A  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   667  00020C  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   668                           
   669                           ;main.c: 116: EPWM2_LoadDutyValue(712);
   670  000210  0E02               	movlw	2
   671  000212  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   672  000214  0EC8               	movlw	200
   673  000216  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   674  000218  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   675                           
   676                           ;main.c: 120: delay_mS(500);
   677  00021C  0E01               	movlw	1
   678  00021E  0100               	movlb	0	; () banked
   679  000220  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   680  000222  0EF4               	movlw	244
   681  000224  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   682  000226  EC7F  F004         	call	_delay_mS	;wreg free
   683                           
   684                           ;main.c: 121: seguiLinea();
   685  00022A  ECF1  F001         	call	_seguiLinea	;wreg free
   686                           
   687                           ;main.c: 122: stopM();
   688  00022E  EC1D  F005         	call	_stopM	;wreg free
   689                           
   690                           ;main.c: 124: controllaColore();
   691  000232  EC6A  F002         	call	_controllaColore	;wreg free
   692                           
   693                           ;main.c: 128: numLinee++;
   694  000236  0100               	movlb	0	; () banked
   695  000238  2B71               	incf	main@numLinee& (0+255),f,b
   696                           
   697                           ; BSR set to: 0
   698                           ;main.c: 129: if(colore != goal_color){
   699  00023A  5037               	movf	_goal_color,w,c
   700  00023C  1836               	xorwf	_colore,w,c
   701  00023E  B4D8               	btfsc	status,2,c
   702  000240  D01A               	goto	l2307
   703                           
   704                           ; BSR set to: 0
   705                           ;main.c: 133: LATC0 = 1;
   706  000242  808B               	bsf	3979,0,c	;volatile
   707                           
   708                           ; BSR set to: 0
   709                           ;main.c: 134: EPWM1_LoadDutyValue(700);
   710  000244  0E02               	movlw	2
   711  000246  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   712  000248  0EBC               	movlw	188
   713  00024A  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   714  00024C  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   715                           
   716                           ;main.c: 135: EPWM2_LoadDutyValue(712);
   717  000250  0E02               	movlw	2
   718  000252  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   719  000254  0EC8               	movlw	200
   720  000256  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   721  000258  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   722                           
   723                           ;main.c: 137: delay_mS(1000);
   724  00025C  0E03               	movlw	3
   725  00025E  0100               	movlb	0	; () banked
   726  000260  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   727  000262  0EE8               	movlw	232
   728  000264  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   729  000266  EC7F  F004         	call	_delay_mS	;wreg free
   730                           
   731                           ;main.c: 138: seguiLinea();
   732  00026A  ECF1  F001         	call	_seguiLinea	;wreg free
   733                           
   734                           ;main.c: 139: stopM();
   735  00026E  EC1D  F005         	call	_stopM	;wreg free
   736                           
   737                           ;main.c: 140: numLinee++;
   738  000272  0100               	movlb	0	; () banked
   739  000274  2B71               	incf	main@numLinee& (0+255),f,b
   740  000276                     l2307:
   741                           
   742                           ;main.c: 141: }
   743                           ;main.c: 142: }
   744                           ;main.c: 150: EPWM1_LoadDutyValue(700);
   745  000276  0E02               	movlw	2
   746  000278  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   747  00027A  0EBC               	movlw	188
   748  00027C  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   749  00027E  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   750                           
   751                           ;main.c: 151: EPWM2_LoadDutyValue(300);
   752  000282  0E01               	movlw	1
   753  000284  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   754  000286  0E2C               	movlw	44
   755  000288  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   756  00028A  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   757                           
   758                           ;main.c: 152: LATC0 = 1;
   759  00028E  808B               	bsf	3979,0,c	;volatile
   760                           
   761                           ;main.c: 153: delay_mS(1900);
   762  000290  0E07               	movlw	7
   763  000292  0100               	movlb	0	; () banked
   764  000294  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   765  000296  0E6C               	movlw	108
   766  000298  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   767  00029A  EC7F  F004         	call	_delay_mS	;wreg free
   768                           
   769                           ;main.c: 156: EPWM1_LoadDutyValue(661);
   770  00029E  0E02               	movlw	2
   771  0002A0  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   772  0002A2  0E95               	movlw	149
   773  0002A4  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   774  0002A6  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   775                           
   776                           ;main.c: 157: EPWM2_LoadDutyValue(670);
   777  0002AA  0E02               	movlw	2
   778  0002AC  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   779  0002AE  0E9E               	movlw	158
   780  0002B0  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   781  0002B2  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   782                           
   783                           ;main.c: 158: LATC0 = 1;
   784  0002B6  808B               	bsf	3979,0,c	;volatile
   785                           
   786                           ;main.c: 159: delay_mS(2000);
   787  0002B8  0E07               	movlw	7
   788  0002BA  0100               	movlb	0	; () banked
   789  0002BC  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   790  0002BE  0ED0               	movlw	208
   791  0002C0  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   792  0002C2  EC7F  F004         	call	_delay_mS	;wreg free
   793                           
   794                           ;main.c: 161: stopM();
   795  0002C6  EC1D  F005         	call	_stopM	;wreg free
   796                           
   797                           ;main.c: 162: sollevaCarrello();
   798  0002CA  EC87  F003         	call	_sollevaCarrello	;wreg free
   799                           
   800                           ;main.c: 164: EPWM1_LoadDutyValue(361);
   801  0002CE  0E01               	movlw	1
   802  0002D0  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   803  0002D2  0E69               	movlw	105
   804  0002D4  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   805  0002D6  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   806                           
   807                           ;main.c: 165: EPWM2_LoadDutyValue(372);
   808  0002DA  0E01               	movlw	1
   809  0002DC  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   810  0002DE  0E74               	movlw	116
   811  0002E0  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   812  0002E2  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   813                           
   814                           ;main.c: 166: LATC0 = 1;
   815  0002E6  808B               	bsf	3979,0,c	;volatile
   816                           
   817                           ;main.c: 167: delay_mS(1500);
   818  0002E8  0E05               	movlw	5
   819  0002EA  0100               	movlb	0	; () banked
   820  0002EC  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   821  0002EE  0EDC               	movlw	220
   822  0002F0  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   823  0002F2  EC7F  F004         	call	_delay_mS	;wreg free
   824                           
   825                           ;main.c: 168: stopM();
   826  0002F6  EC1D  F005         	call	_stopM	;wreg free
   827                           
   828                           ;main.c: 174: EPWM1_LoadDutyValue(700);
   829  0002FA  0E02               	movlw	2
   830  0002FC  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   831  0002FE  0EBC               	movlw	188
   832  000300  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   833  000302  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   834                           
   835                           ;main.c: 175: EPWM2_LoadDutyValue(300);
   836  000306  0E01               	movlw	1
   837  000308  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   838  00030A  0E2C               	movlw	44
   839  00030C  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   840  00030E  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   841                           
   842                           ;main.c: 176: LATC0 = 1;
   843  000312  808B               	bsf	3979,0,c	;volatile
   844  000314                     l2343:
   845  000314  0E0D               	movlw	13
   846  000316  ECE2  F004         	call	_ADC_GetConversion
   847  00031A  0E2D               	movlw	45
   848  00031C  5C20               	subwf	?_ADC_GetConversion,w,c
   849  00031E  0E01               	movlw	1
   850  000320  5821               	subwfb	?_ADC_GetConversion+1,w,c
   851  000322  A0D8               	btfss	status,0,c
   852  000324  D7F7               	goto	l2343
   853                           
   854                           ;main.c: 179: EPWM1_LoadDutyValue(700);
   855  000326  0E02               	movlw	2
   856  000328  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   857  00032A  0EBC               	movlw	188
   858  00032C  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   859  00032E  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   860                           
   861                           ;main.c: 180: EPWM2_LoadDutyValue(712);
   862  000332  0E02               	movlw	2
   863  000334  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   864  000336  0EC8               	movlw	200
   865  000338  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   866  00033A  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   867                           
   868                           ;main.c: 181: LATC0 = 1;
   869  00033E  808B               	bsf	3979,0,c	;volatile
   870                           
   871                           ;main.c: 182: seguiLinea();
   872  000340  ECF1  F001         	call	_seguiLinea	;wreg free
   873                           
   874                           ;main.c: 185: while (numLinee>0){
   875  000344  D018               	goto	l2355
   876  000346                     l2349:
   877                           
   878                           ;main.c: 186: EPWM1_LoadDutyValue(700);
   879  000346  0E02               	movlw	2
   880  000348  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   881  00034A  0EBC               	movlw	188
   882  00034C  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   883  00034E  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   884                           
   885                           ;main.c: 187: EPWM2_LoadDutyValue(712);
   886  000352  0E02               	movlw	2
   887  000354  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   888  000356  0EC8               	movlw	200
   889  000358  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   890  00035A  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   891                           
   892                           ;main.c: 188: LATC0 = 1;
   893  00035E  808B               	bsf	3979,0,c	;volatile
   894                           
   895                           ;main.c: 189: delay_mS(350);
   896  000360  0E01               	movlw	1
   897  000362  0100               	movlb	0	; () banked
   898  000364  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   899  000366  0E5E               	movlw	94
   900  000368  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   901  00036A  EC7F  F004         	call	_delay_mS	;wreg free
   902                           
   903                           ;main.c: 190: seguiLinea();
   904  00036E  ECF1  F001         	call	_seguiLinea	;wreg free
   905                           
   906                           ;main.c: 191: numLinee--;
   907  000372  0100               	movlb	0	; () banked
   908  000374  0771               	decf	main@numLinee& (0+255),f,b
   909  000376                     l2355:
   910  000376  0100               	movlb	0	; () banked
   911  000378  5171               	movf	main@numLinee& (0+255),w,b
   912  00037A  0100               	movlb	0	; () banked
   913  00037C  A4D8               	btfss	status,2,c
   914  00037E  D7E3               	goto	l2349
   915                           
   916                           ; BSR set to: 0
   917                           ;main.c: 192: }
   918                           ;main.c: 197: stopM();
   919                           
   920                           ; BSR set to: 0
   921  000380  EC1D  F005         	call	_stopM	;wreg free
   922                           
   923                           ;main.c: 198: abbassaCarrello();
   924  000384  EC2E  F003         	call	_abbassaCarrello	;wreg free
   925                           
   926                           ;main.c: 200: EPWM1_LoadDutyValue(300);
   927  000388  0E01               	movlw	1
   928  00038A  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   929  00038C  0E2C               	movlw	44
   930  00038E  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   931  000390  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   932                           
   933                           ;main.c: 201: EPWM2_LoadDutyValue(300);
   934  000394  0E01               	movlw	1
   935  000396  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   936  000398  0E2C               	movlw	44
   937  00039A  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   938  00039C  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   939                           
   940                           ;main.c: 202: LATC0 = 1;
   941  0003A0  808B               	bsf	3979,0,c	;volatile
   942                           
   943                           ;main.c: 203: delay_mS(2000);
   944  0003A2  0E07               	movlw	7
   945  0003A4  0100               	movlb	0	; () banked
   946  0003A6  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   947  0003A8  0ED0               	movlw	208
   948  0003AA  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   949  0003AC  EC7F  F004         	call	_delay_mS	;wreg free
   950                           
   951                           ;main.c: 204: stopM();
   952  0003B0  EC1D  F005         	call	_stopM	;wreg free
   953                           
   954                           ;main.c: 207: EPWM1_LoadDutyValue(700);
   955  0003B4  0E02               	movlw	2
   956  0003B6  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   957  0003B8  0EBC               	movlw	188
   958  0003BA  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   959  0003BC  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
   960                           
   961                           ;main.c: 208: EPWM2_LoadDutyValue(300);
   962  0003C0  0E01               	movlw	1
   963  0003C2  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   964  0003C4  0E2C               	movlw	44
   965  0003C6  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   966  0003C8  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
   967                           
   968                           ;main.c: 209: LATC0 = 1;
   969  0003CC  808B               	bsf	3979,0,c	;volatile
   970                           
   971                           ;main.c: 210: delay_mS(4000);
   972  0003CE  0E0F               	movlw	15
   973  0003D0  0100               	movlb	0	; () banked
   974  0003D2  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
   975  0003D4  0EA0               	movlw	160
   976  0003D6  6F6A               	movwf	delay_mS@m_sec& (0+255),b
   977  0003D8  EC7F  F004         	call	_delay_mS	;wreg free
   978                           
   979                           ;main.c: 211: stopM();
   980  0003DC  EC1D  F005         	call	_stopM	;wreg free
   981  0003E0  D682               	goto	l2251
   982  0003E2                     __end_of_main:
   983                           	opt stack 0
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           intcon	equ	0xFF2
   989                           intcon2	equ	0xFF1
   990                           intcon3	equ	0xFF0
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _taratura *****************
   998 ;; Defined at:
   999 ;;		line 141 in file "user.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  v_sensori       2   15[BANK0 ] unsigned int 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1013 ;;      Params:         0       0       0       0
  1014 ;;      Locals:         0       2       0       0
  1015 ;;      Temps:          0       2       0       0
  1016 ;;      Totals:         0       4       0       0
  1017 ;;Total ram usage:        4 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    4
  1020 ;; This function calls:
  1021 ;;		_ADC_GetConversion
  1022 ;;		___lwdiv
  1023 ;;		_delay_mS
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text1
  1030  00059C                     __ptext1:
  1031                           	opt stack 0
  1032  00059C                     _taratura:
  1033                           	opt stack 26
  1034                           
  1035                           ;user.c: 142: LATA0 = 0;
  1036                           
  1037                           ;incstack = 0
  1038  00059C  9089               	bcf	3977,0,c	;volatile
  1039                           
  1040                           ;user.c: 143: LATA1 = 0;
  1041  00059E  9289               	bcf	3977,1,c	;volatile
  1042                           
  1043                           ;user.c: 144: LATA2 = 0;
  1044  0005A0  9489               	bcf	3977,2,c	;volatile
  1045                           
  1046                           ;user.c: 147: delay_mS(1000);
  1047  0005A2  0E03               	movlw	3
  1048  0005A4  0100               	movlb	0	; () banked
  1049  0005A6  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1050  0005A8  0EE8               	movlw	232
  1051  0005AA  6F6A               	movwf	delay_mS@m_sec& (0+255),b
  1052  0005AC  EC7F  F004         	call	_delay_mS	;wreg free
  1053                           
  1054                           ;user.c: 148: while(PORTBbits.RB1){
  1055  0005B0  D04E               	goto	l327
  1056  0005B2                     l2095:
  1057                           
  1058                           ;user.c: 149: uint16_t v_sensori = ADC_GetConversion(channel_AN13)/10;
  1059  0005B2  0E0D               	movlw	13
  1060  0005B4  ECE2  F004         	call	_ADC_GetConversion
  1061  0005B8  C020  F063         	movff	?_ADC_GetConversion,___lwdiv@dividend
  1062  0005BC  C021  F064         	movff	?_ADC_GetConversion+1,___lwdiv@dividend+1
  1063  0005C0  0E00               	movlw	0
  1064  0005C2  0100               	movlb	0	; () banked
  1065  0005C4  6F66               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1066  0005C6  0E0A               	movlw	10
  1067  0005C8  6F65               	movwf	___lwdiv@divisor& (0+255),b
  1068  0005CA  ECDC  F003         	call	___lwdiv	;wreg free
  1069  0005CE  C063  F06F         	movff	?___lwdiv,taratura@v_sensori
  1070  0005D2  C064  F070         	movff	?___lwdiv+1,taratura@v_sensori+1
  1071                           
  1072                           ;user.c: 150: switch (v_sensori){
  1073  0005D6  D016               	goto	l2099
  1074  0005D8                     l330:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;user.c: 152: LATA0 = 1;
  1078  0005D8  8089               	bsf	3977,0,c	;volatile
  1079  0005DA  D012               	goto	L7
  1080  0005DC                     l332:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;user.c: 157: LATA0 = 0;
  1084  0005DC  9089               	bcf	3977,0,c	;volatile
  1085  0005DE  D006               	goto	L4
  1086  0005E0                     L3:
  1087                           
  1088                           ;user.c: 159: LATA2 = 0;
  1089  0005E0  9489               	bcf	3977,2,c	;volatile
  1090                           
  1091                           ;user.c: 160: break;
  1092  0005E2  D035               	goto	l327
  1093  0005E4                     l333:
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;user.c: 162: LATA0 = 0;
  1097  0005E4  9089               	bcf	3977,0,c	;volatile
  1098                           
  1099                           ;user.c: 163: LATA1 = 0;
  1100  0005E6  9289               	bcf	3977,1,c	;volatile
  1101  0005E8  D005               	goto	L5
  1102  0005EA                     l334:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;user.c: 167: LATA0 = 1;
  1106  0005EA  8089               	bsf	3977,0,c	;volatile
  1107  0005EC                     L4:
  1108                           
  1109                           ;user.c: 168: LATA1 = 1;
  1110  0005EC  8289               	bsf	3977,1,c	;volatile
  1111  0005EE  D7F8               	goto	L3
  1112  0005F0                     l335:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;user.c: 172: LATA0 = 0;
  1116  0005F0  9089               	bcf	3977,0,c	;volatile
  1117  0005F2  D003               	goto	L6
  1118  0005F4                     L5:
  1119                           
  1120                           ;user.c: 174: LATA2 = 1;
  1121  0005F4  8489               	bsf	3977,2,c	;volatile
  1122                           
  1123                           ;user.c: 175: break;
  1124  0005F6  D02B               	goto	l327
  1125  0005F8                     l336:
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;user.c: 177: LATA0 = 1;
  1129  0005F8  8089               	bsf	3977,0,c	;volatile
  1130  0005FA                     L6:
  1131                           
  1132                           ;user.c: 178: LATA1 = 1;
  1133  0005FA  8289               	bsf	3977,1,c	;volatile
  1134  0005FC  D7FB               	goto	L5
  1135  0005FE                     l337:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;user.c: 182: LATA0 = 0;
  1139  0005FE  9089               	bcf	3977,0,c	;volatile
  1140  000600                     L7:
  1141                           
  1142                           ;user.c: 183: LATA1 = 0;
  1143  000600  9289               	bcf	3977,1,c	;volatile
  1144  000602  D7EE               	goto	L3
  1145  000604                     l2099:
  1146  000604  C06F  F06D         	movff	taratura@v_sensori,??_taratura
  1147  000608  C070  F06E         	movff	taratura@v_sensori+1,??_taratura+1
  1148                           
  1149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1150                           ; Switch size 1, requested type "space"
  1151                           ; Number of cases is 2, Range of values is 0 to 2
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            7     4 (average)
  1155                           ;	Chosen strategy is simple_byte
  1156  00060C  0100               	movlb	0	; () banked
  1157  00060E  516E               	movf	(??_taratura+1)& (0+255),w,b
  1158  000610  0A00               	xorlw	0	; case 0
  1159  000612  B4D8               	btfsc	status,2,c
  1160  000614  D004               	goto	l2423
  1161  000616  0A02               	xorlw	2	; case 2
  1162  000618  B4D8               	btfsc	status,2,c
  1163  00061A  D013               	goto	l2425
  1164  00061C  D7F0               	goto	l337
  1165  00061E                     l2423:
  1166                           
  1167                           ; BSR set to: 0
  1168                           ; Switch size 1, requested type "space"
  1169                           ; Number of cases is 5, Range of values is 16 to 68
  1170                           ; switch strategies available:
  1171                           ; Name         Instructions Cycles
  1172                           ; simple_byte           16     9 (average)
  1173                           ;	Chosen strategy is simple_byte
  1174  00061E  0100               	movlb	0	; () banked
  1175  000620  516D               	movf	??_taratura& (0+255),w,b
  1176  000622  0A10               	xorlw	16	; case 16
  1177  000624  B4D8               	btfsc	status,2,c
  1178  000626  D7D8               	goto	l330
  1179  000628  0A0C               	xorlw	12	; case 28
  1180  00062A  B4D8               	btfsc	status,2,c
  1181  00062C  D7D7               	goto	l332
  1182  00062E  0A34               	xorlw	52	; case 40
  1183  000630  B4D8               	btfsc	status,2,c
  1184  000632  D7DB               	goto	l334
  1185  000634  0A1B               	xorlw	27	; case 51
  1186  000636  B4D8               	btfsc	status,2,c
  1187  000638  D7D5               	goto	l333
  1188  00063A  0A77               	xorlw	119	; case 68
  1189  00063C  B4D8               	btfsc	status,2,c
  1190  00063E  D7D8               	goto	l335
  1191  000640  D7DE               	goto	l337
  1192  000642                     l2425:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ; Switch size 1, requested type "space"
  1196                           ; Number of cases is 1, Range of values is 238 to 238
  1197                           ; switch strategies available:
  1198                           ; Name         Instructions Cycles
  1199                           ; simple_byte            4     3 (average)
  1200                           ;	Chosen strategy is simple_byte
  1201  000642  0100               	movlb	0	; () banked
  1202  000644  516D               	movf	??_taratura& (0+255),w,b
  1203  000646  0AEE               	xorlw	238	; case 238
  1204  000648  B4D8               	btfsc	status,2,c
  1205  00064A  D7D6               	goto	l336
  1206  00064C  D7D8               	goto	l337
  1207  00064E                     l327:
  1208  00064E  B281               	btfsc	3969,1,c	;volatile
  1209  000650  D7B0               	goto	l2095
  1210                           
  1211                           ;user.c: 187: }
  1212                           ;user.c: 189: LATA0 = 0;
  1213  000652  9089               	bcf	3977,0,c	;volatile
  1214                           
  1215                           ;user.c: 190: LATA1 = 0;
  1216  000654  9289               	bcf	3977,1,c	;volatile
  1217                           
  1218                           ;user.c: 191: LATA2 = 0;
  1219  000656  9489               	bcf	3977,2,c	;volatile
  1220                           
  1221                           ;user.c: 192: (INTCONbits.GIE = 1);
  1222  000658  8EF2               	bsf	intcon,7,c	;volatile
  1223  00065A  0012               	return		;funcret
  1224  00065C                     __end_of_taratura:
  1225                           	opt stack 0
  1226                           tblptru	equ	0xFF8
  1227                           tblptrh	equ	0xFF7
  1228                           tblptrl	equ	0xFF6
  1229                           tablat	equ	0xFF5
  1230                           intcon	equ	0xFF2
  1231                           intcon2	equ	0xFF1
  1232                           intcon3	equ	0xFF0
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           postdec1	equ	0xFE5
  1236                           fsr1l	equ	0xFE1
  1237                           status	equ	0xFD8
  1238                           
  1239 ;; *************** function _stopM *****************
  1240 ;; Defined at:
  1241 ;;		line 235 in file "user.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1255 ;;      Params:         0       0       0       0
  1256 ;;      Locals:         0       0       0       0
  1257 ;;      Temps:          0       1       0       0
  1258 ;;      Totals:         0       1       0       0
  1259 ;;Total ram usage:        1 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    3
  1262 ;; This function calls:
  1263 ;;		_EPWM1_LoadDutyValue
  1264 ;;		_EPWM2_LoadDutyValue
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text2
  1271  000A3A                     __ptext2:
  1272                           	opt stack 0
  1273  000A3A                     _stopM:
  1274                           	opt stack 27
  1275                           
  1276                           ;user.c: 236: EPWM1_LoadDutyValue(511);
  1277                           
  1278                           ;incstack = 0
  1279  000A3A  0E01               	movlw	1
  1280  000A3C  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
  1281  000A3E  6820               	setf	EPWM1_LoadDutyValue@dutyValue,c
  1282  000A40  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  1283                           
  1284                           ;user.c: 237: EPWM2_LoadDutyValue(511);
  1285  000A44  0E01               	movlw	1
  1286  000A46  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
  1287  000A48  6820               	setf	EPWM2_LoadDutyValue@dutyValue,c
  1288  000A4A  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  1289                           
  1290                           ;user.c: 238: _delay((unsigned long)((10)*(64000000/4000.0)));
  1291  000A4E  0ED0               	movlw	208
  1292  000A50  0100               	movlb	0	; () banked
  1293  000A52  6F62               	movwf	??_stopM& (0+255),b
  1294  000A54  0ECA               	movlw	202
  1295  000A56                     u1007:
  1296  000A56  2EE8               	decfsz	wreg,f,c
  1297  000A58  D7FE               	goto	u1007
  1298  000A5A  2F62               	decfsz	??_stopM& (0+255),f,b
  1299  000A5C  D7FC               	goto	u1007
  1300                           
  1301                           ;user.c: 239: _delay((unsigned long)((10)*(64000000/4000.0)));
  1302  000A5E  0ED0               	movlw	208
  1303  000A60  0100               	movlb	0	; () banked
  1304  000A62  6F62               	movwf	??_stopM& (0+255),b
  1305  000A64  0ECA               	movlw	202
  1306  000A66                     u1017:
  1307  000A66  2EE8               	decfsz	wreg,f,c
  1308  000A68  D7FE               	goto	u1017
  1309  000A6A  2F62               	decfsz	??_stopM& (0+255),f,b
  1310  000A6C  D7FC               	goto	u1017
  1311                           
  1312                           ;user.c: 240: LATC0 = 0;
  1313  000A6E  908B               	bcf	3979,0,c	;volatile
  1314  000A70  0012               	return		;funcret
  1315  000A72                     __end_of_stopM:
  1316                           	opt stack 0
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           intcon	equ	0xFF2
  1322                           intcon2	equ	0xFF1
  1323                           intcon3	equ	0xFF0
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _sollevaCarrello *****************
  1331 ;; Defined at:
  1332 ;;		line 265 in file "user.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  p               1   32[COMRAM] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1346 ;;      Params:         0       0       0       0
  1347 ;;      Locals:         1       0       0       0
  1348 ;;      Temps:          1       0       0       0
  1349 ;;      Totals:         2       0       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    2
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text3
  1361  00070E                     __ptext3:
  1362                           	opt stack 0
  1363  00070E                     _sollevaCarrello:
  1364                           	opt stack 28
  1365                           
  1366                           ;user.c: 266: uint8_t p = 0;
  1367                           
  1368                           ;incstack = 0
  1369  00070E  0E00               	movlw	0
  1370  000710  6E21               	movwf	sollevaCarrello@p,c
  1371                           
  1372                           ;user.c: 267: for(p=0; p<43;p++)
  1373  000712  0E00               	movlw	0
  1374  000714  6E21               	movwf	sollevaCarrello@p,c
  1375  000716                     l2151:
  1376  000716  0E2A               	movlw	42
  1377  000718  6421               	cpfsgt	sollevaCarrello@p,c
  1378  00071A  D001               	goto	l362
  1379  00071C  D04B               	goto	l363
  1380  00071E                     l362:
  1381                           
  1382                           ;user.c: 268: {
  1383                           ;user.c: 269: LATC7 = 1;
  1384  00071E  8E8B               	bsf	3979,7,c	;volatile
  1385                           
  1386                           ;user.c: 270: LATC4=0;
  1387  000720  988B               	bcf	3979,4,c	;volatile
  1388                           
  1389                           ;user.c: 271: LATC5=1;
  1390  000722  8A8B               	bsf	3979,5,c	;volatile
  1391                           
  1392                           ;user.c: 272: LATC3=1;
  1393  000724  868B               	bsf	3979,3,c	;volatile
  1394                           
  1395                           ;user.c: 273: LATC6=0;
  1396  000726  9C8B               	bcf	3979,6,c	;volatile
  1397                           
  1398                           ;user.c: 274: _delay((unsigned long)((10)*(64000000/4000.0)));
  1399  000728  0ED0               	movlw	208
  1400  00072A  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1401  00072C  0ECA               	movlw	202
  1402  00072E                     u1027:
  1403  00072E  2EE8               	decfsz	wreg,f,c
  1404  000730  D7FE               	goto	u1027
  1405  000732  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1406  000734  D7FC               	goto	u1027
  1407                           
  1408                           ;user.c: 275: _delay((unsigned long)((2)*(64000000/4000.0)));
  1409  000736  0E2A               	movlw	42
  1410  000738  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1411  00073A  0E8E               	movlw	142
  1412  00073C                     u1037:
  1413  00073C  2EE8               	decfsz	wreg,f,c
  1414  00073E  D7FE               	goto	u1037
  1415  000740  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1416  000742  D7FC               	goto	u1037
  1417                           
  1418                           ;user.c: 276: LATC4=0;
  1419  000744  988B               	bcf	3979,4,c	;volatile
  1420                           
  1421                           ;user.c: 277: LATC5=0;
  1422  000746  9A8B               	bcf	3979,5,c	;volatile
  1423                           
  1424                           ;user.c: 278: LATC3=1;
  1425  000748  868B               	bsf	3979,3,c	;volatile
  1426                           
  1427                           ;user.c: 279: LATC6=1;
  1428  00074A  8C8B               	bsf	3979,6,c	;volatile
  1429                           
  1430                           ;user.c: 280: _delay((unsigned long)((10)*(64000000/4000.0)));
  1431  00074C  0ED0               	movlw	208
  1432  00074E  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1433  000750  0ECA               	movlw	202
  1434  000752                     u1047:
  1435  000752  2EE8               	decfsz	wreg,f,c
  1436  000754  D7FE               	goto	u1047
  1437  000756  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1438  000758  D7FC               	goto	u1047
  1439                           
  1440                           ;user.c: 281: _delay((unsigned long)((2)*(64000000/4000.0)));
  1441  00075A  0E2A               	movlw	42
  1442  00075C  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1443  00075E  0E8E               	movlw	142
  1444  000760                     u1057:
  1445  000760  2EE8               	decfsz	wreg,f,c
  1446  000762  D7FE               	goto	u1057
  1447  000764  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1448  000766  D7FC               	goto	u1057
  1449                           
  1450                           ;user.c: 282: LATC4=1;
  1451  000768  888B               	bsf	3979,4,c	;volatile
  1452                           
  1453                           ;user.c: 283: LATC5=0;
  1454  00076A  9A8B               	bcf	3979,5,c	;volatile
  1455                           
  1456                           ;user.c: 284: LATC3=0;
  1457  00076C  968B               	bcf	3979,3,c	;volatile
  1458                           
  1459                           ;user.c: 285: LATC6=1;
  1460  00076E  8C8B               	bsf	3979,6,c	;volatile
  1461                           
  1462                           ;user.c: 286: _delay((unsigned long)((10)*(64000000/4000.0)));
  1463  000770  0ED0               	movlw	208
  1464  000772  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1465  000774  0ECA               	movlw	202
  1466  000776                     u1067:
  1467  000776  2EE8               	decfsz	wreg,f,c
  1468  000778  D7FE               	goto	u1067
  1469  00077A  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1470  00077C  D7FC               	goto	u1067
  1471                           
  1472                           ;user.c: 287: _delay((unsigned long)((2)*(64000000/4000.0)));
  1473  00077E  0E2A               	movlw	42
  1474  000780  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1475  000782  0E8E               	movlw	142
  1476  000784                     u1077:
  1477  000784  2EE8               	decfsz	wreg,f,c
  1478  000786  D7FE               	goto	u1077
  1479  000788  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1480  00078A  D7FC               	goto	u1077
  1481                           
  1482                           ;user.c: 288: LATC4=1;
  1483  00078C  888B               	bsf	3979,4,c	;volatile
  1484                           
  1485                           ;user.c: 289: LATC5=1;
  1486  00078E  8A8B               	bsf	3979,5,c	;volatile
  1487                           
  1488                           ;user.c: 290: LATC3=0;
  1489  000790  968B               	bcf	3979,3,c	;volatile
  1490                           
  1491                           ;user.c: 291: LATC6=0;
  1492  000792  9C8B               	bcf	3979,6,c	;volatile
  1493                           
  1494                           ;user.c: 292: _delay((unsigned long)((10)*(64000000/4000.0)));
  1495  000794  0ED0               	movlw	208
  1496  000796  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1497  000798  0ECA               	movlw	202
  1498  00079A                     u1087:
  1499  00079A  2EE8               	decfsz	wreg,f,c
  1500  00079C  D7FE               	goto	u1087
  1501  00079E  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1502  0007A0  D7FC               	goto	u1087
  1503                           
  1504                           ;user.c: 293: _delay((unsigned long)((2)*(64000000/4000.0)));
  1505  0007A2  0E2A               	movlw	42
  1506  0007A4  6E20               	movwf	??_sollevaCarrello& (0+255),c
  1507  0007A6  0E8E               	movlw	142
  1508  0007A8                     u1097:
  1509  0007A8  2EE8               	decfsz	wreg,f,c
  1510  0007AA  D7FE               	goto	u1097
  1511  0007AC  2E20               	decfsz	??_sollevaCarrello& (0+255),f,c
  1512  0007AE  D7FC               	goto	u1097
  1513  0007B0  2A21               	incf	sollevaCarrello@p,f,c
  1514  0007B2  D7B1               	goto	l2151
  1515  0007B4                     l363:
  1516                           
  1517                           ;user.c: 295: }
  1518                           ;user.c: 296: LATC7 = 0;
  1519  0007B4  9E8B               	bcf	3979,7,c	;volatile
  1520  0007B6  0012               	return		;funcret
  1521  0007B8                     __end_of_sollevaCarrello:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           intcon	equ	0xFF2
  1528                           intcon2	equ	0xFF1
  1529                           intcon3	equ	0xFF0
  1530                           postinc0	equ	0xFEE
  1531                           wreg	equ	0xFE8
  1532                           postdec1	equ	0xFE5
  1533                           fsr1l	equ	0xFE1
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _seguiLinea *****************
  1537 ;; Defined at:
  1538 ;;		line 63 in file "user.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  T               1    4[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1552 ;;      Params:         0       0       0       0
  1553 ;;      Locals:         0       1       0       0
  1554 ;;      Temps:          0       1       0       0
  1555 ;;      Totals:         0       2       0       0
  1556 ;;Total ram usage:        2 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    3
  1559 ;; This function calls:
  1560 ;;		_ADC_GetConversion
  1561 ;;		_EPWM1_LoadDutyValue
  1562 ;;		_EPWM2_LoadDutyValue
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text4
  1569  0003E2                     __ptext4:
  1570                           	opt stack 0
  1571  0003E2                     _seguiLinea:
  1572                           	opt stack 27
  1573                           
  1574                           ;user.c: 65: EPWM1_LoadDutyValue(700);
  1575                           
  1576                           ;incstack = 0
  1577  0003E2  0E02               	movlw	2
  1578  0003E4  6E21               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
  1579  0003E6  0EBC               	movlw	188
  1580  0003E8  6E20               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1581  0003EA  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  1582                           
  1583                           ;user.c: 66: EPWM2_LoadDutyValue(712);
  1584  0003EE  0E02               	movlw	2
  1585  0003F0  6E21               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
  1586  0003F2  0EC8               	movlw	200
  1587  0003F4  6E20               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1588  0003F6  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  1589                           
  1590                           ;user.c: 67: LATC0 = 1;
  1591  0003FA  808B               	bsf	3979,0,c	;volatile
  1592                           
  1593                           ;user.c: 71: while(ADC_GetConversion(channel_AN13)<750){
  1594  0003FC  D061               	goto	l2089
  1595  0003FE                     l2055:
  1596                           
  1597                           ;user.c: 72: deltaV = ADC_GetConversion(channel_AN13);
  1598  0003FE  0E0D               	movlw	13
  1599  000400  ECE2  F004         	call	_ADC_GetConversion
  1600  000404  C020  F02C         	movff	?_ADC_GetConversion,_deltaV
  1601  000408  C021  F02D         	movff	?_ADC_GetConversion+1,_deltaV+1
  1602                           
  1603                           ;user.c: 73: if(deltaV > 292){
  1604  00040C  0E25               	movlw	37
  1605  00040E  5C2C               	subwf	_deltaV,w,c
  1606  000410  0E01               	movlw	1
  1607  000412  582D               	subwfb	_deltaV+1,w,c
  1608  000414  A0D8               	btfss	status,0,c
  1609  000416  D008               	goto	l2061
  1610                           
  1611                           ;user.c: 74: vel_DX=762;
  1612  000418  0E02               	movlw	2
  1613  00041A  6E3D               	movwf	_vel_DX+1,c
  1614  00041C  0EFA               	movlw	250
  1615  00041E  6E3C               	movwf	_vel_DX,c
  1616                           
  1617                           ;user.c: 75: vel_SX = 655;
  1618  000420  0E02               	movlw	2
  1619  000422  6E3F               	movwf	_vel_SX+1,c
  1620  000424  0E8F               	movlw	143
  1621  000426  D022               	goto	L8
  1622  000428                     l2061:
  1623  000428  502D               	movf	_deltaV+1,w,c
  1624  00042A  E113               	bnz	l2067
  1625  00042C  0EFC               	movlw	252
  1626  00042E  5C2C               	subwf	_deltaV,w,c
  1627  000430  B0D8               	btfsc	status,0,c
  1628  000432  D00F               	goto	l2067
  1629  000434  502D               	movf	_deltaV+1,w,c
  1630  000436  E104               	bnz	u760
  1631  000438  0E0B               	movlw	11
  1632  00043A  5C2C               	subwf	_deltaV,w,c
  1633  00043C  A0D8               	btfss	status,0,c
  1634  00043E  D009               	goto	l2067
  1635  000440                     u760:
  1636                           
  1637                           ;user.c: 77: vel_SX=750;
  1638  000440  0E02               	movlw	2
  1639  000442  6E3F               	movwf	_vel_SX+1,c
  1640  000444  0EEE               	movlw	238
  1641  000446  6E3E               	movwf	_vel_SX,c
  1642                           
  1643                           ;user.c: 78: vel_DX = 667;
  1644  000448  0E02               	movlw	2
  1645  00044A  6E3D               	movwf	_vel_DX+1,c
  1646  00044C  0E9B               	movlw	155
  1647  00044E  6E3C               	movwf	_vel_DX,c
  1648                           
  1649                           ;user.c: 79: }else if(deltaV > 10){
  1650  000450  D00E               	goto	l2071
  1651  000452                     l2067:
  1652  000452  502D               	movf	_deltaV+1,w,c
  1653  000454  E104               	bnz	u770
  1654  000456  0E0B               	movlw	11
  1655  000458  5C2C               	subwf	_deltaV,w,c
  1656  00045A  A0D8               	btfss	status,0,c
  1657  00045C  D008               	goto	l2071
  1658  00045E                     u770:
  1659                           
  1660                           ;user.c: 80: vel_DX = 712;
  1661  00045E  0E02               	movlw	2
  1662  000460  6E3D               	movwf	_vel_DX+1,c
  1663  000462  0EC8               	movlw	200
  1664  000464  6E3C               	movwf	_vel_DX,c
  1665                           
  1666                           ;user.c: 81: vel_SX = 700;
  1667  000466  0E02               	movlw	2
  1668  000468  6E3F               	movwf	_vel_SX+1,c
  1669  00046A  0EBC               	movlw	188
  1670  00046C                     L8:
  1671  00046C  6E3E               	movwf	_vel_SX,c
  1672  00046E                     l2071:
  1673                           
  1674                           ;user.c: 82: }
  1675                           ;user.c: 83: EPWM1_LoadDutyValue(vel_SX);
  1676  00046E  C03E  F020         	movff	_vel_SX,EPWM1_LoadDutyValue@dutyValue
  1677  000472  C03F  F021         	movff	_vel_SX+1,EPWM1_LoadDutyValue@dutyValue+1
  1678  000476  ECC4  F004         	call	_EPWM1_LoadDutyValue	;wreg free
  1679                           
  1680                           ;user.c: 84: EPWM2_LoadDutyValue(vel_DX);
  1681  00047A  C03C  F020         	movff	_vel_DX,EPWM2_LoadDutyValue@dutyValue
  1682  00047E  C03D  F021         	movff	_vel_DX+1,EPWM2_LoadDutyValue@dutyValue+1
  1683  000482  ECA6  F004         	call	_EPWM2_LoadDutyValue	;wreg free
  1684                           
  1685                           ;user.c: 87: for(uint8_t T = 0; T < 8; T++){
  1686  000486  0E00               	movlw	0
  1687  000488  0100               	movlb	0	; () banked
  1688  00048A  6F64               	movwf	seguiLinea@T& (0+255),b
  1689  00048C                     l2075:
  1690                           
  1691                           ; BSR set to: 0
  1692  00048C  0E07               	movlw	7
  1693  00048E  0100               	movlb	0	; () banked
  1694  000490  6564               	cpfsgt	seguiLinea@T& (0+255),b
  1695  000492  D001               	goto	l2079
  1696  000494  D015               	goto	l2089
  1697  000496                     l2079:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;user.c: 88: _delay((unsigned long)((1)*(64000000/4000.0)));
  1701  000496  0E15               	movlw	21
  1702  000498  0100               	movlb	0	; () banked
  1703  00049A  6F63               	movwf	??_seguiLinea& (0+255),b
  1704  00049C  0EC6               	movlw	198
  1705  00049E                     u1107:
  1706  00049E  2EE8               	decfsz	wreg,f,c
  1707  0004A0  D7FE               	goto	u1107
  1708  0004A2  2F63               	decfsz	??_seguiLinea& (0+255),f,b
  1709  0004A4  D7FC               	goto	u1107
  1710  0004A6  D000               	nop2	
  1711                           
  1712                           ;user.c: 89: if(ADC_GetConversion(channel_AN13)>=750){
  1713  0004A8  0E0D               	movlw	13
  1714  0004AA  ECE2  F004         	call	_ADC_GetConversion
  1715  0004AE  0EEE               	movlw	238
  1716  0004B0  5C20               	subwf	?_ADC_GetConversion,w,c
  1717  0004B2  0E02               	movlw	2
  1718  0004B4  5821               	subwfb	?_ADC_GetConversion+1,w,c
  1719  0004B6  B0D8               	btfsc	status,0,c
  1720  0004B8  D003               	goto	l2089
  1721                           
  1722                           ;user.c: 90: break;
  1723  0004BA  0100               	movlb	0	; () banked
  1724  0004BC  2B64               	incf	seguiLinea@T& (0+255),f,b
  1725  0004BE  D7E6               	goto	l2075
  1726  0004C0                     l2089:
  1727  0004C0  0E0D               	movlw	13
  1728  0004C2  ECE2  F004         	call	_ADC_GetConversion
  1729  0004C6  0EEE               	movlw	238
  1730  0004C8  5C20               	subwf	?_ADC_GetConversion,w,c
  1731  0004CA  0E02               	movlw	2
  1732  0004CC  5821               	subwfb	?_ADC_GetConversion+1,w,c
  1733  0004CE  B0D8               	btfsc	status,0,c
  1734  0004D0  0012               	return	
  1735  0004D2  D795               	goto	l2055
  1736  0004D4                     __end_of_seguiLinea:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           intcon	equ	0xFF2
  1743                           intcon2	equ	0xFF1
  1744                           intcon3	equ	0xFF0
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _EPWM2_LoadDutyValue *****************
  1752 ;; Defined at:
  1753 ;;		line 91 in file "mcc_generated_files/epwm2.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  dutyValue       2   31[COMRAM] unsigned int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1767 ;;      Params:         2       0       0       0
  1768 ;;      Locals:         0       0       0       0
  1769 ;;      Temps:          0       2       0       0
  1770 ;;      Totals:         2       2       0       0
  1771 ;;Total ram usage:        4 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    2
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_seguiLinea
  1778 ;;		_stopM
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784  00094C                     __ptext5:
  1785                           	opt stack 0
  1786  00094C                     _EPWM2_LoadDutyValue:
  1787                           	opt stack 27
  1788                           
  1789                           ;epwm2.c: 94: CCPR2L = ((dutyValue & 0x03FC)>>2);
  1790                           
  1791                           ;incstack = 0
  1792  00094C  C020  F060         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1793  000950  C021  F061         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  1794  000954  0100               	movlb	0	; () banked
  1795  000956  90D8               	bcf	status,0,c
  1796  000958  3361               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  1797  00095A  3360               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  1798  00095C  0100               	movlb	0	; () banked
  1799  00095E  90D8               	bcf	status,0,c
  1800  000960  3361               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  1801  000962  3360               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  1802  000964  0100               	movlb	0	; () banked
  1803  000966  5160               	movf	??_EPWM2_LoadDutyValue& (0+255),w,b
  1804  000968  6E67               	movwf	3943,c	;volatile
  1805                           
  1806                           ;epwm2.c: 97: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1807  00096A  C020  F060         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  1808  00096E  0E03               	movlw	3
  1809  000970  0100               	movlb	0	; () banked
  1810  000972  1760               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  1811  000974  0100               	movlb	0	; () banked
  1812  000976  3B60               	swapf	??_EPWM2_LoadDutyValue& (0+255),f,b
  1813  000978  0EF0               	movlw	240
  1814  00097A  1760               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  1815  00097C  5066               	movf	3942,w,c	;volatile
  1816  00097E  0BCF               	andlw	207
  1817  000980  0100               	movlb	0	; () banked
  1818  000982  1160               	iorwf	??_EPWM2_LoadDutyValue& (0+255),w,b
  1819  000984  6E66               	movwf	3942,c	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822  000986  0012               	return		;funcret
  1823  000988                     __end_of_EPWM2_LoadDutyValue:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           intcon	equ	0xFF2
  1830                           intcon2	equ	0xFF1
  1831                           intcon3	equ	0xFF0
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1l	equ	0xFE1
  1836                           status	equ	0xFD8
  1837                           
  1838 ;; *************** function _EPWM1_LoadDutyValue *****************
  1839 ;; Defined at:
  1840 ;;		line 91 in file "mcc_generated_files/epwm1.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  dutyValue       2   31[COMRAM] unsigned int 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1854 ;;      Params:         2       0       0       0
  1855 ;;      Locals:         0       0       0       0
  1856 ;;      Temps:          0       2       0       0
  1857 ;;      Totals:         2       2       0       0
  1858 ;;Total ram usage:        4 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    2
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_seguiLinea
  1865 ;;		_stopM
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text6
  1871  000988                     __ptext6:
  1872                           	opt stack 0
  1873  000988                     _EPWM1_LoadDutyValue:
  1874                           	opt stack 27
  1875                           
  1876                           ;epwm1.c: 94: CCPR1L = ((dutyValue & 0x03FC)>>2);
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;incstack = 0
  1880  000988  C020  F060         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1881  00098C  C021  F061         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1882  000990  0100               	movlb	0	; () banked
  1883  000992  90D8               	bcf	status,0,c
  1884  000994  3361               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  1885  000996  3360               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  1886  000998  0100               	movlb	0	; () banked
  1887  00099A  90D8               	bcf	status,0,c
  1888  00099C  3361               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
  1889  00099E  3360               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
  1890  0009A0  0100               	movlb	0	; () banked
  1891  0009A2  5160               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
  1892  0009A4  6EBE               	movwf	4030,c	;volatile
  1893                           
  1894                           ;epwm1.c: 97: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1895  0009A6  C020  F060         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1896  0009AA  0E03               	movlw	3
  1897  0009AC  0100               	movlb	0	; () banked
  1898  0009AE  1760               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  1899  0009B0  0100               	movlb	0	; () banked
  1900  0009B2  3B60               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
  1901  0009B4  0EF0               	movlw	240
  1902  0009B6  1760               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
  1903  0009B8  50BD               	movf	4029,w,c	;volatile
  1904  0009BA  0BCF               	andlw	207
  1905  0009BC  0100               	movlb	0	; () banked
  1906  0009BE  1160               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
  1907  0009C0  6EBD               	movwf	4029,c	;volatile
  1908                           
  1909                           ; BSR set to: 0
  1910  0009C2  0012               	return		;funcret
  1911  0009C4                     __end_of_EPWM1_LoadDutyValue:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           intcon	equ	0xFF2
  1918                           intcon2	equ	0xFF1
  1919                           intcon3	equ	0xFF0
  1920                           postinc0	equ	0xFEE
  1921                           wreg	equ	0xFE8
  1922                           postdec1	equ	0xFE5
  1923                           fsr1l	equ	0xFE1
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _controllaColore *****************
  1927 ;; Defined at:
  1928 ;;		line 194 in file "user.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1942 ;;      Params:         0       0       0       0
  1943 ;;      Locals:         0       0       0       0
  1944 ;;      Temps:          0       1       0       0
  1945 ;;      Totals:         0       1       0       0
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    4
  1949 ;; This function calls:
  1950 ;;		_ADC_GetConversion
  1951 ;;		_delay_mS
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text7
  1958  0004D4                     __ptext7:
  1959                           	opt stack 0
  1960  0004D4                     _controllaColore:
  1961                           	opt stack 26
  1962                           
  1963                           ;user.c: 196: LATA0 = 0;
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;incstack = 0
  1967  0004D4  9089               	bcf	3977,0,c	;volatile
  1968                           
  1969                           ;user.c: 197: LATA1 = 1;
  1970  0004D6  8289               	bsf	3977,1,c	;volatile
  1971                           
  1972                           ;user.c: 198: LATA4 = 0;
  1973  0004D8  9889               	bcf	3977,4,c	;volatile
  1974                           
  1975                           ;user.c: 200: LATA2 = 0;
  1976  0004DA  9489               	bcf	3977,2,c	;volatile
  1977                           
  1978                           ;user.c: 201: LATA3 = 0;
  1979  0004DC  9689               	bcf	3977,3,c	;volatile
  1980                           
  1981                           ;user.c: 203: delay_mS(500);
  1982  0004DE  0E01               	movlw	1
  1983  0004E0  0100               	movlb	0	; () banked
  1984  0004E2  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
  1985  0004E4  0EF4               	movlw	244
  1986  0004E6  6F6A               	movwf	delay_mS@m_sec& (0+255),b
  1987  0004E8  EC7F  F004         	call	_delay_mS	;wreg free
  1988                           
  1989                           ;user.c: 204: rossoPC = ADC_GetConversion(channel_AN4);
  1990  0004EC  0E04               	movlw	4
  1991  0004EE  ECE2  F004         	call	_ADC_GetConversion
  1992  0004F2  C020  F032         	movff	?_ADC_GetConversion,_rossoPC
  1993  0004F6  C021  F033         	movff	?_ADC_GetConversion+1,_rossoPC+1
  1994                           
  1995                           ;user.c: 207: LATA2 = 0;
  1996  0004FA  9489               	bcf	3977,2,c	;volatile
  1997                           
  1998                           ;user.c: 208: LATA3 = 1;
  1999  0004FC  8689               	bsf	3977,3,c	;volatile
  2000                           
  2001                           ;user.c: 209: delay_mS(500);
  2002  0004FE  0E01               	movlw	1
  2003  000500  0100               	movlb	0	; () banked
  2004  000502  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
  2005  000504  0EF4               	movlw	244
  2006  000506  6F6A               	movwf	delay_mS@m_sec& (0+255),b
  2007  000508  EC7F  F004         	call	_delay_mS	;wreg free
  2008                           
  2009                           ;user.c: 210: bluPC = ADC_GetConversion(channel_AN4);
  2010  00050C  0E04               	movlw	4
  2011  00050E  ECE2  F004         	call	_ADC_GetConversion
  2012  000512  C020  F02A         	movff	?_ADC_GetConversion,_bluPC
  2013  000516  C021  F02B         	movff	?_ADC_GetConversion+1,_bluPC+1
  2014                           
  2015                           ;user.c: 213: LATA2 = 1;
  2016  00051A  8489               	bsf	3977,2,c	;volatile
  2017                           
  2018                           ;user.c: 214: LATA3 = 1;
  2019  00051C  8689               	bsf	3977,3,c	;volatile
  2020                           
  2021                           ;user.c: 215: delay_mS(500);
  2022  00051E  0E01               	movlw	1
  2023  000520  0100               	movlb	0	; () banked
  2024  000522  6F6B               	movwf	(delay_mS@m_sec+1)& (0+255),b
  2025  000524  0EF4               	movlw	244
  2026  000526  6F6A               	movwf	delay_mS@m_sec& (0+255),b
  2027  000528  EC7F  F004         	call	_delay_mS	;wreg free
  2028                           
  2029                           ;user.c: 216: verdePC = ADC_GetConversion(channel_AN4);
  2030  00052C  0E04               	movlw	4
  2031  00052E  ECE2  F004         	call	_ADC_GetConversion
  2032  000532  C020  F034         	movff	?_ADC_GetConversion,_verdePC
  2033  000536  C021  F035         	movff	?_ADC_GetConversion+1,_verdePC+1
  2034                           
  2035                           ;user.c: 219: LATA4 = 1;
  2036  00053A  8889               	bsf	3977,4,c	;volatile
  2037                           
  2038                           ;user.c: 222: if(rossoPC >= bluPC){
  2039  00053C  502A               	movf	_bluPC,w,c
  2040  00053E  5C32               	subwf	_rossoPC,w,c
  2041  000540  5033               	movf	_rossoPC+1,w,c
  2042  000542  0A80               	xorlw	128
  2043  000544  0100               	movlb	0	; () banked
  2044  000546  6F6D               	movwf	??_controllaColore& (0+255),b
  2045  000548  502B               	movf	_bluPC+1,w,c
  2046  00054A  0A80               	xorlw	128
  2047  00054C  0100               	movlb	0	; () banked
  2048  00054E  596D               	subwfb	??_controllaColore& (0+255),w,b
  2049  000550  A0D8               	btfss	status,0,c
  2050  000552  D012               	goto	l2135
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;user.c: 223: if(rossoPC >= verdePC) colore = ROSSO; else colore = VERDE;
  2054  000554  5034               	movf	_verdePC,w,c
  2055  000556  5C32               	subwf	_rossoPC,w,c
  2056  000558  5033               	movf	_rossoPC+1,w,c
  2057  00055A  0A80               	xorlw	128
  2058  00055C  0100               	movlb	0	; () banked
  2059  00055E  6F6D               	movwf	??_controllaColore& (0+255),b
  2060  000560  5035               	movf	_verdePC+1,w,c
  2061  000562  0A80               	xorlw	128
  2062  000564  0100               	movlb	0	; () banked
  2063  000566  596D               	subwfb	??_controllaColore& (0+255),w,b
  2064  000568  A0D8               	btfss	status,0,c
  2065  00056A  D003               	goto	l2133
  2066                           
  2067                           ; BSR set to: 0
  2068  00056C  0E00               	movlw	0
  2069  00056E  6E36               	movwf	_colore,c
  2070  000570  0012               	return	
  2071  000572                     l2133:
  2072                           
  2073                           ; BSR set to: 0
  2074  000572  0E02               	movlw	2
  2075  000574  6E36               	movwf	_colore,c
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;user.c: 224: }else if(bluPC>=verdePC){
  2079  000576  0012               	return	
  2080  000578                     l2135:
  2081                           
  2082                           ; BSR set to: 0
  2083  000578  5034               	movf	_verdePC,w,c
  2084  00057A  5C2A               	subwf	_bluPC,w,c
  2085  00057C  502B               	movf	_bluPC+1,w,c
  2086  00057E  0A80               	xorlw	128
  2087  000580  0100               	movlb	0	; () banked
  2088  000582  6F6D               	movwf	??_controllaColore& (0+255),b
  2089  000584  5035               	movf	_verdePC+1,w,c
  2090  000586  0A80               	xorlw	128
  2091  000588  0100               	movlb	0	; () banked
  2092  00058A  596D               	subwfb	??_controllaColore& (0+255),w,b
  2093  00058C  A0D8               	btfss	status,0,c
  2094  00058E  D003               	goto	l2139
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;user.c: 225: colore = BLU;
  2098  000590  0E01               	movlw	1
  2099  000592  6E36               	movwf	_colore,c
  2100                           
  2101                           ;user.c: 226: }else {
  2102  000594  0012               	return	
  2103  000596                     l2139:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;user.c: 227: colore = VERDE;
  2107  000596  0E02               	movlw	2
  2108  000598  6E36               	movwf	_colore,c
  2109                           
  2110                           ; BSR set to: 0
  2111  00059A  0012               	return	
  2112  00059C                     __end_of_controllaColore:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           intcon	equ	0xFF2
  2119                           intcon2	equ	0xFF1
  2120                           intcon3	equ	0xFF0
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           fsr1l	equ	0xFE1
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _delay_mS *****************
  2128 ;; Defined at:
  2129 ;;		line 337 in file "user.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  m_sec           2   10[BANK0 ] unsigned int 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2143 ;;      Params:         0       2       0       0
  2144 ;;      Locals:         0       0       0       0
  2145 ;;      Temps:          0       1       0       0
  2146 ;;      Totals:         0       3       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		___lwdiv
  2152 ;;		_checkBatt
  2153 ;; This function is called by:
  2154 ;;		_taratura
  2155 ;;		_controllaColore
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text8
  2161  0008FE                     __ptext8:
  2162                           	opt stack 0
  2163  0008FE                     _delay_mS:
  2164                           	opt stack 26
  2165                           
  2166                           ;user.c: 338: msec_10 = m_sec/10;
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;incstack = 0
  2170  0008FE  C06A  F063         	movff	delay_mS@m_sec,___lwdiv@dividend
  2171  000902  C06B  F064         	movff	delay_mS@m_sec+1,___lwdiv@dividend+1
  2172  000906  0E00               	movlw	0
  2173  000908  0100               	movlb	0	; () banked
  2174  00090A  6F66               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2175  00090C  0E0A               	movlw	10
  2176  00090E  6F65               	movwf	___lwdiv@divisor& (0+255),b
  2177  000910  ECDC  F003         	call	___lwdiv	;wreg free
  2178  000914  C063  F030         	movff	?___lwdiv,_msec_10
  2179  000918  C064  F031         	movff	?___lwdiv+1,_msec_10+1
  2180                           
  2181                           ;user.c: 339: for(T = 0; T<=msec_10; T++){
  2182  00091C  0E00               	movlw	0
  2183  00091E  6E23               	movwf	_T+1,c
  2184  000920  0E00               	movlw	0
  2185  000922  6E22               	movwf	_T,c
  2186  000924  D00C               	goto	l2033
  2187  000926                     l2027:
  2188                           
  2189                           ;user.c: 340: _delay((unsigned long)((10)*(64000000/4000.0)));
  2190  000926  0ED0               	movlw	208
  2191  000928  0100               	movlb	0	; () banked
  2192  00092A  6F6C               	movwf	??_delay_mS& (0+255),b
  2193  00092C  0ECA               	movlw	202
  2194  00092E                     u1117:
  2195  00092E  2EE8               	decfsz	wreg,f,c
  2196  000930  D7FE               	goto	u1117
  2197  000932  2F6C               	decfsz	??_delay_mS& (0+255),f,b
  2198  000934  D7FC               	goto	u1117
  2199                           
  2200                           ;user.c: 341: checkBatt();
  2201  000936  ECCF  F005         	call	_checkBatt	;wreg free
  2202  00093A  4A22               	infsnz	_T,f,c
  2203  00093C  2A23               	incf	_T+1,f,c
  2204  00093E                     l2033:
  2205  00093E  5022               	movf	_T,w,c
  2206  000940  5C30               	subwf	_msec_10,w,c
  2207  000942  5023               	movf	_T+1,w,c
  2208  000944  5831               	subwfb	_msec_10+1,w,c
  2209  000946  A0D8               	btfss	status,0,c
  2210  000948  0012               	return	
  2211  00094A  D7ED               	goto	l2027
  2212  00094C                     __end_of_delay_mS:
  2213                           	opt stack 0
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           intcon	equ	0xFF2
  2219                           intcon2	equ	0xFF1
  2220                           intcon3	equ	0xFF0
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _checkBatt *****************
  2228 ;; Defined at:
  2229 ;;		line 252 in file "user.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		None
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2243 ;;      Params:         0       0       0       0
  2244 ;;      Locals:         0       0       0       0
  2245 ;;      Temps:          0       0       0       0
  2246 ;;      Totals:         0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    2
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_delay_mS
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text9
  2258  000B9E                     __ptext9:
  2259                           	opt stack 0
  2260  000B9E                     _checkBatt:
  2261                           	opt stack 26
  2262                           
  2263                           ;incstack = 0
  2264  000B9E  0012               	return		;funcret
  2265  000BA0                     __end_of_checkBatt:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           intcon	equ	0xFF2
  2272                           intcon2	equ	0xFF1
  2273                           intcon3	equ	0xFF0
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1l	equ	0xFE1
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function ___lwdiv *****************
  2281 ;; Defined at:
  2282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  dividend        2    3[BANK0 ] unsigned int 
  2285 ;;  divisor         2    5[BANK0 ] unsigned int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  quotient        2    8[BANK0 ] unsigned int 
  2288 ;;  counter         1    7[BANK0 ] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2    3[BANK0 ] unsigned int 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2298 ;;      Params:         0       4       0       0
  2299 ;;      Locals:         0       3       0       0
  2300 ;;      Temps:          0       0       0       0
  2301 ;;      Totals:         0       7       0       0
  2302 ;;Total ram usage:        7 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    2
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_taratura
  2309 ;;		_delay_mS
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text10
  2314  0007B8                     __ptext10:
  2315                           	opt stack 0
  2316  0007B8                     ___lwdiv:
  2317                           	opt stack 26
  2318                           
  2319                           ;incstack = 0
  2320  0007B8  0E00               	movlw	0
  2321  0007BA  0100               	movlb	0	; () banked
  2322  0007BC  6F69               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2323  0007BE  0E00               	movlw	0
  2324  0007C0  6F68               	movwf	___lwdiv@quotient& (0+255),b
  2325                           
  2326                           ; BSR set to: 0
  2327  0007C2  0100               	movlb	0	; () banked
  2328  0007C4  5165               	movf	___lwdiv@divisor& (0+255),w,b
  2329  0007C6  0100               	movlb	0	; () banked
  2330  0007C8  1166               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2331  0007CA  B4D8               	btfsc	status,2,c
  2332  0007CC  D02C               	goto	l884
  2333                           
  2334                           ; BSR set to: 0
  2335  0007CE  0E01               	movlw	1
  2336  0007D0  0100               	movlb	0	; () banked
  2337  0007D2  6F67               	movwf	___lwdiv@counter& (0+255),b
  2338  0007D4  D006               	goto	l1963
  2339  0007D6                     l1961:
  2340                           
  2341                           ; BSR set to: 0
  2342  0007D6  0100               	movlb	0	; () banked
  2343  0007D8  90D8               	bcf	status,0,c
  2344  0007DA  3765               	rlcf	___lwdiv@divisor& (0+255),f,b
  2345  0007DC  3766               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2346  0007DE  0100               	movlb	0	; () banked
  2347  0007E0  2B67               	incf	___lwdiv@counter& (0+255),f,b
  2348  0007E2                     l1963:
  2349                           
  2350                           ; BSR set to: 0
  2351  0007E2  0100               	movlb	0	; () banked
  2352  0007E4  AF66               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2353  0007E6  D7F7               	goto	l1961
  2354  0007E8                     l1965:
  2355                           
  2356                           ; BSR set to: 0
  2357  0007E8  0100               	movlb	0	; () banked
  2358  0007EA  90D8               	bcf	status,0,c
  2359  0007EC  3768               	rlcf	___lwdiv@quotient& (0+255),f,b
  2360  0007EE  3769               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2361                           
  2362                           ; BSR set to: 0
  2363  0007F0  0100               	movlb	0	; () banked
  2364  0007F2  5165               	movf	___lwdiv@divisor& (0+255),w,b
  2365  0007F4  0100               	movlb	0	; () banked
  2366  0007F6  5D63               	subwf	___lwdiv@dividend& (0+255),w,b
  2367  0007F8  0100               	movlb	0	; () banked
  2368  0007FA  5166               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2369  0007FC  0100               	movlb	0	; () banked
  2370  0007FE  5964               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2371  000800  A0D8               	btfss	status,0,c
  2372  000802  D00A               	goto	l1973
  2373                           
  2374                           ; BSR set to: 0
  2375  000804  0100               	movlb	0	; () banked
  2376  000806  5165               	movf	___lwdiv@divisor& (0+255),w,b
  2377  000808  0100               	movlb	0	; () banked
  2378  00080A  5F63               	subwf	___lwdiv@dividend& (0+255),f,b
  2379  00080C  0100               	movlb	0	; () banked
  2380  00080E  5166               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2381  000810  0100               	movlb	0	; () banked
  2382  000812  5B64               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2383                           
  2384                           ; BSR set to: 0
  2385  000814  0100               	movlb	0	; () banked
  2386  000816  8168               	bsf	___lwdiv@quotient& (0+255),0,b
  2387  000818                     l1973:
  2388                           
  2389                           ; BSR set to: 0
  2390  000818  0100               	movlb	0	; () banked
  2391  00081A  90D8               	bcf	status,0,c
  2392  00081C  3366               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2393  00081E  3365               	rrcf	___lwdiv@divisor& (0+255),f,b
  2394                           
  2395                           ; BSR set to: 0
  2396  000820  0100               	movlb	0	; () banked
  2397  000822  2F67               	decfsz	___lwdiv@counter& (0+255),f,b
  2398  000824  D7E1               	goto	l1965
  2399  000826                     l884:
  2400                           
  2401                           ; BSR set to: 0
  2402  000826  C068  F063         	movff	___lwdiv@quotient,?___lwdiv
  2403  00082A  C069  F064         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2404                           
  2405                           ; BSR set to: 0
  2406  00082E  0012               	return		;funcret
  2407  000830                     __end_of___lwdiv:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           intcon	equ	0xFF2
  2414                           intcon2	equ	0xFF1
  2415                           intcon3	equ	0xFF0
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1l	equ	0xFE1
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _ADC_GetConversion *****************
  2423 ;; Defined at:
  2424 ;;		line 105 in file "mcc_generated_files/adc.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  channel         1    wreg     enum E7379
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  channel         1    2[BANK0 ] enum E7379
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2   31[COMRAM] unsigned int 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2438 ;;      Params:         2       0       0       0
  2439 ;;      Locals:         0       1       0       0
  2440 ;;      Temps:          0       2       0       0
  2441 ;;      Totals:         2       3       0       0
  2442 ;;Total ram usage:        5 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    2
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_seguiLinea
  2449 ;;		_taratura
  2450 ;;		_controllaColore
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text11
  2456  0009C4                     __ptext11:
  2457                           	opt stack 0
  2458  0009C4                     _ADC_GetConversion:
  2459                           	opt stack 27
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;incstack = 0
  2463                           ;ADC_GetConversion@channel stored from wreg
  2464  0009C4  0100               	movlb	0	; () banked
  2465  0009C6  6F62               	movwf	ADC_GetConversion@channel& (0+255),b
  2466                           
  2467                           ;adc.c: 108: ADCON0bits.CHS = channel;
  2468  0009C8  C062  F060         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2469  0009CC  0100               	movlb	0	; () banked
  2470  0009CE  4760               	rlncf	??_ADC_GetConversion& (0+255),f,b
  2471  0009D0  4760               	rlncf	??_ADC_GetConversion& (0+255),f,b
  2472  0009D2  50C2               	movf	4034,w,c	;volatile
  2473  0009D4  0100               	movlb	0	; () banked
  2474  0009D6  1960               	xorwf	??_ADC_GetConversion& (0+255),w,b
  2475  0009D8  0B83               	andlw	-125
  2476  0009DA  1960               	xorwf	??_ADC_GetConversion& (0+255),w,b
  2477  0009DC  6EC2               	movwf	4034,c	;volatile
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;adc.c: 111: ADCON0bits.ADON = 1;
  2481  0009DE  80C2               	bsf	4034,0,c	;volatile
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  2485  0009E0  82C2               	bsf	4034,1,c	;volatile
  2486  0009E2                     l222:
  2487  0009E2  B2C2               	btfsc	4034,1,c	;volatile
  2488  0009E4  D7FE               	goto	l222
  2489                           
  2490                           ;adc.c: 120: }
  2491                           ;adc.c: 123: return ((ADRESH << 8) + ADRESL);
  2492  0009E6  50C4               	movf	4036,w,c	;volatile
  2493  0009E8  0100               	movlb	0	; () banked
  2494  0009EA  6F61               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  2495  0009EC  6B60               	clrf	??_ADC_GetConversion& (0+255),b
  2496  0009EE  50C3               	movf	4035,w,c	;volatile
  2497  0009F0  0100               	movlb	0	; () banked
  2498  0009F2  2560               	addwf	??_ADC_GetConversion& (0+255),w,b
  2499  0009F4  6E20               	movwf	?_ADC_GetConversion,c
  2500  0009F6  0E00               	movlw	0
  2501  0009F8  0100               	movlb	0	; () banked
  2502  0009FA  2161               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  2503  0009FC  6E21               	movwf	?_ADC_GetConversion+1,c
  2504  0009FE  0012               	return	
  2505  000A00                     __end_of_ADC_GetConversion:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           intcon	equ	0xFF2
  2512                           intcon2	equ	0xFF1
  2513                           intcon3	equ	0xFF0
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           fsr1l	equ	0xFE1
  2518                           status	equ	0xFD8
  2519                           
  2520 ;; *************** function _compara *****************
  2521 ;; Defined at:
  2522 ;;		line 59 in file "user.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  valore          2    0[BANK0 ] unsigned int 
  2525 ;;  soglia          2    2[BANK0 ] unsigned int 
  2526 ;;  tolleranza      2    4[BANK0 ] unsigned int 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      unsigned char 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2538 ;;      Params:         0       6       0       0
  2539 ;;      Locals:         0       1       0       0
  2540 ;;      Temps:          2       0       0       0
  2541 ;;      Totals:         2       7       0       0
  2542 ;;Total ram usage:        9 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    2
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_main
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text12
  2553  00089C                     __ptext12:
  2554                           	opt stack 0
  2555  00089C                     _compara:
  2556                           	opt stack 28
  2557                           
  2558                           ;user.c: 60: return (soglia - tolleranza <= valore) && (valore <= soglia + tolleranza);
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;incstack = 0
  2562  00089C  0E00               	movlw	0
  2563  00089E  0100               	movlb	0	; () banked
  2564  0008A0  6F66               	movwf	_compara$971& (0+255),b
  2565                           
  2566                           ; BSR set to: 0
  2567  0008A2  C064  F020         	movff	compara@tolleranza,??_compara
  2568  0008A6  C065  F021         	movff	compara@tolleranza+1,??_compara+1
  2569  0008AA  1E20               	comf	??_compara,f,c
  2570  0008AC  1E21               	comf	??_compara+1,f,c
  2571  0008AE  4A20               	infsnz	??_compara,f,c
  2572  0008B0  2A21               	incf	??_compara+1,f,c
  2573  0008B2  0100               	movlb	0	; () banked
  2574  0008B4  5162               	movf	compara@soglia& (0+255),w,b
  2575  0008B6  2620               	addwf	??_compara,f,c
  2576  0008B8  0100               	movlb	0	; () banked
  2577  0008BA  5163               	movf	(compara@soglia+1)& (0+255),w,b
  2578  0008BC  2221               	addwfc	??_compara+1,f,c
  2579  0008BE  5020               	movf	??_compara,w,c
  2580  0008C0  0100               	movlb	0	; () banked
  2581  0008C2  5D60               	subwf	compara@valore& (0+255),w,b
  2582  0008C4  5021               	movf	??_compara+1,w,c
  2583  0008C6  0100               	movlb	0	; () banked
  2584  0008C8  5961               	subwfb	(compara@valore+1)& (0+255),w,b
  2585  0008CA  A0D8               	btfss	status,0,c
  2586  0008CC  D015               	goto	l309
  2587                           
  2588                           ; BSR set to: 0
  2589  0008CE  0100               	movlb	0	; () banked
  2590  0008D0  5164               	movf	compara@tolleranza& (0+255),w,b
  2591  0008D2  0100               	movlb	0	; () banked
  2592  0008D4  2562               	addwf	compara@soglia& (0+255),w,b
  2593  0008D6  6E20               	movwf	??_compara& (0+255),c
  2594  0008D8  0100               	movlb	0	; () banked
  2595  0008DA  5165               	movf	(compara@tolleranza+1)& (0+255),w,b
  2596  0008DC  0100               	movlb	0	; () banked
  2597  0008DE  2163               	addwfc	(compara@soglia+1)& (0+255),w,b
  2598  0008E0  6E21               	movwf	(??_compara+1)& (0+255),c
  2599  0008E2  0100               	movlb	0	; () banked
  2600  0008E4  5160               	movf	compara@valore& (0+255),w,b
  2601  0008E6  5C20               	subwf	??_compara,w,c
  2602  0008E8  0100               	movlb	0	; () banked
  2603  0008EA  5161               	movf	(compara@valore+1)& (0+255),w,b
  2604  0008EC  5821               	subwfb	??_compara+1,w,c
  2605  0008EE  A0D8               	btfss	status,0,c
  2606  0008F0  D003               	goto	l309
  2607                           
  2608                           ; BSR set to: 0
  2609  0008F2  0E01               	movlw	1
  2610  0008F4  0100               	movlb	0	; () banked
  2611  0008F6  6F66               	movwf	_compara$971& (0+255),b
  2612  0008F8                     l309:
  2613                           
  2614                           ; BSR set to: 0
  2615  0008F8  0100               	movlb	0	; () banked
  2616  0008FA  5166               	movf	_compara$971& (0+255),w,b
  2617  0008FC  0012               	return	
  2618  0008FE                     __end_of_compara:
  2619                           	opt stack 0
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           intcon	equ	0xFF2
  2625                           intcon2	equ	0xFF1
  2626                           intcon3	equ	0xFF0
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postdec1	equ	0xFE5
  2630                           fsr1l	equ	0xFE1
  2631                           status	equ	0xFD8
  2632                           
  2633 ;; *************** function _abbassaCarrello *****************
  2634 ;; Defined at:
  2635 ;;		line 300 in file "user.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  p               1    1[BANK0 ] unsigned char 
  2640 ;;  p               1    0[BANK0 ] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2650 ;;      Params:         0       0       0       0
  2651 ;;      Locals:         0       2       0       0
  2652 ;;      Temps:          1       0       0       0
  2653 ;;      Totals:         1       2       0       0
  2654 ;;Total ram usage:        3 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    2
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text13
  2665  00065C                     __ptext13:
  2666                           	opt stack 0
  2667  00065C                     _abbassaCarrello:
  2668                           	opt stack 28
  2669                           
  2670                           ;user.c: 301: uint8_t p = 0;
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;incstack = 0
  2674  00065C  0E00               	movlw	0
  2675  00065E  0100               	movlb	0	; () banked
  2676  000660  6F60               	movwf	abbassaCarrello@p& (0+255),b
  2677                           
  2678                           ;user.c: 302: for(uint8_t p = 0; p<43;p++)
  2679  000662  0E00               	movlw	0
  2680  000664  0100               	movlb	0	; () banked
  2681  000666  6F61               	movwf	abbassaCarrello@p_1005& (0+255),b
  2682  000668                     l2185:
  2683                           
  2684                           ; BSR set to: 0
  2685  000668  0E2A               	movlw	42
  2686  00066A  0100               	movlb	0	; () banked
  2687  00066C  6561               	cpfsgt	abbassaCarrello@p_1005& (0+255),b
  2688  00066E  D001               	goto	l367
  2689  000670  D04C               	goto	l368
  2690  000672                     l367:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;user.c: 303: {
  2694                           ;user.c: 304: LATC7 = 1;
  2695  000672  8E8B               	bsf	3979,7,c	;volatile
  2696                           
  2697                           ;user.c: 305: LATC4=1;
  2698  000674  888B               	bsf	3979,4,c	;volatile
  2699                           
  2700                           ;user.c: 306: LATC5=1;
  2701  000676  8A8B               	bsf	3979,5,c	;volatile
  2702                           
  2703                           ;user.c: 307: LATC3=0;
  2704  000678  968B               	bcf	3979,3,c	;volatile
  2705                           
  2706                           ;user.c: 308: LATC6=0;
  2707  00067A  9C8B               	bcf	3979,6,c	;volatile
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;user.c: 309: _delay((unsigned long)((10)*(64000000/4000.0)));
  2711  00067C  0ED0               	movlw	208
  2712  00067E  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2713  000680  0ECA               	movlw	202
  2714  000682                     u1127:
  2715  000682  2EE8               	decfsz	wreg,f,c
  2716  000684  D7FE               	goto	u1127
  2717  000686  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2718  000688  D7FC               	goto	u1127
  2719                           
  2720                           ;user.c: 310: _delay((unsigned long)((2)*(64000000/4000.0)));
  2721  00068A  0E2A               	movlw	42
  2722  00068C  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2723  00068E  0E8E               	movlw	142
  2724  000690                     u1137:
  2725  000690  2EE8               	decfsz	wreg,f,c
  2726  000692  D7FE               	goto	u1137
  2727  000694  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2728  000696  D7FC               	goto	u1137
  2729                           
  2730                           ;user.c: 311: LATC4=1;
  2731  000698  888B               	bsf	3979,4,c	;volatile
  2732                           
  2733                           ;user.c: 312: LATC5=0;
  2734  00069A  9A8B               	bcf	3979,5,c	;volatile
  2735                           
  2736                           ;user.c: 313: LATC3=0;
  2737  00069C  968B               	bcf	3979,3,c	;volatile
  2738                           
  2739                           ;user.c: 314: LATC6=1;
  2740  00069E  8C8B               	bsf	3979,6,c	;volatile
  2741                           
  2742                           ;user.c: 315: _delay((unsigned long)((10)*(64000000/4000.0)));
  2743  0006A0  0ED0               	movlw	208
  2744  0006A2  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2745  0006A4  0ECA               	movlw	202
  2746  0006A6                     u1147:
  2747  0006A6  2EE8               	decfsz	wreg,f,c
  2748  0006A8  D7FE               	goto	u1147
  2749  0006AA  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2750  0006AC  D7FC               	goto	u1147
  2751                           
  2752                           ;user.c: 316: _delay((unsigned long)((2)*(64000000/4000.0)));
  2753  0006AE  0E2A               	movlw	42
  2754  0006B0  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2755  0006B2  0E8E               	movlw	142
  2756  0006B4                     u1157:
  2757  0006B4  2EE8               	decfsz	wreg,f,c
  2758  0006B6  D7FE               	goto	u1157
  2759  0006B8  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2760  0006BA  D7FC               	goto	u1157
  2761                           
  2762                           ;user.c: 317: LATC4=0;
  2763  0006BC  988B               	bcf	3979,4,c	;volatile
  2764                           
  2765                           ;user.c: 318: LATC5=0;
  2766  0006BE  9A8B               	bcf	3979,5,c	;volatile
  2767                           
  2768                           ;user.c: 319: LATC3=1;
  2769  0006C0  868B               	bsf	3979,3,c	;volatile
  2770                           
  2771                           ;user.c: 320: LATC6=1;
  2772  0006C2  8C8B               	bsf	3979,6,c	;volatile
  2773                           
  2774                           ;user.c: 321: _delay((unsigned long)((10)*(64000000/4000.0)));
  2775  0006C4  0ED0               	movlw	208
  2776  0006C6  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2777  0006C8  0ECA               	movlw	202
  2778  0006CA                     u1167:
  2779  0006CA  2EE8               	decfsz	wreg,f,c
  2780  0006CC  D7FE               	goto	u1167
  2781  0006CE  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2782  0006D0  D7FC               	goto	u1167
  2783                           
  2784                           ;user.c: 322: _delay((unsigned long)((2)*(64000000/4000.0)));
  2785  0006D2  0E2A               	movlw	42
  2786  0006D4  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2787  0006D6  0E8E               	movlw	142
  2788  0006D8                     u1177:
  2789  0006D8  2EE8               	decfsz	wreg,f,c
  2790  0006DA  D7FE               	goto	u1177
  2791  0006DC  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2792  0006DE  D7FC               	goto	u1177
  2793                           
  2794                           ;user.c: 323: LATC4=0;
  2795  0006E0  988B               	bcf	3979,4,c	;volatile
  2796                           
  2797                           ;user.c: 324: LATC5=1;
  2798  0006E2  8A8B               	bsf	3979,5,c	;volatile
  2799                           
  2800                           ;user.c: 325: LATC3=1;
  2801  0006E4  868B               	bsf	3979,3,c	;volatile
  2802                           
  2803                           ;user.c: 326: LATC6=0;
  2804  0006E6  9C8B               	bcf	3979,6,c	;volatile
  2805                           
  2806                           ;user.c: 327: _delay((unsigned long)((10)*(64000000/4000.0)));
  2807  0006E8  0ED0               	movlw	208
  2808  0006EA  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2809  0006EC  0ECA               	movlw	202
  2810  0006EE                     u1187:
  2811  0006EE  2EE8               	decfsz	wreg,f,c
  2812  0006F0  D7FE               	goto	u1187
  2813  0006F2  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2814  0006F4  D7FC               	goto	u1187
  2815                           
  2816                           ;user.c: 328: _delay((unsigned long)((2)*(64000000/4000.0)));
  2817  0006F6  0E2A               	movlw	42
  2818  0006F8  6E20               	movwf	??_abbassaCarrello& (0+255),c
  2819  0006FA  0E8E               	movlw	142
  2820  0006FC                     u1197:
  2821  0006FC  2EE8               	decfsz	wreg,f,c
  2822  0006FE  D7FE               	goto	u1197
  2823  000700  2E20               	decfsz	??_abbassaCarrello& (0+255),f,c
  2824  000702  D7FC               	goto	u1197
  2825  000704  0100               	movlb	0	; () banked
  2826  000706  2B61               	incf	abbassaCarrello@p_1005& (0+255),f,b
  2827  000708  D7AF               	goto	l2185
  2828  00070A                     l368:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;user.c: 331: }
  2832                           ;user.c: 332: LATC7 = 0;
  2833  00070A  9E8B               	bcf	3979,7,c	;volatile
  2834                           
  2835                           ; BSR set to: 0
  2836  00070C  0012               	return		;funcret
  2837  00070E                     __end_of_abbassaCarrello:
  2838                           	opt stack 0
  2839                           tblptru	equ	0xFF8
  2840                           tblptrh	equ	0xFF7
  2841                           tblptrl	equ	0xFF6
  2842                           tablat	equ	0xFF5
  2843                           intcon	equ	0xFF2
  2844                           intcon2	equ	0xFF1
  2845                           intcon3	equ	0xFF0
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1l	equ	0xFE1
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _SYSTEM_Initialize *****************
  2853 ;; Defined at:
  2854 ;;		line 106 in file "mcc_generated_files/mcc.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2868 ;;      Params:         0       0       0       0
  2869 ;;      Locals:         0       0       0       0
  2870 ;;      Temps:          0       0       0       0
  2871 ;;      Totals:         0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    4
  2875 ;; This function calls:
  2876 ;;		_ADC_Initialize
  2877 ;;		_CCP4_Initialize
  2878 ;;		_EPWM1_Initialize
  2879 ;;		_EPWM2_Initialize
  2880 ;;		_OSCILLATOR_Initialize
  2881 ;;		_PIN_MANAGER_Initialize
  2882 ;;		_TMR1_Initialize
  2883 ;;		_TMR2_Initialize
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text14
  2890  000AA2                     __ptext14:
  2891                           	opt stack 0
  2892  000AA2                     _SYSTEM_Initialize:
  2893                           	opt stack 26
  2894                           
  2895                           ;mcc.c: 108: OSCILLATOR_Initialize();
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;incstack = 0
  2899  000AA2  ECC2  F005         	call	_OSCILLATOR_Initialize	;wreg free
  2900                           
  2901                           ;mcc.c: 109: PIN_MANAGER_Initialize();
  2902  000AA6  EC39  F005         	call	_PIN_MANAGER_Initialize	;wreg free
  2903                           
  2904                           ;mcc.c: 110: ADC_Initialize();
  2905  000AAA  ECAE  F005         	call	_ADC_Initialize	;wreg free
  2906                           
  2907                           ;mcc.c: 111: TMR2_Initialize();
  2908  000AAE  ECB9  F005         	call	_TMR2_Initialize	;wreg free
  2909                           
  2910                           ;mcc.c: 112: EPWM1_Initialize();
  2911  000AB2  EC82  F005         	call	_EPWM1_Initialize	;wreg free
  2912                           
  2913                           ;mcc.c: 113: EPWM2_Initialize();
  2914  000AB6  EC72  F005         	call	_EPWM2_Initialize	;wreg free
  2915                           
  2916                           ;mcc.c: 114: TMR1_Initialize();
  2917  000ABA  EC62  F005         	call	_TMR1_Initialize	;wreg free
  2918                           
  2919                           ;mcc.c: 115: CCP4_Initialize();
  2920  000ABE  ECA1  F005         	call	_CCP4_Initialize	;wreg free
  2921  000AC2  0012               	return		;funcret
  2922  000AC4                     __end_of_SYSTEM_Initialize:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           intcon	equ	0xFF2
  2929                           intcon2	equ	0xFF1
  2930                           intcon3	equ	0xFF0
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           postdec1	equ	0xFE5
  2934                           fsr1l	equ	0xFE1
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _TMR2_Initialize *****************
  2938 ;; Defined at:
  2939 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2953 ;;      Params:         0       0       0       0
  2954 ;;      Locals:         0       0       0       0
  2955 ;;      Temps:          0       0       0       0
  2956 ;;      Totals:         0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    3
  2960 ;; This function calls:
  2961 ;;		_TMR2_StartTimer
  2962 ;; This function is called by:
  2963 ;;		_SYSTEM_Initialize
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text15
  2968  000B72                     __ptext15:
  2969                           	opt stack 0
  2970  000B72                     _TMR2_Initialize:
  2971                           	opt stack 26
  2972                           
  2973                           ;tmr2.c: 63: T2CON = 0x02;
  2974                           
  2975                           ;incstack = 0
  2976  000B72  0E02               	movlw	2
  2977  000B74  6EBA               	movwf	4026,c	;volatile
  2978                           
  2979                           ;tmr2.c: 66: PR2 = 0xFF;
  2980  000B76  68BB               	setf	4027,c	;volatile
  2981                           
  2982                           ;tmr2.c: 69: TMR2 = 0x00;
  2983  000B78  0E00               	movlw	0
  2984  000B7A  6EBC               	movwf	4028,c	;volatile
  2985                           
  2986                           ;tmr2.c: 72: PIR1bits.TMR2IF = 0;
  2987  000B7C  929E               	bcf	3998,1,c	;volatile
  2988                           
  2989                           ;tmr2.c: 75: TMR2_StartTimer();
  2990  000B7E  ECCB  F005         	call	_TMR2_StartTimer	;wreg free
  2991  000B82  0012               	return		;funcret
  2992  000B84                     __end_of_TMR2_Initialize:
  2993                           	opt stack 0
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           intcon	equ	0xFF2
  2999                           intcon2	equ	0xFF1
  3000                           intcon3	equ	0xFF0
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postdec1	equ	0xFE5
  3004                           fsr1l	equ	0xFE1
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function _TMR2_StartTimer *****************
  3008 ;; Defined at:
  3009 ;;		line 78 in file "mcc_generated_files/tmr2.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		None
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3023 ;;      Params:         0       0       0       0
  3024 ;;      Locals:         0       0       0       0
  3025 ;;      Temps:          0       0       0       0
  3026 ;;      Totals:         0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    2
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_TMR2_Initialize
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text16
  3038  000B96                     __ptext16:
  3039                           	opt stack 0
  3040  000B96                     _TMR2_StartTimer:
  3041                           	opt stack 26
  3042                           
  3043                           ;tmr2.c: 81: T2CONbits.TMR2ON = 1;
  3044                           
  3045                           ;incstack = 0
  3046  000B96  84BA               	bsf	4026,2,c	;volatile
  3047  000B98  0012               	return		;funcret
  3048  000B9A                     __end_of_TMR2_StartTimer:
  3049                           	opt stack 0
  3050                           tblptru	equ	0xFF8
  3051                           tblptrh	equ	0xFF7
  3052                           tblptrl	equ	0xFF6
  3053                           tablat	equ	0xFF5
  3054                           intcon	equ	0xFF2
  3055                           intcon2	equ	0xFF1
  3056                           intcon3	equ	0xFF0
  3057                           postinc0	equ	0xFEE
  3058                           wreg	equ	0xFE8
  3059                           postdec1	equ	0xFE5
  3060                           fsr1l	equ	0xFE1
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _TMR1_Initialize *****************
  3064 ;; Defined at:
  3065 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3079 ;;      Params:         0       0       0       0
  3080 ;;      Locals:         0       0       0       0
  3081 ;;      Temps:          0       0       0       0
  3082 ;;      Totals:         0       0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    3
  3086 ;; This function calls:
  3087 ;;		_TMR1_StartTimer
  3088 ;; This function is called by:
  3089 ;;		_SYSTEM_Initialize
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text17
  3094  000AC4                     __ptext17:
  3095                           	opt stack 0
  3096  000AC4                     _TMR1_Initialize:
  3097                           	opt stack 26
  3098                           
  3099                           ;tmr1.c: 68: T1CON = 0x00;
  3100                           
  3101                           ;incstack = 0
  3102  000AC4  0E00               	movlw	0
  3103  000AC6  6ECD               	movwf	4045,c	;volatile
  3104                           
  3105                           ;tmr1.c: 71: T1GCON = 0x00;
  3106  000AC8  0E00               	movlw	0
  3107  000ACA  6ECC               	movwf	4044,c	;volatile
  3108                           
  3109                           ;tmr1.c: 74: TMR1H = 0x00;
  3110  000ACC  0E00               	movlw	0
  3111  000ACE  6ECF               	movwf	4047,c	;volatile
  3112                           
  3113                           ;tmr1.c: 77: TMR1L = 0x00;
  3114  000AD0  0E00               	movlw	0
  3115  000AD2  6ECE               	movwf	4046,c	;volatile
  3116                           
  3117                           ;tmr1.c: 80: timer1ReloadVal=TMR1;
  3118  000AD4  CFCE F03A          	movff	4046,_timer1ReloadVal	;volatile
  3119  000AD8  CFCF F03B          	movff	4047,_timer1ReloadVal+1	;volatile
  3120                           
  3121                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  3122  000ADC  909E               	bcf	3998,0,c	;volatile
  3123                           
  3124                           ;tmr1.c: 86: TMR1_StartTimer();
  3125  000ADE  ECCD  F005         	call	_TMR1_StartTimer	;wreg free
  3126  000AE2  0012               	return		;funcret
  3127  000AE4                     __end_of_TMR1_Initialize:
  3128                           	opt stack 0
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           intcon	equ	0xFF2
  3134                           intcon2	equ	0xFF1
  3135                           intcon3	equ	0xFF0
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           postdec1	equ	0xFE5
  3139                           fsr1l	equ	0xFE1
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function _TMR1_StartTimer *****************
  3143 ;; Defined at:
  3144 ;;		line 89 in file "mcc_generated_files/tmr1.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		None
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3158 ;;      Params:         0       0       0       0
  3159 ;;      Locals:         0       0       0       0
  3160 ;;      Temps:          0       0       0       0
  3161 ;;      Totals:         0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:    2
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_TMR1_Initialize
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text18
  3173  000B9A                     __ptext18:
  3174                           	opt stack 0
  3175  000B9A                     _TMR1_StartTimer:
  3176                           	opt stack 26
  3177                           
  3178                           ;tmr1.c: 92: T1CONbits.TMR1ON = 1;
  3179                           
  3180                           ;incstack = 0
  3181  000B9A  80CD               	bsf	4045,0,c	;volatile
  3182  000B9C  0012               	return		;funcret
  3183  000B9E                     __end_of_TMR1_StartTimer:
  3184                           	opt stack 0
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           intcon	equ	0xFF2
  3190                           intcon2	equ	0xFF1
  3191                           intcon3	equ	0xFF0
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           postdec1	equ	0xFE5
  3195                           fsr1l	equ	0xFE1
  3196                           status	equ	0xFD8
  3197                           
  3198 ;; *************** function _PIN_MANAGER_Initialize *****************
  3199 ;; Defined at:
  3200 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3214 ;;      Params:         0       0       0       0
  3215 ;;      Locals:         0       0       0       0
  3216 ;;      Temps:          0       0       0       0
  3217 ;;      Totals:         0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    2
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_SYSTEM_Initialize
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text19
  3229  000A72                     __ptext19:
  3230                           	opt stack 0
  3231  000A72                     _PIN_MANAGER_Initialize:
  3232                           	opt stack 27
  3233                           
  3234                           ;pin_manager.c: 52: LATA = 0x00;
  3235                           
  3236                           ;incstack = 0
  3237  000A72  0E00               	movlw	0
  3238  000A74  6E89               	movwf	3977,c	;volatile
  3239                           
  3240                           ;pin_manager.c: 53: TRISA = 0xFF;
  3241  000A76  6892               	setf	3986,c	;volatile
  3242                           
  3243                           ;pin_manager.c: 54: ANSELA = 0x2F;
  3244  000A78  0E2F               	movlw	47
  3245  000A7A  010F               	movlb	15	; () banked
  3246  000A7C  6F38               	movwf	56,b	;volatile
  3247                           
  3248                           ;pin_manager.c: 56: LATB = 0x00;
  3249  000A7E  0E00               	movlw	0
  3250  000A80  6E8A               	movwf	3978,c	;volatile
  3251                           
  3252                           ;pin_manager.c: 57: TRISB = 0xFE;
  3253  000A82  0EFE               	movlw	254
  3254  000A84  6E93               	movwf	3987,c	;volatile
  3255                           
  3256                           ;pin_manager.c: 58: ANSELB = 0x3E;
  3257  000A86  0E3E               	movlw	62
  3258  000A88  010F               	movlb	15	; () banked
  3259  000A8A  6F39               	movwf	57,b	;volatile
  3260                           
  3261                           ;pin_manager.c: 59: WPUB = 0x00;
  3262  000A8C  0E00               	movlw	0
  3263  000A8E  6E61               	movwf	3937,c	;volatile
  3264                           
  3265                           ;pin_manager.c: 61: LATC = 0x00;
  3266  000A90  0E00               	movlw	0
  3267  000A92  6E8B               	movwf	3979,c	;volatile
  3268                           
  3269                           ;pin_manager.c: 62: TRISC = 0xF9;
  3270  000A94  0EF9               	movlw	249
  3271  000A96  6E94               	movwf	3988,c	;volatile
  3272                           
  3273                           ;pin_manager.c: 63: ANSELC = 0xF8;
  3274  000A98  0EF8               	movlw	248
  3275  000A9A  010F               	movlb	15	; () banked
  3276  000A9C  6F3A               	movwf	58,b	;volatile
  3277                           
  3278                           ; BSR set to: 15
  3279                           ;pin_manager.c: 65: INTCON2bits.nRBPU = 0x01;
  3280  000A9E  8EF1               	bsf	intcon2,7,c	;volatile
  3281                           
  3282                           ; BSR set to: 15
  3283  000AA0  0012               	return		;funcret
  3284  000AA2                     __end_of_PIN_MANAGER_Initialize:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           intcon	equ	0xFF2
  3291                           intcon2	equ	0xFF1
  3292                           intcon3	equ	0xFF0
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postdec1	equ	0xFE5
  3296                           fsr1l	equ	0xFE1
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _OSCILLATOR_Initialize *****************
  3300 ;; Defined at:
  3301 ;;		line 118 in file "mcc_generated_files/mcc.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3315 ;;      Params:         0       0       0       0
  3316 ;;      Locals:         0       0       0       0
  3317 ;;      Temps:          0       0       0       0
  3318 ;;      Totals:         0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    2
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_SYSTEM_Initialize
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text20
  3330  000B84                     __ptext20:
  3331                           	opt stack 0
  3332  000B84                     _OSCILLATOR_Initialize:
  3333                           	opt stack 27
  3334                           
  3335                           ;mcc.c: 121: OSCCON = 0x70;
  3336                           
  3337                           ; BSR set to: 15
  3338                           ;incstack = 0
  3339  000B84  0E70               	movlw	112
  3340  000B86  6ED3               	movwf	4051,c	;volatile
  3341                           
  3342                           ;mcc.c: 123: OSCCON2 = 0x04;
  3343  000B88  0E04               	movlw	4
  3344  000B8A  6ED2               	movwf	4050,c	;volatile
  3345                           
  3346                           ;mcc.c: 125: OSCTUNE = 0x40;
  3347  000B8C  0E40               	movlw	64
  3348  000B8E  6E9B               	movwf	3995,c	;volatile
  3349  000B90  0012               	return		;funcret
  3350  000B92                     __end_of_OSCILLATOR_Initialize:
  3351                           	opt stack 0
  3352                           tblptru	equ	0xFF8
  3353                           tblptrh	equ	0xFF7
  3354                           tblptrl	equ	0xFF6
  3355                           tablat	equ	0xFF5
  3356                           intcon	equ	0xFF2
  3357                           intcon2	equ	0xFF1
  3358                           intcon3	equ	0xFF0
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           postdec1	equ	0xFE5
  3362                           fsr1l	equ	0xFE1
  3363                           status	equ	0xFD8
  3364                           
  3365 ;; *************** function _EPWM2_Initialize *****************
  3366 ;; Defined at:
  3367 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3381 ;;      Params:         0       0       0       0
  3382 ;;      Locals:         0       0       0       0
  3383 ;;      Temps:          0       0       0       0
  3384 ;;      Totals:         0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    2
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_SYSTEM_Initialize
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text21
  3396  000AE4                     __ptext21:
  3397                           	opt stack 0
  3398  000AE4                     _EPWM2_Initialize:
  3399                           	opt stack 27
  3400                           
  3401                           ;epwm2.c: 69: CCP2CON = 0x3C;
  3402                           
  3403                           ;incstack = 0
  3404  000AE4  0E3C               	movlw	60
  3405  000AE6  6E66               	movwf	3942,c	;volatile
  3406                           
  3407                           ;epwm2.c: 72: ECCP2AS = 0x00;
  3408  000AE8  0E00               	movlw	0
  3409  000AEA  6E64               	movwf	3940,c	;volatile
  3410                           
  3411                           ;epwm2.c: 75: PWM2CON = 0x80;
  3412  000AEC  0E80               	movlw	128
  3413  000AEE  6E65               	movwf	3941,c	;volatile
  3414                           
  3415                           ;epwm2.c: 78: PSTR2CON = 0x01;
  3416  000AF0  0E01               	movlw	1
  3417  000AF2  6E63               	movwf	3939,c	;volatile
  3418                           
  3419                           ;epwm2.c: 81: CCPR2L = 0x7F;
  3420  000AF4  0E7F               	movlw	127
  3421  000AF6  6E67               	movwf	3943,c	;volatile
  3422                           
  3423                           ;epwm2.c: 84: CCPR2H = 0x00;
  3424  000AF8  0E00               	movlw	0
  3425  000AFA  6E68               	movwf	3944,c	;volatile
  3426                           
  3427                           ;epwm2.c: 88: CCPTMRS0bits.C2TSEL = 0x0;
  3428  000AFC  0EE7               	movlw	-25
  3429  000AFE  010F               	movlb	15	; () banked
  3430  000B00  1749               	andwf	73,f,b	;volatile
  3431                           
  3432                           ; BSR set to: 15
  3433  000B02  0012               	return		;funcret
  3434  000B04                     __end_of_EPWM2_Initialize:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           intcon	equ	0xFF2
  3441                           intcon2	equ	0xFF1
  3442                           intcon3	equ	0xFF0
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           postdec1	equ	0xFE5
  3446                           fsr1l	equ	0xFE1
  3447                           status	equ	0xFD8
  3448                           
  3449 ;; *************** function _EPWM1_Initialize *****************
  3450 ;; Defined at:
  3451 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3465 ;;      Params:         0       0       0       0
  3466 ;;      Locals:         0       0       0       0
  3467 ;;      Temps:          0       0       0       0
  3468 ;;      Totals:         0       0       0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    2
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_SYSTEM_Initialize
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text22
  3480  000B04                     __ptext22:
  3481                           	opt stack 0
  3482  000B04                     _EPWM1_Initialize:
  3483                           	opt stack 27
  3484                           
  3485                           ;epwm1.c: 69: CCP1CON = 0x3C;
  3486                           
  3487                           ; BSR set to: 15
  3488                           ;incstack = 0
  3489  000B04  0E3C               	movlw	60
  3490  000B06  6EBD               	movwf	4029,c	;volatile
  3491                           
  3492                           ;epwm1.c: 72: ECCP1AS = 0x00;
  3493  000B08  0E00               	movlw	0
  3494  000B0A  6EB6               	movwf	4022,c	;volatile
  3495                           
  3496                           ;epwm1.c: 75: PWM1CON = 0x80;
  3497  000B0C  0E80               	movlw	128
  3498  000B0E  6EB7               	movwf	4023,c	;volatile
  3499                           
  3500                           ;epwm1.c: 78: PSTR1CON = 0x01;
  3501  000B10  0E01               	movlw	1
  3502  000B12  6EB9               	movwf	4025,c	;volatile
  3503                           
  3504                           ;epwm1.c: 81: CCPR1L = 0x7F;
  3505  000B14  0E7F               	movlw	127
  3506  000B16  6EBE               	movwf	4030,c	;volatile
  3507                           
  3508                           ;epwm1.c: 84: CCPR1H = 0x00;
  3509  000B18  0E00               	movlw	0
  3510  000B1A  6EBF               	movwf	4031,c	;volatile
  3511                           
  3512                           ;epwm1.c: 88: CCPTMRS0bits.C1TSEL = 0x0;
  3513  000B1C  0EFC               	movlw	-4
  3514  000B1E  010F               	movlb	15	; () banked
  3515  000B20  1749               	andwf	73,f,b	;volatile
  3516                           
  3517                           ; BSR set to: 15
  3518  000B22  0012               	return		;funcret
  3519  000B24                     __end_of_EPWM1_Initialize:
  3520                           	opt stack 0
  3521                           tblptru	equ	0xFF8
  3522                           tblptrh	equ	0xFF7
  3523                           tblptrl	equ	0xFF6
  3524                           tablat	equ	0xFF5
  3525                           intcon	equ	0xFF2
  3526                           intcon2	equ	0xFF1
  3527                           intcon3	equ	0xFF0
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           postdec1	equ	0xFE5
  3531                           fsr1l	equ	0xFE1
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _CCP4_Initialize *****************
  3535 ;; Defined at:
  3536 ;;		line 58 in file "mcc_generated_files/ccp4.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3550 ;;      Params:         0       0       0       0
  3551 ;;      Locals:         0       0       0       0
  3552 ;;      Temps:          0       0       0       0
  3553 ;;      Totals:         0       0       0       0
  3554 ;;Total ram usage:        0 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    2
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_SYSTEM_Initialize
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text23
  3565  000B42                     __ptext23:
  3566                           	opt stack 0
  3567  000B42                     _CCP4_Initialize:
  3568                           	opt stack 27
  3569                           
  3570                           ;ccp4.c: 63: CCP4CON = 0x02;
  3571                           
  3572                           ; BSR set to: 15
  3573                           ;incstack = 0
  3574  000B42  0E02               	movlw	2
  3575  000B44  010F               	movlb	15	; () banked
  3576  000B46  6F57               	movwf	87,b	;volatile
  3577                           
  3578                           ;ccp4.c: 66: CCPR4L = 0x00;
  3579  000B48  0E00               	movlw	0
  3580  000B4A  010F               	movlb	15	; () banked
  3581  000B4C  6F58               	movwf	88,b	;volatile
  3582                           
  3583                           ;ccp4.c: 69: CCPR4H = 0x00;
  3584  000B4E  0E00               	movlw	0
  3585  000B50  010F               	movlb	15	; () banked
  3586  000B52  6F59               	movwf	89,b	;volatile
  3587                           
  3588                           ;ccp4.c: 72: CCPTMRS1bits.C4TSEL = 0x0;
  3589  000B54  0EFC               	movlw	-4
  3590  000B56  010F               	movlb	15	; () banked
  3591  000B58  1748               	andwf	72,f,b	;volatile
  3592                           
  3593                           ; BSR set to: 15
  3594  000B5A  0012               	return		;funcret
  3595  000B5C                     __end_of_CCP4_Initialize:
  3596                           	opt stack 0
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           intcon	equ	0xFF2
  3602                           intcon2	equ	0xFF1
  3603                           intcon3	equ	0xFF0
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           postdec1	equ	0xFE5
  3607                           fsr1l	equ	0xFE1
  3608                           status	equ	0xFD8
  3609                           
  3610 ;; *************** function _ADC_Initialize *****************
  3611 ;; Defined at:
  3612 ;;		line 59 in file "mcc_generated_files/adc.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3626 ;;      Params:         0       0       0       0
  3627 ;;      Locals:         0       0       0       0
  3628 ;;      Temps:          0       0       0       0
  3629 ;;      Totals:         0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    2
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_SYSTEM_Initialize
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text24
  3641  000B5C                     __ptext24:
  3642                           	opt stack 0
  3643  000B5C                     _ADC_Initialize:
  3644                           	opt stack 27
  3645                           
  3646                           ;adc.c: 64: ADCON0 = 0x01;
  3647                           
  3648                           ; BSR set to: 15
  3649                           ;incstack = 0
  3650  000B5C  0E01               	movlw	1
  3651  000B5E  6EC2               	movwf	4034,c	;volatile
  3652                           
  3653                           ;adc.c: 67: ADCON1 = 0x80;
  3654  000B60  0E80               	movlw	128
  3655  000B62  6EC1               	movwf	4033,c	;volatile
  3656                           
  3657                           ;adc.c: 70: ADCON2 = 0x8E;
  3658  000B64  0E8E               	movlw	142
  3659  000B66  6EC0               	movwf	4032,c	;volatile
  3660                           
  3661                           ;adc.c: 73: ADRESL = 0x00;
  3662  000B68  0E00               	movlw	0
  3663  000B6A  6EC3               	movwf	4035,c	;volatile
  3664                           
  3665                           ;adc.c: 76: ADRESH = 0x00;
  3666  000B6C  0E00               	movlw	0
  3667  000B6E  6EC4               	movwf	4036,c	;volatile
  3668  000B70  0012               	return		;funcret
  3669  000B72                     __end_of_ADC_Initialize:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           intcon	equ	0xFF2
  3676                           intcon2	equ	0xFF1
  3677                           intcon3	equ	0xFF0
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           postdec1	equ	0xFE5
  3681                           fsr1l	equ	0xFE1
  3682                           status	equ	0xFD8
  3683                           
  3684 ;; *************** function _InitApp *****************
  3685 ;; Defined at:
  3686 ;;		line 30 in file "user.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3700 ;;      Params:         0       0       0       0
  3701 ;;      Locals:         0       0       0       0
  3702 ;;      Temps:          0       0       0       0
  3703 ;;      Totals:         0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text25
  3715  000B24                     __ptext25:
  3716                           	opt stack 0
  3717  000B24                     _InitApp:
  3718                           	opt stack 28
  3719                           
  3720                           ;user.c: 33: TRISAbits.RA0 = 0;
  3721                           
  3722                           ;incstack = 0
  3723  000B24  9092               	bcf	3986,0,c	;volatile
  3724                           
  3725                           ;user.c: 34: TRISAbits.RA1 = 0;
  3726  000B26  9292               	bcf	3986,1,c	;volatile
  3727                           
  3728                           ;user.c: 35: TRISAbits.RA2 = 0;
  3729  000B28  9492               	bcf	3986,2,c	;volatile
  3730                           
  3731                           ;user.c: 36: TRISAbits.RA3 = 0;
  3732  000B2A  9692               	bcf	3986,3,c	;volatile
  3733                           
  3734                           ;user.c: 37: TRISAbits.RA4 = 0;
  3735  000B2C  9892               	bcf	3986,4,c	;volatile
  3736                           
  3737                           ;user.c: 38: TRISAbits.RA5 = 1;
  3738  000B2E  8A92               	bsf	3986,5,c	;volatile
  3739                           
  3740                           ;user.c: 40: TRISBbits.RB0 = 0;
  3741  000B30  9093               	bcf	3987,0,c	;volatile
  3742                           
  3743                           ;user.c: 41: TRISBbits.RB1 = 1;
  3744  000B32  8293               	bsf	3987,1,c	;volatile
  3745                           
  3746                           ;user.c: 42: TRISBbits.RB2 = 1;
  3747  000B34  8493               	bsf	3987,2,c	;volatile
  3748                           
  3749                           ;user.c: 43: TRISBbits.RB3 = 1;
  3750  000B36  8693               	bsf	3987,3,c	;volatile
  3751                           
  3752                           ;user.c: 44: TRISBbits.RB4 = 1;
  3753  000B38  8893               	bsf	3987,4,c	;volatile
  3754                           
  3755                           ;user.c: 45: TRISBbits.RB5 = 1;
  3756  000B3A  8A93               	bsf	3987,5,c	;volatile
  3757                           
  3758                           ;user.c: 48: TRISC = 0x00;
  3759  000B3C  0E00               	movlw	0
  3760  000B3E  6E94               	movwf	3988,c	;volatile
  3761  000B40  0012               	return		;funcret
  3762  000B42                     __end_of_InitApp:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           intcon	equ	0xFF2
  3769                           intcon2	equ	0xFF1
  3770                           intcon3	equ	0xFF0
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           postdec1	equ	0xFE5
  3774                           fsr1l	equ	0xFE1
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function _low_isr *****************
  3778 ;; Defined at:
  3779 ;;		line 67 in file "interrupts.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		None
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3793 ;;      Params:         0       0       0       0
  3794 ;;      Locals:         0       0       0       0
  3795 ;;      Temps:         17       0       0       0
  3796 ;;      Totals:        17       0       0       0
  3797 ;;Total ram usage:       17 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		Interrupt level 1
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	intcodelo
  3808  000018                     __pintcodelo:
  3809                           	opt stack 0
  3810  000018                     _low_isr:
  3811                           	opt stack 26
  3812                           
  3813                           ;incstack = 0
  3814  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3815  00001A  CFD8 F00F          	movff	status,??_low_isr
  3816  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
  3817  000022  CFE0 F011          	movff	bsr,??_low_isr+2
  3818  000026  CFFA F012          	movff	pclath,??_low_isr+3
  3819  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
  3820  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
  3821  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
  3822  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
  3823  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
  3824  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
  3825  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
  3826  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
  3827  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
  3828  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  3829  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  3830  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
  3831  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
  3832  00005E  C01F  FFF5         	movff	??_low_isr+16,tablat
  3833  000062  C01E  FFF8         	movff	??_low_isr+15,tblptru
  3834  000066  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  3835  00006A  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  3836  00006E  C01B  FFF4         	movff	??_low_isr+12,prodh
  3837  000072  C01A  FFF3         	movff	??_low_isr+11,prodl
  3838  000076  C019  FFDA         	movff	??_low_isr+10,fsr2h
  3839  00007A  C018  FFD9         	movff	??_low_isr+9,fsr2l
  3840  00007E  C017  FFE2         	movff	??_low_isr+8,fsr1h
  3841  000082  C016  FFE1         	movff	??_low_isr+7,fsr1l
  3842  000086  C015  FFEA         	movff	??_low_isr+6,fsr0h
  3843  00008A  C014  FFE9         	movff	??_low_isr+5,fsr0l
  3844  00008E  C013  FFFB         	movff	??_low_isr+4,pclatu
  3845  000092  C012  FFFA         	movff	??_low_isr+3,pclath
  3846  000096  C011  FFE0         	movff	??_low_isr+2,bsr
  3847  00009A  C010  FFE8         	movff	??_low_isr+1,wreg
  3848  00009E  C00F  FFD8         	movff	??_low_isr,status
  3849  0000A2  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3850  0000A4  0010               	retfie	
  3851  0000A6                     __end_of_low_isr:
  3852                           	opt stack 0
  3853                           pclatu	equ	0xFFB
  3854                           pclath	equ	0xFFA
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           intcon2	equ	0xFF1
  3863                           intcon3	equ	0xFF0
  3864                           postinc0	equ	0xFEE
  3865                           fsr0h	equ	0xFEA
  3866                           fsr0l	equ	0xFE9
  3867                           wreg	equ	0xFE8
  3868                           postdec1	equ	0xFE5
  3869                           fsr1h	equ	0xFE2
  3870                           fsr1l	equ	0xFE1
  3871                           bsr	equ	0xFE0
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function _high_isr *****************
  3877 ;; Defined at:
  3878 ;;		line 27 in file "interrupts.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		None
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3892 ;;      Params:         0       0       0       0
  3893 ;;      Locals:         0       0       0       0
  3894 ;;      Temps:         14       0       0       0
  3895 ;;      Totals:        14       0       0       0
  3896 ;;Total ram usage:       14 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		Interrupt level 2
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	intcode
  3906  000008                     __pintcode:
  3907                           	opt stack 0
  3908  000008                     _high_isr:
  3909                           	opt stack 26
  3910                           
  3911                           ;incstack = 0
  3912  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3913  00000A  CFFA F001          	movff	pclath,??_high_isr
  3914  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
  3915  000012  EF18  F004         	goto	int_func
  3916                           pclatu	equ	0xFFB
  3917                           pclath	equ	0xFFA
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           intcon2	equ	0xFF1
  3926                           intcon3	equ	0xFF0
  3927                           postinc0	equ	0xFEE
  3928                           fsr0h	equ	0xFEA
  3929                           fsr0l	equ	0xFE9
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           fsr1h	equ	0xFE2
  3933                           fsr1l	equ	0xFE1
  3934                           bsr	equ	0xFE0
  3935                           fsr2h	equ	0xFDA
  3936                           fsr2l	equ	0xFD9
  3937                           status	equ	0xFD8
  3938                           
  3939                           	psect	intcode_body
  3940  000830                     __pintcode_body:
  3941                           	opt stack 26
  3942  000830                     int_func:
  3943                           	opt stack 26
  3944  000830  CFE9 F003          	movff	fsr0l,??_high_isr+2
  3945  000834  CFEA F004          	movff	fsr0h,??_high_isr+3
  3946  000838  CFE1 F005          	movff	fsr1l,??_high_isr+4
  3947  00083C  CFE2 F006          	movff	fsr1h,??_high_isr+5
  3948  000840  CFD9 F007          	movff	fsr2l,??_high_isr+6
  3949  000844  CFDA F008          	movff	fsr2h,??_high_isr+7
  3950  000848  CFF3 F009          	movff	prodl,??_high_isr+8
  3951  00084C  CFF4 F00A          	movff	prodh,??_high_isr+9
  3952  000850  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  3953  000854  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  3954  000858  CFF8 F00D          	movff	tblptru,??_high_isr+12
  3955  00085C  CFF5 F00E          	movff	tablat,??_high_isr+13
  3956  000860  C00E  FFF5         	movff	??_high_isr+13,tablat
  3957  000864  C00D  FFF8         	movff	??_high_isr+12,tblptru
  3958  000868  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  3959  00086C  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  3960  000870  C00A  FFF4         	movff	??_high_isr+9,prodh
  3961  000874  C009  FFF3         	movff	??_high_isr+8,prodl
  3962  000878  C008  FFDA         	movff	??_high_isr+7,fsr2h
  3963  00087C  C007  FFD9         	movff	??_high_isr+6,fsr2l
  3964  000880  C006  FFE2         	movff	??_high_isr+5,fsr1h
  3965  000884  C005  FFE1         	movff	??_high_isr+4,fsr1l
  3966  000888  C004  FFEA         	movff	??_high_isr+3,fsr0h
  3967  00088C  C003  FFE9         	movff	??_high_isr+2,fsr0l
  3968  000890  C002  FFFB         	movff	??_high_isr+1,pclatu
  3969  000894  C001  FFFA         	movff	??_high_isr,pclath
  3970  000898  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3971  00089A  0011               	retfie		f
  3972  00089C                     __end_of_high_isr:
  3973                           	opt stack 0
  3974  0000                     pclatu	equ	0xFFB
  3975                           pclath	equ	0xFFA
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           intcon	equ	0xFF2
  3983                           intcon2	equ	0xFF1
  3984                           intcon3	equ	0xFF0
  3985                           postinc0	equ	0xFEE
  3986                           fsr0h	equ	0xFEA
  3987                           fsr0l	equ	0xFE9
  3988                           wreg	equ	0xFE8
  3989                           postdec1	equ	0xFE5
  3990                           fsr1h	equ	0xFE2
  3991                           fsr1l	equ	0xFE1
  3992                           bsr	equ	0xFE0
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           pclatu	equ	0xFFB
  3997                           pclath	equ	0xFFA
  3998                           tblptru	equ	0xFF8
  3999                           tblptrh	equ	0xFF7
  4000                           tblptrl	equ	0xFF6
  4001                           tablat	equ	0xFF5
  4002                           prodh	equ	0xFF4
  4003                           prodl	equ	0xFF3
  4004                           intcon	equ	0xFF2
  4005                           intcon2	equ	0xFF1
  4006                           intcon3	equ	0xFF0
  4007                           postinc0	equ	0xFEE
  4008                           fsr0h	equ	0xFEA
  4009                           fsr0l	equ	0xFE9
  4010                           wreg	equ	0xFE8
  4011                           postdec1	equ	0xFE5
  4012                           fsr1h	equ	0xFE2
  4013                           fsr1l	equ	0xFE1
  4014                           bsr	equ	0xFE0
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019                           	psect	rparam
  4020  0000                     pclatu	equ	0xFFB
  4021                           pclath	equ	0xFFA
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           intcon3	equ	0xFF0
  4031                           postinc0	equ	0xFEE
  4032                           fsr0h	equ	0xFEA
  4033                           fsr0l	equ	0xFE9
  4034                           wreg	equ	0xFE8
  4035                           postdec1	equ	0xFE5
  4036                           fsr1h	equ	0xFE2
  4037                           fsr1l	equ	0xFE1
  4038                           bsr	equ	0xFE0
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           
  4043                           	psect	temp
  4044  000040                     btemp:
  4045                           	opt stack 0
  4046  000040                     	ds	1
  4047  0000                     int$flags	set	btemp
  4048                           pclatu	equ	0xFFB
  4049                           pclath	equ	0xFFA
  4050                           tblptru	equ	0xFF8
  4051                           tblptrh	equ	0xFF7
  4052                           tblptrl	equ	0xFF6
  4053                           tablat	equ	0xFF5
  4054                           prodh	equ	0xFF4
  4055                           prodl	equ	0xFF3
  4056                           intcon	equ	0xFF2
  4057                           intcon2	equ	0xFF1
  4058                           intcon3	equ	0xFF0
  4059                           postinc0	equ	0xFEE
  4060                           fsr0h	equ	0xFEA
  4061                           fsr0l	equ	0xFE9
  4062                           wreg	equ	0xFE8
  4063                           postdec1	equ	0xFE5
  4064                           fsr1h	equ	0xFE2
  4065                           fsr1l	equ	0xFE1
  4066                           bsr	equ	0xFE0
  4067                           fsr2h	equ	0xFDA
  4068                           fsr2l	equ	0xFD9
  4069                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         22
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      63
    BANK0           160     18      18
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ADC_GetConversion
    _main->_EPWM1_LoadDutyValue
    _main->_EPWM2_LoadDutyValue
    _main->_compara
    _main->_sollevaCarrello
    _taratura->_ADC_GetConversion
    _stopM->_EPWM1_LoadDutyValue
    _stopM->_EPWM2_LoadDutyValue
    _seguiLinea->_ADC_GetConversion
    _seguiLinea->_EPWM1_LoadDutyValue
    _seguiLinea->_EPWM2_LoadDutyValue
    _controllaColore->_ADC_GetConversion
    ___lwdiv->_ADC_GetConversion

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_taratura
    _taratura->_delay_mS
    _stopM->_EPWM1_LoadDutyValue
    _stopM->_EPWM2_LoadDutyValue
    _seguiLinea->_ADC_GetConversion
    _controllaColore->_delay_mS
    _delay_mS->___lwdiv
    ___lwdiv->_ADC_GetConversion

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10817
                                             17 BANK0      1     1      0
                  _ADC_GetConversion
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                            _InitApp
                  _SYSTEM_Initialize
                    _abbassaCarrello
                            _compara
                    _controllaColore
                           _delay_mS
                         _seguiLinea
                    _sollevaCarrello
                              _stopM
                           _taratura
 ---------------------------------------------------------------------------------
 (1) _taratura                                             4     4      0    1712
                                             13 BANK0      4     4      0
                  _ADC_GetConversion
                            ___lwdiv
                           _delay_mS
 ---------------------------------------------------------------------------------
 (1) _stopM                                                1     1      0    1852
                                              2 BANK0      1     1      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _sollevaCarrello                                      2     2      0      47
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _seguiLinea                                           2     2      0    1951
                                              3 BANK0      2     2      0
                  _ADC_GetConversion
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2     926
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2     926
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _controllaColore                                      1     1      0    1221
                                             13 BANK0      1     1      0
                  _ADC_GetConversion
                           _delay_mS
 ---------------------------------------------------------------------------------
 (2) _delay_mS                                             3     1      2    1190
                                             10 BANK0      3     1      2
                            ___lwdiv
                          _checkBatt
 ---------------------------------------------------------------------------------
 (3) _checkBatt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     457
                                              3 BANK0      7     3      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                             31 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _compara                                              9     3      6     871
                                             31 COMRAM     2     2      0
                                              0 BANK0      7     1      6
 ---------------------------------------------------------------------------------
 (1) _abbassaCarrello                                      3     3      0      47
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP4_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EPWM1_LoadDutyValue
   _EPWM2_LoadDutyValue
   _InitApp
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP4_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
   _abbassaCarrello
   _compara
   _controllaColore
     _ADC_GetConversion
     _delay_mS
       ___lwdiv
         _ADC_GetConversion (ARG)
       _checkBatt
   _delay_mS
     ___lwdiv
       _ADC_GetConversion (ARG)
     _checkBatt
   _seguiLinea
     _ADC_GetConversion
     _EPWM1_LoadDutyValue
     _EPWM2_LoadDutyValue
   _sollevaCarrello
   _stopM
     _EPWM1_LoadDutyValue
     _EPWM2_LoadDutyValue
   _taratura
     _ADC_GetConversion
     ___lwdiv
       _ADC_GetConversion (ARG)
     _delay_mS
       ___lwdiv
         _ADC_GetConversion (ARG)
       _checkBatt

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     12      12       4       11.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      3F       1       67.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51       8        0.0%
DATA                 0      0      51      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu May 19 19:33:04 2016

                _CCP4_Initialize 0B42     __size_of_EPWM2_LoadDutyValue 003C  
                              _T 0022                                _i 002E  
                             bsr 000FE0                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                              l222 09E2  
                            l330 05D8                              l332 05DC  
                            l309 08F8                              l333 05E4  
                            l334 05EA                              l335 05F0  
                            l327 064E                              l336 05F8  
                            l337 05FE                              l362 071E  
                            l363 07B4                              l367 0672  
                            l368 070A                              l884 0826  
                   __CFG_CPB$OFF 000000                              _PR2 000FBB  
                   __CFG_CPD$OFF 000000                              u760 0440  
                            u770 045E                  _timer1ReloadVal 003A  
                _TMR2_Initialize 0B72                              wreg 000FE8  
       __end_of_EPWM2_Initialize 0B04         __size_of_controllaColore 00C8  
                   __CFG_LVP$OFF 000000                             l2033 093E  
                           l2027 0926                             l2133 0572  
                           l2061 0428                             l2135 0578  
                           l2071 046E                             l2055 03FE  
                           l2151 0716                             l2139 0596  
                           l2075 048C                             l2067 0452  
                           l2307 0276                             l2251 00E6  
                           l2079 0496                             l2423 061E  
                           l2095 05B2                             l2343 0314  
                           l2185 0668                             l2089 04C0  
                           l2425 0642                             l2273 01AE  
                           l2265 015A                             l2099 0604  
                           l2355 0376                             l2259 0124  
                           l2349 0346                             l2269 0184  
                           l1961 07D6                             l1963 07E2  
                           l1973 0818                             l1965 07E8  
                           u1007 0A56                             u1017 0A66  
                           u1107 049E                             u1027 072E  
                           u1117 092E                             u1037 073C  
                           u1127 0682                             u1047 0752  
                           u1137 0690                             u1057 0760  
                           u1147 06A6                             u1067 0776  
                           u1157 06B4                             u1077 0784  
                           _LATA 000F89                             _LATB 000F8A  
                           u1167 06CA                             u1087 079A  
                           _LATC 000F8B                             u1177 06D8  
                           u1097 07A8                             u1187 06EE  
                           u1197 06FC                             _TMR1 000FCE  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 00AA                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 0040  
                  __CFG_BORV$190 000000                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
              taratura@v_sensori 006F                             start 00A6  
                  __CFG_IESO$OFF 000000            ??_EPWM1_LoadDutyValue 0060  
                   ___param_bank 000010                  __end_of_InitApp 0B42  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 0B92  
                          ?_main 0001                  _TMR1_StartTimer 0B9A  
                _sollevaCarrello 070E                            _T1CON 000FCD  
                          _T2CON 000FBA                            _LATA0 007C48  
                          _LATA1 007C49                            _LATA2 007C4A  
                          _LATA3 007C4B                            _LATC0 007C58  
                          _LATA4 007C4C                            _LATC3 007C5B  
                          _LATC4 007C5C                            _LATC5 007C5D  
                          _LATC6 007C5E                            _LATC7 007C5F  
                 __CFG_DEBUG$OFF 000000                  __end_of___lwdiv 0830  
                          _TMR1H 000FCF                            _TMR1L 000FCE  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                  __CFG_WRTB$OFF 000000                  __end_of_compara 08FE  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                          _bluPC 002A                   __CFG_EBTRB$OFF 000000  
                   main@numLinee 0071               __CFG_MCLRE$EXTMCLR 000000  
                          _stopM 0A3A          __end_of_TMR1_Initialize 0AE4  
                __end_of_low_isr 00A6                            tablat 000FF5  
                          status 000FD8          __end_of_CCP4_Initialize 0B5C  
                 __CFG_HFOFST$ON 000000                  _TMR2_StartTimer 0B96  
                 __CFG_PBADEN$ON 000000                  __initialization 0A00  
                   __end_of_main 03E2          __end_of_TMR2_Initialize 0B84  
                         ??_main 0022                    __activetblptr 000002  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1H 000FBF  
                         _CCPR2H 000F68                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                           _CCPR4H 000F59  
                         _CCPR4L 000F58                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         ?_stopM 0001                           _T1GCON 000FCC  
                         _INT1IE 007F83                           _INT1IP 007F86  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
              ??_controllaColore 006D                        ??_InitApp 0020  
                     _V_frontale 0026                 __end_of_delay_mS 094C  
                 __CFG_XINST$OFF 000000                           _V_batt 0024  
                   _CCPTMRS0bits 000F49                     _CCPTMRS1bits 000F48  
                  compara@valore 0060                 __end_of_high_isr 089C  
                  compara@soglia 0062          __end_of_TMR1_StartTimer 0B9E  
        __end_of_sollevaCarrello 07B8                   __CFG_STVREN$ON 000000  
                         _deltaV 002C                        ??___lwdiv 0022  
                         _colore 0036                           clear_0 0A06  
                         _vel_DX 003C                           _vel_SX 003E  
       __size_of_abbassaCarrello 00B2                        ??_compara 0020  
               __end_of_taratura 065C                     __pdataCOMRAM 003C  
                      ??_low_isr 000F                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
       ADC_GetConversion@channel 0062              _EPWM2_LoadDutyValue 094C  
        __end_of_TMR2_StartTimer 0B9A                 ?_TMR1_Initialize 0001  
              _SYSTEM_Initialize 0AA2                       __accesstop 0060  
        __end_of__initialization 0A2C                 ?_CCP4_Initialize 0001  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
              compara@tolleranza 0064                ?_EPWM1_Initialize 0001  
                 __pcstackCOMRAM 0001             ?_EPWM2_LoadDutyValue 0020  
             __size_of_checkBatt 0002              ??_SYSTEM_Initialize 0020  
             ??_EPWM1_Initialize 0020                    __end_of_stopM 0A72  
               ?_TMR2_Initialize 0001                ?_EPWM2_Initialize 0001  
      __end_of_SYSTEM_Initialize 0AC4               ??_EPWM2_Initialize 0020  
                        ??_stopM 0062                  __CFG_PLLCFG$OFF 000000  
                     __pnvCOMRAM 0038               __CFG_CCP2MX$PORTC1 000000  
          ??_EPWM2_LoadDutyValue 0060                 ?_TMR1_StartTimer 0001  
               ?_sollevaCarrello 0001               __CFG_CCP3MX$PORTB5 000000  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        _CCP4CON 000F57                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64          __size_of_ADC_Initialize 0016  
                        _INTEDG1 007F8D                          _OSCCON2 000FD2  
                      ?_delay_mS 006A                __CFG_PRICLKEN$OFF 000000  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                ??_abbassaCarrello 0020  
              __end_of_checkBatt 0BA0                 ?_TMR2_StartTimer 0001  
                     _goal_color 0037                        ?_high_isr 0001  
    __end_of_EPWM1_LoadDutyValue 09C4                      seguiLinea@T 0064  
                        _InitApp 0B24                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                      ?_taratura 0001                          ___lwdiv 07B8  
                        __pcinit 0A00                          __ramtop 0300  
                        __ptext0 00AA                          __ptext1 059C  
                        __ptext2 0A3A                          __ptext3 070E  
                        __ptext4 03E2                          __ptext5 094C  
                        __ptext6 0988                          __ptext7 04D4  
                        __ptext8 08FE                          __ptext9 0B9E  
                        _compara 089C                        _T1CONbits 000FCD  
          _OSCILLATOR_Initialize 0B84                        _T2CONbits 000FBA  
                        _msec_10 0030                  _controllaColore 04D4  
       ??_PIN_MANAGER_Initialize 0020                       ??_delay_mS 006C  
                        _low_isr 0018                          _verdePC 0034  
                        _rossoPC 0032       __size_of_SYSTEM_Initialize 0022  
                     ??_high_isr 0001                   __pintcode_body 0830  
           end_of_initialization 0A2C                    __Lmediumconst 0000  
                        int_func 0830                       _seguiLinea 03E2  
                     ??_taratura 006D                          postdec1 000FE5  
                        postinc0 000FEE                        _PORTBbits 000F81  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                  delay_mS@m_sec 006A                 sollevaCarrello@p 0021  
        __end_of_controllaColore 059C                    __pidataCOMRAM 0B92  
                 _ADC_Initialize 0B5C           ?_OSCILLATOR_Initialize 0001  
            start_initialization 0A00        __size_of_EPWM1_Initialize 0020  
__size_of_PIN_MANAGER_Initialize 0030     EPWM1_LoadDutyValue@dutyValue 0020  
                    ?_seguiLinea 0001        __size_of_EPWM2_Initialize 0020  
       __size_of_TMR1_Initialize 0020         __size_of_CCP4_Initialize 001A  
         __end_of_ADC_Initialize 0B72                  _abbassaCarrello 065C  
               abbassaCarrello@p 0060                      __pbssCOMRAM 0022  
                  __pcstackBANK0 0060         __size_of_TMR2_Initialize 0012  
              __size_of_delay_mS 004E                __size_of_high_isr 0894  
    __end_of_EPWM2_LoadDutyValue 0988                        _checkBatt 0B9E  
                       ?_InitApp 0001                 ___lwdiv@dividend 0063  
         _PIN_MANAGER_Initialize 0A72                        __pintcode 0008  
              __size_of_taratura 00C0                         ?___lwdiv 0063  
                ?_ADC_Initialize 0001                      __pintcodelo 0018  
               ?_controllaColore 0001                         ?_compara 0060  
            __size_of_seguiLinea 00F2         __size_of_TMR1_StartTimer 0004  
       __size_of_sollevaCarrello 00AA                         ?_low_isr 0001  
               ___lwdiv@quotient 0068                    _V_pulsantiera 0038  
                 __size_of_stopM 0038                       ?_checkBatt 0001  
       __size_of_TMR2_StartTimer 0004                      _compara$971 0066  
                       _PIR1bits 000F9E          __end_of_abbassaCarrello 070E  
                       _PIR4bits 000F7B     __size_of_EPWM1_LoadDutyValue 003C  
               __CFG_WDTPS$32768 000000                         _PSTR1CON 000FB9  
                       _PSTR2CON 000F63                ??_TMR1_Initialize 0020  
                     _ADCON0bits 000FC2                ??_CCP4_Initialize 0020  
               _EPWM1_Initialize 0B04                      _INTCON2bits 000FF1  
                      copy_data0 0A20                ??_TMR2_Initialize 0020  
               __size_of_InitApp 001E                         __Hrparam 0000  
               _EPWM2_Initialize 0AE4                         __Lrparam 0000  
              _ADC_GetConversion 09C4               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTB5 000000          ??_OSCILLATOR_Initialize 0020  
             ?_ADC_GetConversion 0020                 __size_of___lwdiv 0078  
            ??_ADC_GetConversion 0060                 __size_of_compara 0062  
          abbassaCarrello@p_1005 0061                         _delay_mS 08FE  
                ___lwdiv@divisor 0065                  ___lwdiv@counter 0067  
               __size_of_low_isr 008E                         __ptext10 07B8  
                       __ptext11 09C4                         __ptext20 0B84  
                       __ptext12 089C                         __ptext21 0AE4  
                       __ptext13 065C                       _T1GCONbits 000FCC  
                       __ptext22 0B04                         __ptext14 0AA2  
                       __ptext23 0B42                         __ptext15 0B72  
                       __ptext24 0B5C                         __ptext16 0B96  
                       __ptext25 0B24                         __ptext17 0AC4  
                       __ptext18 0B9A                         __ptext19 0A72  
                       _high_isr 0008                ??_TMR1_StartTimer 0020  
              ??_sollevaCarrello 0020                     _V_posteriore 0028  
                    ??_checkBatt 0020                     ??_seguiLinea 0063  
                  __size_of_main 0338        __end_of_ADC_GetConversion 0A00  
                       _taratura 059C                 ?_abbassaCarrello 0001  
                       int$flags 0040                ??_TMR2_StartTimer 0020  
                     _INTCONbits 000FF2               __end_of_seguiLinea 04D4  
                       intlevel1 0000                         intlevel2 0000  
   EPWM2_LoadDutyValue@dutyValue 0020          ?_PIN_MANAGER_Initialize 0001  
               ??_ADC_Initialize 0020                __CFG_T3CMX$PORTC0 000000  
            _EPWM1_LoadDutyValue 0988   __end_of_PIN_MANAGER_Initialize 0AA2  
              __CFG_FOSC$INTIO67 000000       __size_of_ADC_GetConversion 003C  
                _TMR1_Initialize 0AC4         __end_of_EPWM1_Initialize 0B24  
           ?_EPWM1_LoadDutyValue 0020  
